2023-01-10 23:59:09,035 INFO     timeout	30
2023-01-10 23:59:09,035 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-10 23:59:09,035 INFO     threads	4
2023-01-10 23:59:09,035 INFO     samples	0
2023-01-10 23:59:09,036 INFO     brbo2	/root/Documents/workspace/brbo2-impl/
2023-01-10 23:59:09,036 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-10 23:59:09,036 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-10 23:59:09,036 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-10 23:59:09,036 INFO     dry	False
2023-01-10 23:59:09,036 INFO     deps	True
2023-01-10 23:59:09,038 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-10 23:59:09,038 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 23:59:45,049 INFO     Done. Execution time: 36.01114249229431 seconds
2023-01-10 23:59:45,049 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz3990165524458816530/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3990165524458816530/bin -o /tmp/qfuzz3990165524458816530/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3990165524458816530/bin
Found file /tmp/qfuzz3990165524458816530/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz3990165524458816530/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3990165524458816530/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3990165524458816530/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3990165524458816530/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3990165524458816530/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 44, exec speed = 48844 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m48.8k to 48.8k us (average: 48.8k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 68.00; [84.00,152.00,397.00]
0; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 19.00; [93.00,112.00,168.00]
1; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 3; 71.00; [120.00,326.00,397.00]
1; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 131.00; [18.00,149.00]
2; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 3; 94.00; [152.00,246.00,401.00]
3; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 3; 100.00; [18.00,118.00,371.00]
3; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 3; 116.00; [118.00,234.00,419.00]
4; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 3; 100.00; [18.00,118.00,409.00]
5; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 2; 303.00; [18.00,321.00]
5; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 3; 5.00; [26.00,31.00,350.00]
6; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta; 3; 163.00; [18.00,234.00,397.00]
9; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32,+delta; 3; 182.00; [18.00,200.00,411.00]
12; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64,+delta; 3; 185.00; [18.00,226.00,411.00]
24; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8; 3; 69.00; [176.00,328.00,397.00]
29; /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8; 3; 5.00; [40.00,45.00,404.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
/tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 154, 153, 51, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(189, 33, 114, 46, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(174, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(198, 91, 108, 91, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194, 5, 104, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 57, 47, 112, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 44, 166, 5, 4, 105, 109, 21, 80, 154, 7, 46, 58, 20, 28, 12, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 79, 171, 155, 14, 69, 14, 69, 5, 5, 60, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3990165524458816530/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 58, 193, 5, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,154,153,51]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [189,33,114,46,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [174,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [198,91,108,91,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [194,191]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [194,5,104,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,57,47,112,75]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,44,166,5,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,79,171,155]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,58,193,5,11]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.005s
user	0m53.264s
sys	0m3.404s

2023-01-10 23:59:45,050 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-10 23:59:45,050 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-10 23:59:45,051 INFO     Done. Execution time: 0.001276254653930664 seconds
2023-01-10 23:59:45,051 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java': No such file or directory

2023-01-10 23:59:45,051 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-10 23:59:49,292 INFO     Done. Execution time: 4.240441560745239 seconds
2023-01-10 23:59:49,292 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,154,153,51])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 14 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([189,33,114,46,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([174,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,13])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([198,91,108,91,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([194,191])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([194,5,104,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,57,47,112,75])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 14 (57.14%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,44,166,5,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,79,171,155])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,58,193,5,11])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 14 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text          |
------------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,154,153,51]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,154,153,51]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,154,153,51]  |
    13  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,154,153,51]  |
    15  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,154,153,51]  |
    17  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,154,153,51]  |
    20  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,154,153,51]  |
    23  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,154,153,51]  |
    27  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,154,153,51]  |
    35  |          tag = arrayRead(text, i);  |         |  187  |    187  |  1  |  110  |  [187,110,154,153,51]  |
    40  |  chunk = arrayRead(text, (i + 1...  |         |  187  |    154  |  1  |  110  |  [187,110,154,153,51]  |
    43  |                     R = R + chunk;  |    154  |  341  |    154  |  1  |  110  |  [187,110,154,153,51]  |
    47  |                         i = i + 2;  |         |  341  |    154  |  3  |  110  |  [187,110,154,153,51]  |
    48  |              resetPlaceHolder_1();  |         |  341  |    154  |  3  |  110  |  [187,110,154,153,51]  |
    56  |          tag = arrayRead(text, i);  |         |  341  |    154  |  3  |  153  |  [187,110,154,153,51]  |
    61  |  chunk = arrayRead(text, (i + 1...  |         |  341  |     51  |  3  |  153  |  [187,110,154,153,51]  |
    64  |                     R = R + chunk;  |     51  |  392  |     51  |  3  |  153  |  [187,110,154,153,51]  |
    68  |                         i = i + 2;  |         |  392  |     51  |  5  |  153  |  [187,110,154,153,51]  |
    69  |              resetPlaceHolder_1();  |         |  392  |     51  |  5  |  153  |  [187,110,154,153,51]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {43} because there exists a longer and subsuming segment {43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,64} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {43,64} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,43} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {23,43,64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    23  |         R = R + chunk;  |    187  |                         0  |
    43  |         R = R + chunk;  |    154  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    64  |         R = R + chunk;  |     51  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m4.234s
user	0m8.824s
sys	0m1.143s

2023-01-10 23:59:49,292 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 23:59:57,710 INFO     Done. Execution time: 8.418010711669922 seconds
2023-01-10 23:59:57,711 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2359-transparentAmortize-60s-mostPrecise/stac-raw-0110-2359-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.412s
user	0m17.036s
sys	0m2.254s

2023-01-10 23:59:57,711 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-10 23:59:57,711 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:00:33,984 INFO     Done. Execution time: 36.27278995513916 seconds
2023-01-11 00:00:33,984 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz6449363702343008142/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6449363702343008142/bin -o /tmp/qfuzz6449363702343008142/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6449363702343008142/bin
Found file /tmp/qfuzz6449363702343008142/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz6449363702343008142/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6449363702343008142/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6449363702343008142/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6449363702343008142/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6449363702343008142/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 76026 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m76.0k to 76.0k us (average: 76.0k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov,+partition,+delta; 5; 2.00; [23.00,28.00,34.00,36.00,55.00]
2; /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 5; 13.00; [35.00,84.00,310.00,357.00,370.00]
3; /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 5; 13.00; [113.00,126.00,176.00,288.00,389.00]
4; /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 4; 5.00; [163.00,168.00,176.00,211.00]
6; /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 13.00; [162.00,193.00,206.00,277.00,316.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov,+partition,+delta
/tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 132, 8, 22, 5, 22, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 30, 33, 161, 146, 127, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 135, 79, 195, 135, 79, 188, 92, 179, 16, 87)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(75, 75, 75, 75, 75, 84, 99, 75, 75, 75, 75, 75, 75, 142, 142)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6449363702343008142/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 59, 72, 150, 149, 44, 132, 133, 178)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,132,8,22,5], 2, 21
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [172,30,33,161,146], 2, 11
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,135,79,195,135], 2, 188
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [75,75,75,75,75], 2, 99
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [90,59,72,150,149], 2, 132
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.266s
user	0m55.035s
sys	0m3.681s

2023-01-11 00:00:33,984 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-11 00:00:33,984 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-11 00:00:33,986 INFO     Done. Execution time: 0.0014405250549316406 seconds
2023-01-11 00:00:33,986 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java': No such file or directory

2023-01-11 00:00:33,986 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-11 00:00:44,243 INFO     Done. Execution time: 10.257410049438477 seconds
2023-01-11 00:00:44,244 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,132,8,22,5], 2, 21)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([172,30,33,161,146], 2, 11)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,135,79,195,135], 2, 188)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([75,75,75,75,75], 2, 99)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([90,59,72,150,149], 2, 132)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 179):
                                                                                                                                              
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |       text       |
----------------------------------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |   0  |         |     |     |         21  |       |           2  |  [5,132,8,22,5]  |
    26  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |     |         21  |       |           2  |  [5,132,8,22,5]  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |     |         21  |       |           2  |  [5,132,8,22,5]  |
    29  |                         int i = 0;  |         |   0  |         |  0  |     |         21  |       |           2  |  [5,132,8,22,5]  |
    31  |                         int j = 0;  |         |   0  |         |  0  |  0  |         21  |       |           2  |  [5,132,8,22,5]  |
    33  |                     int chunk = 0;  |         |   0  |      0  |  0  |  0  |         21  |       |           2  |  [5,132,8,22,5]  |
    35  |                       int tag = 0;  |         |   0  |      0  |  0  |  0  |         21  |    0  |           2  |  [5,132,8,22,5]  |
    40  |                             j = 0;  |         |   0  |      0  |  0  |  0  |         21  |    0  |           2  |  [5,132,8,22,5]  |
    43  |        chunk = arrayRead(text, j);  |         |   0  |      5  |  0  |  0  |         21  |    0  |           2  |  [5,132,8,22,5]  |
    46  |                     R = R + chunk;  |      5  |   5  |      5  |  0  |  0  |         21  |    0  |           2  |  [5,132,8,22,5]  |
    50  |                         j = j + 1;  |         |   5  |      5  |  0  |  1  |         21  |    0  |           2  |  [5,132,8,22,5]  |
    58  |          tag = arrayRead(text, j);  |         |   5  |      5  |  0  |  1  |         21  |  132  |           2  |  [5,132,8,22,5]  |
    63  |  chunk = arrayRead(text, (j + 1...  |         |   5  |      8  |  0  |  1  |         21  |  132  |           2  |  [5,132,8,22,5]  |
    66  |                     R = R + chunk;  |      8  |  13  |      8  |  0  |  1  |         21  |  132  |           2  |  [5,132,8,22,5]  |
    70  |                         j = j + 2;  |         |  13  |      8  |  0  |  3  |         21  |  132  |           2  |  [5,132,8,22,5]  |
    71  |              resetPlaceHolder_2();  |         |  13  |      8  |  0  |  3  |         21  |  132  |           2  |  [5,132,8,22,5]  |
    79  |          tag = arrayRead(text, j);  |         |  13  |      8  |  0  |  3  |         21  |   22  |           2  |  [5,132,8,22,5]  |
    84  |  chunk = arrayRead(text, (j + 1...  |         |  13  |      5  |  0  |  3  |         21  |   22  |           2  |  [5,132,8,22,5]  |
    87  |                     R = R + chunk;  |      5  |  18  |      5  |  0  |  3  |         21  |   22  |           2  |  [5,132,8,22,5]  |
    91  |                         j = j + 2;  |         |  18  |      5  |  0  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
    92  |              resetPlaceHolder_2();  |         |  18  |      5  |  0  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   101  |                         i = i + 1;  |         |  18  |      5  |  1  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   104  |                 R = R + separator;  |     21  |  39  |      5  |  1  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   105  |              resetPlaceHolder_1();  |         |  39  |      5  |  1  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   110  |                             j = 0;  |         |  39  |      5  |  1  |  0  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   113  |        chunk = arrayRead(text, j);  |         |  39  |      5  |  1  |  0  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   116  |                     R = R + chunk;  |      5  |  44  |      5  |  1  |  0  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   120  |                         j = j + 1;  |         |  44  |      5  |  1  |  1  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   128  |          tag = arrayRead(text, j);  |         |  44  |      5  |  1  |  1  |         21  |  132  |           2  |  [5,132,8,22,5]  |
   133  |  chunk = arrayRead(text, (j + 1...  |         |  44  |      8  |  1  |  1  |         21  |  132  |           2  |  [5,132,8,22,5]  |
   136  |                     R = R + chunk;  |      8  |  52  |      8  |  1  |  1  |         21  |  132  |           2  |  [5,132,8,22,5]  |
   140  |                         j = j + 2;  |         |  52  |      8  |  1  |  3  |         21  |  132  |           2  |  [5,132,8,22,5]  |
   141  |              resetPlaceHolder_2();  |         |  52  |      8  |  1  |  3  |         21  |  132  |           2  |  [5,132,8,22,5]  |
   149  |          tag = arrayRead(text, j);  |         |  52  |      8  |  1  |  3  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   154  |  chunk = arrayRead(text, (j + 1...  |         |  52  |      5  |  1  |  3  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   157  |                     R = R + chunk;  |      5  |  57  |      5  |  1  |  3  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   161  |                         j = j + 2;  |         |  57  |      5  |  1  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   162  |              resetPlaceHolder_2();  |         |  57  |      5  |  1  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   171  |                         i = i + 1;  |         |  57  |      5  |  2  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   174  |                 R = R + separator;  |     21  |  78  |      5  |  2  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
   175  |              resetPlaceHolder_1();  |         |  78  |      5  |  2  |  5  |         21  |   22  |           2  |  [5,132,8,22,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66} because there exists a longer and subsuming segment {66,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {157} because there exists a longer and subsuming segment {66,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116} because there exists a longer and subsuming segment {66,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {136} because there exists a longer and subsuming segment {116,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46} because there exists a longer and subsuming segment {46,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87} because there exists a longer and subsuming segment {87,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {104}, {174} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      5  |                            |
    66  |         R = R + chunk;  |      8  |                            |
    71  |  resetPlaceHolder_2();  |         |                            |
    87  |         R = R + chunk;  |      5  |                            |
    92  |  resetPlaceHolder_2();  |         |                            |
   104  |     R = R + separator;  |     21  |                         0  |
   105  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |      5  |                            |
   136  |         R = R + chunk;  |      8  |                            |
   141  |  resetPlaceHolder_2();  |         |                            |
   157  |         R = R + chunk;  |      5  |                            |
   162  |  resetPlaceHolder_2();  |         |                            |
   174  |     R = R + separator;  |     21  |                         1  |
   175  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,157} because there exists a longer and subsuming segment {46,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,136} because there exists a longer and subsuming segment {66,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116,157} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,116} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,87} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,157} because there exists a longer and subsuming segment {66,87,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,116} because there exists a longer and subsuming segment {46,66,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 5 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {116,136}, {66,87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      5  |                            |
    66  |         R = R + chunk;  |      8  |                         0  |
    71  |  resetPlaceHolder_2();  |         |                            |
    87  |         R = R + chunk;  |      5  |                         0  |
    92  |  resetPlaceHolder_2();  |         |                            |
   104  |     R = R + separator;  |     21  |                            |
   105  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |      5  |                         1  |
   136  |         R = R + chunk;  |      8  |                         1  |
   141  |  resetPlaceHolder_2();  |         |                            |
   157  |         R = R + chunk;  |      5  |                            |
   162  |  resetPlaceHolder_2();  |         |                            |
   174  |     R = R + separator;  |     21  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}, {174}
GroupID(1): {116,136}, {66,87}
GroupID(2): {46,157}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      5  |                            |                            |                         0  |
    66  |         R = R + chunk;  |      8  |                            |                         0  |                            |
    71  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    87  |         R = R + chunk;  |      5  |                            |                         0  |                            |
    92  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   104  |     R = R + separator;  |     21  |                         0  |                            |                            |
   105  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   116  |         R = R + chunk;  |      5  |                            |                         1  |                            |
   136  |         R = R + chunk;  |      8  |                            |                         1  |                            |
   141  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   157  |         R = R + chunk;  |      5  |                            |                            |                         0  |
   162  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |     R = R + separator;  |     21  |                         1  |                            |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(105)
GroupID(1): Set(105)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  // reset R0
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> if ((i < 0) || (i == 0))
{
  R1 = R1 + chunk;
}
else
{
  if ((j < 2) || (j == 2))
  {
    R1 = R1 + chunk;
  }
  else
  {
    R2 = R2 + chunk;
  }
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.251s
user	0m20.757s
sys	0m4.126s

2023-01-11 00:00:44,244 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:01:47,051 INFO     Done. Execution time: 62.80716681480408 seconds
2023-01-11 00:01:47,051 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      if ((i < 0) || (i == 0))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((i < 0) || (i == 0))
        {
          D1 = D1 + chunk;
        }
        else
        {
          if ((j < 2) || (j == 2))
          {
            D1 = D1 + chunk;
          }
          else
          {
            D2 = D2 + chunk;
          }
        }
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-996565750027155928.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6038415784671561739.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8156594822615650009.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-508730439934079071.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7726242184943167772.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3762979910825648602.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7363755490196489866.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5441766900165800462.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1875950687306083222.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun R () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C61 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C65 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C59 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C60 () Int)
(declare-fun C9 () Int)
(declare-fun C58 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C64 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C56 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C63 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C57 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(declare-fun C62 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (and (<= (+ R) (+ D1 a!1 D2 a!2 D0 a!3))
       true
       (or true (= D1p 0))
       true
       (or true (= D2p 0))
       true
       (or true (= D0p 0)))))
(assert (and (or true (= D1 0)) (or true (= D2 0)) (or true (= D0 0))))
(assert (and true
     (<= C0 1)
     (>= C62 0)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C57 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C63 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C56 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C64 0)
     (>= C18 0)
     (>= C11 0)
     (>= C58 0)
     (>= C9 0)
     (>= C60 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C59 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C65 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C61 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun templateds () Int    1)  (define-fun text () Int    1)  (define-fun separator () Int    2)  (define-fun C0 () Int    0)  (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun D0p () Int    0)  (define-fun D2p () Int    0)  (define-fun D1p () Int    0)  (define-fun D1 () Int    0)  (define-fun D2 () Int    0)  (define-fun D0 () Int    4)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C61 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C65 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C59 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C60 () Int    0)  (define-fun C9 () Int    0)  (define-fun C58 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C64 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C56 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C63 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C57 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun C62 () Int    0)  (define-fun R () Int    4))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `60.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0000-transparentAmortize-60s-mostPrecise/stac-raw-0111-0000-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.801s
user	3m57.087s
sys	0m2.873s

2023-01-11 00:01:47,051 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-11 00:01:47,052 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:02:23,137 INFO     Done. Execution time: 36.08535552024841 seconds
2023-01-11 00:02:23,137 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz1783469105971131155/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1783469105971131155/bin -o /tmp/qfuzz1783469105971131155/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1783469105971131155/bin
Found file /tmp/qfuzz1783469105971131155/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz1783469105971131155/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1783469105971131155/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1783469105971131155/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1783469105971131155/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1783469105971131155/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 48724 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m48.7k to 48.7k us (average: 48.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
0; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 6; 5.00; [16.00,21.00,26.00,282.00,357.00,370.00]
1; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta; 6; 13.00; [69.00,82.00,108.00,144.00,222.00,269.00]
2; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 6; 13.00; [18.00,152.00,165.00,282.00,387.00,400.00]
9; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 6; 5.00; [84.00,214.00,219.00,224.00,395.00,408.00]
17; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 5.00; [128.00,133.00,138.00,146.00]
27; /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 6; 13.00; [28.00,44.00,57.00,136.00,203.00,216.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 21, 4, 36, 132, 45, 4, 4, 178, 13, 118, 115, 119, 186, 186, 186, 186, 186, 186, 186, 186, 141, 101)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 20, 102, 78, 45, 185, 128, 68, 4, 156, 26, 173, 27, 143, 184, 63, 190, 31, 68, 4, 156, 26, 200, 40, 143, 184, 63, 5, 59, 125, 122, 9, 23, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 132, 4, 67, 14, 76, 5, 15, 8, 50, 166, 50, 170, 93, 16, 5, 132, 153, 22, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 110, 33, 153, 103, 103, 103, 103, 103, 103, 103, 50, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(60, 60, 60, 60, 60, 60, 60, 60, 60, 48, 60, 60, 44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1783469105971131155/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 30, 5, 148, 59, 197, 22, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [172,21,4,36,132], 2, 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,20,102,78,45], 2, 128, 68
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,132,4,67], 2, 76, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,110,33,153,103], 2, 103, 103
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [60,60,60,60,60], 2, 60, 60
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95,30,5,148,59], 2, 22, 18
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.079s
user	0m50.985s
sys	0m3.785s

2023-01-11 00:02:23,137 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-11 00:02:23,137 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-11 00:02:23,139 INFO     Done. Execution time: 0.0015728473663330078 seconds
2023-01-11 00:02:23,139 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java': No such file or directory

2023-01-11 00:02:23,139 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-11 00:02:32,702 INFO     Done. Execution time: 9.56269097328186 seconds
2023-01-11 00:02:32,702 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([172,21,4,36,132], 2, 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([28,20,102,78,45], 2, 128, 68)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,132,4,67], 2, 76, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,110,33,153,103], 2, 103, 103)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([60,60,60,60,60], 2, 60, 60)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95,30,5,148,59], 2, 22, 18)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 199):
                                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |        text         |  ts  |
--------------------------------------------------------------------------------------------------------------------------------------------
    33  |                         int R = 0;  |         |    0  |         |     |     |    4  |    4  |       |  [172,21,4,36,132]  |   2  |
    34  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |    4  |    4  |       |  [172,21,4,36,132]  |   2  |
    35  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |    4  |    4  |       |  [172,21,4,36,132]  |   2  |
    37  |                         int i = 0;  |         |    0  |         |  0  |     |    4  |    4  |       |  [172,21,4,36,132]  |   2  |
    39  |                         int j = 0;  |         |    0  |         |  0  |  0  |    4  |    4  |       |  [172,21,4,36,132]  |   2  |
    41  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |    4  |    4  |       |  [172,21,4,36,132]  |   2  |
    43  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |    4  |    4  |    0  |  [172,21,4,36,132]  |   2  |
    48  |                             j = 0;  |         |    0  |      0  |  0  |  0  |    4  |    4  |    0  |  [172,21,4,36,132]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |    172  |  0  |  0  |    4  |    4  |    0  |  [172,21,4,36,132]  |   2  |
    54  |                     R = R + chunk;  |    172  |  172  |    172  |  0  |  0  |    4  |    4  |    0  |  [172,21,4,36,132]  |   2  |
    58  |                         j = j + 1;  |         |  172  |    172  |  0  |  1  |    4  |    4  |    0  |  [172,21,4,36,132]  |   2  |
    66  |          tag = arrayRead(text, j);  |         |  172  |    172  |  0  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
    71  |  chunk = arrayRead(text, (j + 1...  |         |  172  |      4  |  0  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
    74  |                     R = R + chunk;  |      4  |  176  |      4  |  0  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
    77  |                       R = R + rep;  |      4  |  180  |      4  |  0  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
    81  |                         j = j + 2;  |         |  180  |      4  |  0  |  3  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
    82  |              resetPlaceHolder_2();  |         |  180  |      4  |  0  |  3  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
    90  |          tag = arrayRead(text, j);  |         |  180  |      4  |  0  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
    95  |  chunk = arrayRead(text, (j + 1...  |         |  180  |    132  |  0  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
    98  |                     R = R + chunk;  |    132  |  312  |    132  |  0  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   101  |                       R = R + rep;  |      4  |  316  |    132  |  0  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   105  |                         j = j + 2;  |         |  316  |    132  |  0  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   106  |              resetPlaceHolder_2();  |         |  316  |    132  |  0  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   115  |                         i = i + 1;  |         |  316  |    132  |  1  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   118  |                       R = R + sep;  |      4  |  320  |    132  |  1  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   119  |              resetPlaceHolder_1();  |         |  320  |    132  |  1  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   124  |                             j = 0;  |         |  320  |    132  |  1  |  0  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   127  |        chunk = arrayRead(text, j);  |         |  320  |    172  |  1  |  0  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   130  |                     R = R + chunk;  |    172  |  492  |    172  |  1  |  0  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   134  |                         j = j + 1;  |         |  492  |    172  |  1  |  1  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   142  |          tag = arrayRead(text, j);  |         |  492  |    172  |  1  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
   147  |  chunk = arrayRead(text, (j + 1...  |         |  492  |      4  |  1  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
   150  |                     R = R + chunk;  |      4  |  496  |      4  |  1  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
   153  |                       R = R + rep;  |      4  |  500  |      4  |  1  |  1  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
   157  |                         j = j + 2;  |         |  500  |      4  |  1  |  3  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
   158  |              resetPlaceHolder_2();  |         |  500  |      4  |  1  |  3  |    4  |    4  |   21  |  [172,21,4,36,132]  |   2  |
   166  |          tag = arrayRead(text, j);  |         |  500  |      4  |  1  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   171  |  chunk = arrayRead(text, (j + 1...  |         |  500  |    132  |  1  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   174  |                     R = R + chunk;  |    132  |  632  |    132  |  1  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   177  |                       R = R + rep;  |      4  |  636  |    132  |  1  |  3  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   181  |                         j = j + 2;  |         |  636  |    132  |  1  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   182  |              resetPlaceHolder_2();  |         |  636  |    132  |  1  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   191  |                         i = i + 1;  |         |  636  |    132  |  2  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   194  |                       R = R + sep;  |      4  |  640  |    132  |  2  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
   195  |              resetPlaceHolder_1();  |         |  640  |    132  |  2  |  5  |    4  |    4  |   36  |  [172,21,4,36,132]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {130} because there exists a longer and subsuming segment {98,130} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {174} because there exists a longer and subsuming segment {153,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {98} because there exists a longer and subsuming segment {74,98} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {54,101} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {101}, {118}, {150}, {153}, {177}, {194}, {74}, {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |
    74  |         R = R + chunk;  |      4  |                         0  |
    77  |           R = R + rep;  |      4  |                         1  |
    82  |  resetPlaceHolder_2();  |         |                            |
    98  |         R = R + chunk;  |    132  |                            |
   101  |           R = R + rep;  |      4  |                         2  |
   106  |  resetPlaceHolder_2();  |         |                            |
   118  |           R = R + sep;  |      4  |                         3  |
   119  |  resetPlaceHolder_1();  |         |                            |
   130  |         R = R + chunk;  |    172  |                            |
   150  |         R = R + chunk;  |      4  |                         4  |
   153  |           R = R + rep;  |      4  |                         5  |
   158  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |    132  |                            |
   177  |           R = R + rep;  |      4  |                         6  |
   182  |  resetPlaceHolder_2();  |         |                            |
   194  |           R = R + sep;  |      4  |                         7  |
   195  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 54, 98, 130]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 54, 98, 130]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 54, 98, 130]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {98,174} because there exists a longer and subsuming segment {54,98,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,130} because there exists a longer and subsuming segment {54,130,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {130,174}, {54,98} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                         0  |
    74  |         R = R + chunk;  |      4  |                            |
    77  |           R = R + rep;  |      4  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |
    98  |         R = R + chunk;  |    132  |                         0  |
   101  |           R = R + rep;  |      4  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |
   118  |           R = R + sep;  |      4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |
   130  |         R = R + chunk;  |    172  |                         1  |
   150  |         R = R + chunk;  |      4  |                            |
   153  |           R = R + rep;  |      4  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |    132  |                         1  |
   177  |           R = R + rep;  |      4  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |
   194  |           R = R + sep;  |      4  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {101}, {118}, {150}, {153}, {177}, {194}, {74}, {77}
GroupID(1): {130,174}, {54,98}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [75, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [78, 100])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [102, 117])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [151, 152])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [154, 176])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [178, 193])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    172  |                            |                         0  |
    74  |         R = R + chunk;  |      4  |                         0  |                            |
    77  |           R = R + rep;  |      4  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |    132  |                            |                         0  |
   101  |           R = R + rep;  |      4  |                         2  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |      4  |                         3  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |    172  |                            |                         1  |
   150  |         R = R + chunk;  |      4  |                         4  |                            |
   153  |           R = R + rep;  |      4  |                         5  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |    132  |                            |                         1  |
   177  |           R = R + rep;  |      4  |                         6  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |      4  |                         7  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(119)
GroupID(1): Set(119)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R rep -> R0 = R0 + rep;
use R chunk -> if ((j < 2) || (j == 2))
{
  R0 = R0 + chunk;
}
else
{
  R1 = R1 + chunk;
}
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R sep -> R0 = R0 + sep;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m9.557s
user	0m18.022s
sys	0m3.530s

2023-01-11 00:02:32,702 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:08:48,939 INFO     Done. Execution time: 376.2368152141571 seconds
2023-01-11 00:08:48,939 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        D0 = D0 + rep;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + sep;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        if ((j < 2) || (j == 2))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
        D0 = D0 + rep;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + sep;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4773223592910818355.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4286915656365658871.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun ts () Int)
(declare-fun text () Int)
(declare-fun sep () Int)
(declare-fun rep () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun R () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C54 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C55 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> ts 0))
(assert (> text 0))
(assert (> sep 0))
(assert (> rep 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= (+ R) (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p (+ 0 (* 1 1 text)))
       a!3)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and (or true (= D0 0)) a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C55 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C54 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 ts)))
     (<= C1 (+ 0 (* 1 1 ts)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    (- 8))  (define-fun rep () Int    1)  (define-fun sep () Int    2)  (define-fun text () Int    2)  (define-fun ts () Int    1)  (define-fun D1p () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D0 () Int    15)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C54 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C55 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    7))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `374.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0002-transparentAmortize-60s-mostPrecise/stac-raw-0111-0002-transparentAmortize-60s-mostPrecise-000-099.csv`

real	6m16.231s
user	15m0.922s
sys	0m27.186s

2023-01-11 00:08:48,940 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-11 00:08:48,940 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:09:25,261 INFO     Done. Execution time: 36.32152771949768 seconds
2023-01-11 00:09:25,261 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz877070852893047966/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz877070852893047966/bin -o /tmp/qfuzz877070852893047966/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz877070852893047966/bin
Found file /tmp/qfuzz877070852893047966/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz877070852893047966/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz877070852893047966/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz877070852893047966/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz877070852893047966/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz877070852893047966/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz877070852893047966/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz877070852893047966/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 42, exec speed = 43500 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m43.5k to 43.5k us (average: 43.5k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 68.00; [81.00,149.00,235.00,321.00,397.00]
0; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 128.00; [15.00,143.00]
1; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 348.00; [15.00,363.00]
3; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 8.00; [15.00,25.00,33.00]
4; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 5; 26.00; [43.00,135.00,335.00,387.00,413.00]
10; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 5; 50.00; [77.00,131.00,235.00,291.00,341.00]
14; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta; 5; 76.00; [31.00,149.00,235.00,321.00,397.00]
21; /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 4; 40.00; [41.00,81.00,235.00,289.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 8, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 14, 186, 160, 60, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(134, 110, 31, 163, 58, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz877070852893047966/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 110, 33, 137, 33, 75, 138, 4, 4, 12, 175, 91, 138, 4, 4, 12, 43, 91, 60, 170, 86, 152, 143, 16, 172)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,8,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,14,186,160,60]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [134,110,31,163,58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [9,110,33,137,33]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.315s
user	0m50.890s
sys	0m4.428s

2023-01-11 00:09:25,262 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-11 00:09:25,262 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-11 00:09:25,263 INFO     Done. Execution time: 0.0012555122375488281 seconds
2023-01-11 00:09:25,263 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java': No such file or directory

2023-01-11 00:09:25,263 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-11 00:09:30,851 INFO     Done. Execution time: 5.587793588638306 seconds
2023-01-11 00:09:30,851 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,8,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,14,186,160,60])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([134,110,31,163,58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([9,110,33,137,33])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text         |
----------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,8,153,67]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,8,153,67]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,8,153,67]  |
    13  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,8,153,67]  |
    15  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,8,153,67]  |
    17  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,8,153,67]  |
    20  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,8,153,67]  |
    23  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,8,153,67]  |
    27  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,8,153,67]  |
    33  |        chunk = arrayRead(text, i);  |         |  187  |    110  |  1  |    0  |  [187,110,8,153,67]  |
    36  |                     R = R + chunk;  |    110  |  297  |    110  |  1  |    0  |  [187,110,8,153,67]  |
    40  |                         i = i + 1;  |         |  297  |    110  |  2  |    0  |  [187,110,8,153,67]  |
    41  |              resetPlaceHolder_1();  |         |  297  |    110  |  2  |    0  |  [187,110,8,153,67]  |
    47  |        chunk = arrayRead(text, i);  |         |  297  |      8  |  2  |    0  |  [187,110,8,153,67]  |
    50  |                     R = R + chunk;  |      8  |  305  |      8  |  2  |    0  |  [187,110,8,153,67]  |
    54  |                         i = i + 1;  |         |  305  |      8  |  3  |    0  |  [187,110,8,153,67]  |
    55  |              resetPlaceHolder_1();  |         |  305  |      8  |  3  |    0  |  [187,110,8,153,67]  |
    61  |        chunk = arrayRead(text, i);  |         |  305  |    153  |  3  |    0  |  [187,110,8,153,67]  |
    64  |                     R = R + chunk;  |    153  |  458  |    153  |  3  |    0  |  [187,110,8,153,67]  |
    68  |                         i = i + 1;  |         |  458  |    153  |  4  |    0  |  [187,110,8,153,67]  |
    69  |              resetPlaceHolder_1();  |         |  458  |    153  |  4  |    0  |  [187,110,8,153,67]  |
    75  |        chunk = arrayRead(text, i);  |         |  458  |     67  |  4  |    0  |  [187,110,8,153,67]  |
    78  |                     R = R + chunk;  |     67  |  525  |     67  |  4  |    0  |  [187,110,8,153,67]  |
    82  |                         i = i + 1;  |         |  525  |     67  |  5  |    0  |  [187,110,8,153,67]  |
    83  |              resetPlaceHolder_1();  |         |  525  |     67  |  5  |    0  |  [187,110,8,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50} because there exists a longer and subsuming segment {50,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {78} because there exists a longer and subsuming segment {50,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36} because there exists a longer and subsuming segment {36,50} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50,78} because there exists a longer and subsuming segment {50,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,64} because there exists a longer and subsuming segment {23,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64,78} because there exists a longer and subsuming segment {50,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36,50} because there exists a longer and subsuming segment {23,36,50} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36,78} because there exists a longer and subsuming segment {36,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36,64} because there exists a longer and subsuming segment {36,50,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,36} because there exists a longer and subsuming segment {23,36,50} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,78} because there exists a longer and subsuming segment {23,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50,64} because there exists a longer and subsuming segment {36,50,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,50} because there exists a longer and subsuming segment {23,36,50} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {23,36,50,64,78}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    23  |         R = R + chunk;  |    187  |                         0  |
    36  |         R = R + chunk;  |    110  |                         0  |
    41  |  resetPlaceHolder_1();  |         |                            |
    50  |         R = R + chunk;  |      8  |                         0  |
    55  |  resetPlaceHolder_1();  |         |                            |
    64  |         R = R + chunk;  |    153  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
    78  |         R = R + chunk;  |     67  |                         0  |
    83  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m5.582s
user	0m11.357s
sys	0m1.405s

2023-01-11 00:09:30,851 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:09:39,900 INFO     Done. Execution time: 9.048482656478882 seconds
2023-01-11 00:09:39,900 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `7.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0009-transparentAmortize-60s-mostPrecise/stac-raw-0111-0009-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.043s
user	0m19.212s
sys	0m2.514s

2023-01-11 00:09:39,900 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-11 00:09:39,900 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:10:16,461 INFO     Done. Execution time: 36.56041097640991 seconds
2023-01-11 00:10:16,461 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz911334147247750835/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz911334147247750835/bin -o /tmp/qfuzz911334147247750835/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz911334147247750835/bin
Found file /tmp/qfuzz911334147247750835/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz911334147247750835/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz911334147247750835/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz911334147247750835/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz911334147247750835/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz911334147247750835/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz911334147247750835/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz911334147247750835/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 41, exec speed = 51840 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m51.8k to 51.8k us (average: 51.8k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [11.00,17.00,385.00]
1; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 6.00; [11.00,17.00,47.00]
1; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 3; 6.00; [11.00,17.00,127.00]
2; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 3; 6.00; [11.00,17.00,61.00]
3; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 3; 6.00; [11.00,17.00,381.00]
10; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 3; 6.00; [11.00,17.00,313.00]
17; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 3; 6.00; [11.00,17.00,323.00]
24; /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 3; 6.00; [11.00,17.00,273.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 58, 4, 36, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 110, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 127, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(156, 75, 37, 83, 90, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz911334147247750835/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(131, 180, 5, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 18, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 185, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 151, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 156, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 131, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.553s
user	0m53.259s
sys	0m4.321s

2023-01-11 00:10:16,461 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-11 00:10:16,461 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-11 00:10:16,463 INFO     Done. Execution time: 0.0013308525085449219 seconds
2023-01-11 00:10:16,463 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java': No such file or directory

2023-01-11 00:10:16,463 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-11 00:10:22,113 INFO     Done. Execution time: 5.650383710861206 seconds
2023-01-11 00:10:22,114 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(18, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(185, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(151, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(156, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(131, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 56):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
    17  |                   int builder = 0;  |         |      |        0  |     |   18  |      2  |
    19  |                         int R = 0;  |         |   0  |        0  |     |   18  |      2  |
    20  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   18  |      2  |
    21  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   18  |      2  |
    25  |             builder = builder + 1;  |         |   0  |        1  |     |   18  |      2  |
    28  |                         R = R + 1;  |      1  |   1  |        1  |     |   18  |      2  |
    30  |                         int i = 1;  |         |   1  |        1  |  1  |   18  |      2  |
    37  |           builder = builder + sep;  |         |   1  |       19  |  1  |   18  |      2  |
    40  |                       R = R + sep;  |     18  |  19  |       19  |  1  |   18  |      2  |
    44  |             builder = builder + 1;  |         |  19  |       20  |  1  |   18  |      2  |
    47  |                         R = R + 1;  |      1  |  20  |       20  |  1  |   18  |      2  |
    51  |                         i = i + 1;  |         |  20  |       20  |  2  |   18  |      2  |
    52  |              resetPlaceHolder_1();  |         |  20  |       20  |  2  |   18  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [28, 40, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {28}, {47} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |
    40  |           R = R + sep;  |     18  |                            |
    47  |             R = R + 1;  |      1  |                         1  |
    52  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28}, {47}
GroupID(1): {40}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |                            |
    40  |           R = R + sep;  |     18  |                            |                         0  |
    47  |             R = R + 1;  |      1  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [29, 46])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |                            |
    40  |           R = R + sep;  |     18  |                            |                         0  |
    47  |             R = R + 1;  |      1  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.644s
user	0m11.201s
sys	0m1.593s

2023-01-11 00:10:22,114 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:10:39,070 INFO     Done. Execution time: 16.95660924911499 seconds
2023-01-11 00:10:39,071 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun R () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= (+ R) (+ D0 a!1 D1 a!2))
       (<= D0p 0)
       a!3
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    1)  (define-fun sep () Int    4)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    8))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `14.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0010-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0010-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.951s
user	0m40.332s
sys	0m6.310s

2023-01-11 00:10:39,071 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-11 00:10:39,071 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:11:15,395 INFO     Done. Execution time: 36.3243408203125 seconds
2023-01-11 00:11:15,395 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz4563265281811098161/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4563265281811098161/bin -o /tmp/qfuzz4563265281811098161/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4563265281811098161/bin
Found file /tmp/qfuzz4563265281811098161/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz4563265281811098161/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4563265281811098161/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4563265281811098161/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4563265281811098161/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4563265281811098161/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 35, exec speed = 48467 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m35 to 35 bits (average: 35.00 bits)
[1;90m        Exec timing : [0m48.5k to 48.5k us (average: 48.5k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4563265281811098161/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [11.00,14.00,20.00]
0; /tmp/qfuzz4563265281811098161/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 3.00; [11.00,14.00,20.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4563265281811098161/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4563265281811098161/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.317s
user	0m52.192s
sys	0m4.397s

2023-01-11 00:11:15,396 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-11 00:11:15,396 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-11 00:11:15,397 INFO     Done. Execution time: 0.0013730525970458984 seconds
2023-01-11 00:11:15,397 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java': No such file or directory

2023-01-11 00:11:15,397 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-11 00:11:21,190 INFO     Done. Execution time: 5.792497396469116 seconds
2023-01-11 00:11:21,190 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 74):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |      2  |       0  |     |
    11  |                         int R = 0;  |         |  0  |      2  |       0  |     |
    12  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    13  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    15  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    31  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    34  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    38  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    39  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    55  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    58  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    62  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    65  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    69  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    70  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [34, 58, 65]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {34}, {58}, {65} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}, {58}, {65}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [59, 64])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.786s
user	0m11.308s
sys	0m1.543s

2023-01-11 00:11:21,190 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:11:29,472 INFO     Done. Execution time: 8.281108140945435 seconds
2023-01-11 00:11:29,472 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0011-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0011-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.274s
user	0m16.938s
sys	0m2.402s

2023-01-11 00:11:29,472 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-11 00:11:29,472 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:12:06,170 INFO     Done. Execution time: 36.69800901412964 seconds
2023-01-11 00:12:06,171 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz6312494131019565153/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6312494131019565153/bin -o /tmp/qfuzz6312494131019565153/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6312494131019565153/bin
Found file /tmp/qfuzz6312494131019565153/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz6312494131019565153/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6312494131019565153/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6312494131019565153/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6312494131019565153/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6312494131019565153/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 5 runnable tasks (utilization: 125%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 43, exec speed = 59536 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m59.5k to 59.5k us (average: 59.5k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 2.00; [12.00,14.00,22.00,31.00]
0; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
1; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 4; 2.00; [12.00,14.00,20.00,31.00]
1; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
2; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 2.00; [12.00,14.00,22.00,31.00]
2; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
3; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
3; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 4; 2.00; [12.00,14.00,20.00,31.00]
4; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
4; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
5; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
5; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
6; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
6; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
7; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,22.00,31.00]
8; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
8; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
9; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:4; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
9; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:128; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
10; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:2; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
10; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
11; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
12; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,20.00,31.00]
13; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
14; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:4; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
14; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,20.00,31.00]
15; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
16; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:32; 4; 2.00; [12.00,14.00,20.00,31.00]
16; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,22.00,31.00]
17; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
18; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
18; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
19; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
21; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:32; 4; 2.00; [12.00,14.00,20.00,31.00]
22; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
23; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:16; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
24; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:64; 4; 2.00; [12.00,14.00,20.00,31.00]
28; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,22.00,31.00]
29; /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,22.00,31.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:4
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:128
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:128
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:128
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:4
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:32
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:128
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:2
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:32
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:16
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:64
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16
/tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 168, 8, 134)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 42, 8, 4, 41, 89)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(108)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(197, 31, 190, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 19, 33, 38, 67, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 176, 67, 108)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 16, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 58, 128, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 88, 70, 33, 50, 6, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 4, 4, 119, 4, 4, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 97, 43, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(56, 110, 33, 21, 7, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 179, 179, 148, 179, 179, 179, 179)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(162)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 128, 6, 4, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 72)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 28, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169, 110, 33, 74, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 89, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 110, 67, 97, 199, 4, 104, 33, 13, 67, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(60, 70, 4, 60, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 165, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(59)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000033,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000034,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 151, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000035,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(177, 187, 172, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000036,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000037,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 9, 65, 116, 29, 9, 65, 28, 29, 9, 65, 116, 29, 9, 65, 28, 93, 91, 52, 37, 17, 29, 32, 195, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6312494131019565153/fuzzer-out/afl/queue/id:000038,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 132, 132, 53, 26, 63, 60, 64, 81, 20, 63, 160, 54, 52, 198, 161, 39, 132, 27, 131, 5, 4, 161, 55, 132, 20, 5, 52, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,168,8,134]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,42,8,4,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [108]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [197,31,190,186]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,19,33,38,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,176,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,16,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,58,128,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,88,70,33,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,4,4,119,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,97,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [56,110,33,21,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [179,179,179,148,179]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [162]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,128,6,4,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,72]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,28,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [40]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [169,110,33,74,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,89,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [125,110,67,97,199]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [60,70,4,60,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,165,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70,151,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [177,187,172,196]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,9,65,116,29]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [172,132,132,53,26]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.691s
user	0m45.365s
sys	0m6.677s

2023-01-11 00:12:06,171 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-11 00:12:06,171 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-11 00:12:06,172 INFO     Done. Execution time: 0.001634836196899414 seconds
2023-01-11 00:12:06,173 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java': No such file or directory

2023-01-11 00:12:06,173 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-11 00:12:35,400 INFO     Done. Execution time: 29.2268009185791 seconds
2023-01-11 00:12:35,400 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,168,8,134])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 38 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,42,8,4,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([108])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([197,31,190,186])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,19,33,38,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,176,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,16,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,58,128,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 38 (21.05%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([190,88,70,33,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,4,4,119,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,97,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([56,110,33,21,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([179,179,179,148,179])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([162])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,128,6,4,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,72])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 38 (42.11%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,28,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([40])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([169,110,33,74,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,89,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([125,110,67,97,199])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([60,70,4,60,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,165,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([59])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70,151,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([177,187,172,196])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,9,65,116,29])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([172,132,132,53,26])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 38 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 3703):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |      sorted      |
------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [18,168,8,134]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [18,168,8,134]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [18,168,8,134]  |
    13  |                     int entry = 0;  |         |    0  |      0  |     |       |  [18,168,8,134]  |
    15  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [18,168,8,134]  |
    21  |      entry = arrayRead(sorted, i);  |         |    0  |     18  |  0  |       |  [18,168,8,134]  |
    23  |                         int j = 0;  |         |    0  |     18  |  0  |    0  |  [18,168,8,134]  |
    29  |                         R = R + 2;  |      2  |    2  |     18  |  0  |    0  |  [18,168,8,134]  |
    33  |                         j = j + 1;  |         |    2  |     18  |  0  |    1  |  [18,168,8,134]  |
    34  |              resetPlaceHolder_2();  |         |    2  |     18  |  0  |    1  |  [18,168,8,134]  |
    40  |                         R = R + 2;  |      2  |    4  |     18  |  0  |    1  |  [18,168,8,134]  |
    44  |                         j = j + 1;  |         |    4  |     18  |  0  |    2  |  [18,168,8,134]  |
    45  |              resetPlaceHolder_2();  |         |    4  |     18  |  0  |    2  |  [18,168,8,134]  |
    51  |                         R = R + 2;  |      2  |    6  |     18  |  0  |    2  |  [18,168,8,134]  |
    55  |                         j = j + 1;  |         |    6  |     18  |  0  |    3  |  [18,168,8,134]  |
    56  |              resetPlaceHolder_2();  |         |    6  |     18  |  0  |    3  |  [18,168,8,134]  |
    62  |                         R = R + 2;  |      2  |    8  |     18  |  0  |    3  |  [18,168,8,134]  |
    66  |                         j = j + 1;  |         |    8  |     18  |  0  |    4  |  [18,168,8,134]  |
    67  |              resetPlaceHolder_2();  |         |    8  |     18  |  0  |    4  |  [18,168,8,134]  |
    73  |                         R = R + 2;  |      2  |   10  |     18  |  0  |    4  |  [18,168,8,134]  |
    77  |                         j = j + 1;  |         |   10  |     18  |  0  |    5  |  [18,168,8,134]  |
    78  |              resetPlaceHolder_2();  |         |   10  |     18  |  0  |    5  |  [18,168,8,134]  |
    84  |                         R = R + 2;  |      2  |   12  |     18  |  0  |    5  |  [18,168,8,134]  |
    88  |                         j = j + 1;  |         |   12  |     18  |  0  |    6  |  [18,168,8,134]  |
    89  |              resetPlaceHolder_2();  |         |   12  |     18  |  0  |    6  |  [18,168,8,134]  |
    95  |                         R = R + 2;  |      2  |   14  |     18  |  0  |    6  |  [18,168,8,134]  |
    99  |                         j = j + 1;  |         |   14  |     18  |  0  |    7  |  [18,168,8,134]  |
   100  |              resetPlaceHolder_2();  |         |   14  |     18  |  0  |    7  |  [18,168,8,134]  |
   106  |                         R = R + 2;  |      2  |   16  |     18  |  0  |    7  |  [18,168,8,134]  |
   110  |                         j = j + 1;  |         |   16  |     18  |  0  |    8  |  [18,168,8,134]  |
   111  |              resetPlaceHolder_2();  |         |   16  |     18  |  0  |    8  |  [18,168,8,134]  |
   117  |                         R = R + 2;  |      2  |   18  |     18  |  0  |    8  |  [18,168,8,134]  |
   121  |                         j = j + 1;  |         |   18  |     18  |  0  |    9  |  [18,168,8,134]  |
   122  |              resetPlaceHolder_2();  |         |   18  |     18  |  0  |    9  |  [18,168,8,134]  |
   128  |                         R = R + 2;  |      2  |   20  |     18  |  0  |    9  |  [18,168,8,134]  |
   132  |                         j = j + 1;  |         |   20  |     18  |  0  |   10  |  [18,168,8,134]  |
   133  |              resetPlaceHolder_2();  |         |   20  |     18  |  0  |   10  |  [18,168,8,134]  |
   139  |                         R = R + 2;  |      2  |   22  |     18  |  0  |   10  |  [18,168,8,134]  |
   143  |                         j = j + 1;  |         |   22  |     18  |  0  |   11  |  [18,168,8,134]  |
   144  |              resetPlaceHolder_2();  |         |   22  |     18  |  0  |   11  |  [18,168,8,134]  |
   150  |                         R = R + 2;  |      2  |   24  |     18  |  0  |   11  |  [18,168,8,134]  |
   154  |                         j = j + 1;  |         |   24  |     18  |  0  |   12  |  [18,168,8,134]  |
   155  |              resetPlaceHolder_2();  |         |   24  |     18  |  0  |   12  |  [18,168,8,134]  |
   161  |                         R = R + 2;  |      2  |   26  |     18  |  0  |   12  |  [18,168,8,134]  |
   165  |                         j = j + 1;  |         |   26  |     18  |  0  |   13  |  [18,168,8,134]  |
   166  |              resetPlaceHolder_2();  |         |   26  |     18  |  0  |   13  |  [18,168,8,134]  |
   172  |                         R = R + 2;  |      2  |   28  |     18  |  0  |   13  |  [18,168,8,134]  |
   176  |                         j = j + 1;  |         |   28  |     18  |  0  |   14  |  [18,168,8,134]  |
   177  |              resetPlaceHolder_2();  |         |   28  |     18  |  0  |   14  |  [18,168,8,134]  |
   183  |                         R = R + 2;  |      2  |   30  |     18  |  0  |   14  |  [18,168,8,134]  |
   187  |                         j = j + 1;  |         |   30  |     18  |  0  |   15  |  [18,168,8,134]  |
   188  |              resetPlaceHolder_2();  |         |   30  |     18  |  0  |   15  |  [18,168,8,134]  |
   194  |                         R = R + 2;  |      2  |   32  |     18  |  0  |   15  |  [18,168,8,134]  |
   198  |                         j = j + 1;  |         |   32  |     18  |  0  |   16  |  [18,168,8,134]  |
   199  |              resetPlaceHolder_2();  |         |   32  |     18  |  0  |   16  |  [18,168,8,134]  |
   205  |                         R = R + 2;  |      2  |   34  |     18  |  0  |   16  |  [18,168,8,134]  |
   209  |                         j = j + 1;  |         |   34  |     18  |  0  |   17  |  [18,168,8,134]  |
   210  |              resetPlaceHolder_2();  |         |   34  |     18  |  0  |   17  |  [18,168,8,134]  |
   216  |                         R = R + 2;  |      2  |   36  |     18  |  0  |   17  |  [18,168,8,134]  |
   220  |                         j = j + 1;  |         |   36  |     18  |  0  |   18  |  [18,168,8,134]  |
   221  |              resetPlaceHolder_2();  |         |   36  |     18  |  0  |   18  |  [18,168,8,134]  |
   227  |                         R = R + 1;  |      1  |   37  |     18  |  0  |   18  |  [18,168,8,134]  |
   231  |                         i = i + 1;  |         |   37  |     18  |  1  |   18  |  [18,168,8,134]  |
   232  |              resetPlaceHolder_1();  |         |   37  |     18  |  1  |   18  |  [18,168,8,134]  |
   238  |      entry = arrayRead(sorted, i);  |         |   37  |    168  |  1  |   18  |  [18,168,8,134]  |
   240  |                         int j = 0;  |         |   37  |    168  |  1  |    0  |  [18,168,8,134]  |
   246  |                         R = R + 2;  |      2  |   39  |    168  |  1  |    0  |  [18,168,8,134]  |
   250  |                         j = j + 1;  |         |   39  |    168  |  1  |    1  |  [18,168,8,134]  |
   251  |              resetPlaceHolder_2();  |         |   39  |    168  |  1  |    1  |  [18,168,8,134]  |
   257  |                         R = R + 2;  |      2  |   41  |    168  |  1  |    1  |  [18,168,8,134]  |
   261  |                         j = j + 1;  |         |   41  |    168  |  1  |    2  |  [18,168,8,134]  |
   262  |              resetPlaceHolder_2();  |         |   41  |    168  |  1  |    2  |  [18,168,8,134]  |
   268  |                         R = R + 2;  |      2  |   43  |    168  |  1  |    2  |  [18,168,8,134]  |
   272  |                         j = j + 1;  |         |   43  |    168  |  1  |    3  |  [18,168,8,134]  |
   273  |              resetPlaceHolder_2();  |         |   43  |    168  |  1  |    3  |  [18,168,8,134]  |
   279  |                         R = R + 2;  |      2  |   45  |    168  |  1  |    3  |  [18,168,8,134]  |
   283  |                         j = j + 1;  |         |   45  |    168  |  1  |    4  |  [18,168,8,134]  |
   284  |              resetPlaceHolder_2();  |         |   45  |    168  |  1  |    4  |  [18,168,8,134]  |
   290  |                         R = R + 2;  |      2  |   47  |    168  |  1  |    4  |  [18,168,8,134]  |
   294  |                         j = j + 1;  |         |   47  |    168  |  1  |    5  |  [18,168,8,134]  |
   295  |              resetPlaceHolder_2();  |         |   47  |    168  |  1  |    5  |  [18,168,8,134]  |
   301  |                         R = R + 2;  |      2  |   49  |    168  |  1  |    5  |  [18,168,8,134]  |
   305  |                         j = j + 1;  |         |   49  |    168  |  1  |    6  |  [18,168,8,134]  |
   306  |              resetPlaceHolder_2();  |         |   49  |    168  |  1  |    6  |  [18,168,8,134]  |
   312  |                         R = R + 2;  |      2  |   51  |    168  |  1  |    6  |  [18,168,8,134]  |
   316  |                         j = j + 1;  |         |   51  |    168  |  1  |    7  |  [18,168,8,134]  |
   317  |              resetPlaceHolder_2();  |         |   51  |    168  |  1  |    7  |  [18,168,8,134]  |
   323  |                         R = R + 2;  |      2  |   53  |    168  |  1  |    7  |  [18,168,8,134]  |
   327  |                         j = j + 1;  |         |   53  |    168  |  1  |    8  |  [18,168,8,134]  |
   328  |              resetPlaceHolder_2();  |         |   53  |    168  |  1  |    8  |  [18,168,8,134]  |
   334  |                         R = R + 2;  |      2  |   55  |    168  |  1  |    8  |  [18,168,8,134]  |
   338  |                         j = j + 1;  |         |   55  |    168  |  1  |    9  |  [18,168,8,134]  |
   339  |              resetPlaceHolder_2();  |         |   55  |    168  |  1  |    9  |  [18,168,8,134]  |
   345  |                         R = R + 2;  |      2  |   57  |    168  |  1  |    9  |  [18,168,8,134]  |
   349  |                         j = j + 1;  |         |   57  |    168  |  1  |   10  |  [18,168,8,134]  |
   350  |              resetPlaceHolder_2();  |         |   57  |    168  |  1  |   10  |  [18,168,8,134]  |
   356  |                         R = R + 2;  |      2  |   59  |    168  |  1  |   10  |  [18,168,8,134]  |
   360  |                         j = j + 1;  |         |   59  |    168  |  1  |   11  |  [18,168,8,134]  |
   361  |              resetPlaceHolder_2();  |         |   59  |    168  |  1  |   11  |  [18,168,8,134]  |
   367  |                         R = R + 2;  |      2  |   61  |    168  |  1  |   11  |  [18,168,8,134]  |
   371  |                         j = j + 1;  |         |   61  |    168  |  1  |   12  |  [18,168,8,134]  |
   372  |              resetPlaceHolder_2();  |         |   61  |    168  |  1  |   12  |  [18,168,8,134]  |
   378  |                         R = R + 2;  |      2  |   63  |    168  |  1  |   12  |  [18,168,8,134]  |
   382  |                         j = j + 1;  |         |   63  |    168  |  1  |   13  |  [18,168,8,134]  |
   383  |              resetPlaceHolder_2();  |         |   63  |    168  |  1  |   13  |  [18,168,8,134]  |
   389  |                         R = R + 2;  |      2  |   65  |    168  |  1  |   13  |  [18,168,8,134]  |
   393  |                         j = j + 1;  |         |   65  |    168  |  1  |   14  |  [18,168,8,134]  |
   394  |              resetPlaceHolder_2();  |         |   65  |    168  |  1  |   14  |  [18,168,8,134]  |
   400  |                         R = R + 2;  |      2  |   67  |    168  |  1  |   14  |  [18,168,8,134]  |
   404  |                         j = j + 1;  |         |   67  |    168  |  1  |   15  |  [18,168,8,134]  |
   405  |              resetPlaceHolder_2();  |         |   67  |    168  |  1  |   15  |  [18,168,8,134]  |
   411  |                         R = R + 2;  |      2  |   69  |    168  |  1  |   15  |  [18,168,8,134]  |
   415  |                         j = j + 1;  |         |   69  |    168  |  1  |   16  |  [18,168,8,134]  |
   416  |              resetPlaceHolder_2();  |         |   69  |    168  |  1  |   16  |  [18,168,8,134]  |
   422  |                         R = R + 2;  |      2  |   71  |    168  |  1  |   16  |  [18,168,8,134]  |
   426  |                         j = j + 1;  |         |   71  |    168  |  1  |   17  |  [18,168,8,134]  |
   427  |              resetPlaceHolder_2();  |         |   71  |    168  |  1  |   17  |  [18,168,8,134]  |
   433  |                         R = R + 2;  |      2  |   73  |    168  |  1  |   17  |  [18,168,8,134]  |
   437  |                         j = j + 1;  |         |   73  |    168  |  1  |   18  |  [18,168,8,134]  |
   438  |              resetPlaceHolder_2();  |         |   73  |    168  |  1  |   18  |  [18,168,8,134]  |
   444  |                         R = R + 2;  |      2  |   75  |    168  |  1  |   18  |  [18,168,8,134]  |
   448  |                         j = j + 1;  |         |   75  |    168  |  1  |   19  |  [18,168,8,134]  |
   449  |              resetPlaceHolder_2();  |         |   75  |    168  |  1  |   19  |  [18,168,8,134]  |
   455  |                         R = R + 2;  |      2  |   77  |    168  |  1  |   19  |  [18,168,8,134]  |
   459  |                         j = j + 1;  |         |   77  |    168  |  1  |   20  |  [18,168,8,134]  |
   460  |              resetPlaceHolder_2();  |         |   77  |    168  |  1  |   20  |  [18,168,8,134]  |
   466  |                         R = R + 2;  |      2  |   79  |    168  |  1  |   20  |  [18,168,8,134]  |
   470  |                         j = j + 1;  |         |   79  |    168  |  1  |   21  |  [18,168,8,134]  |
   471  |              resetPlaceHolder_2();  |         |   79  |    168  |  1  |   21  |  [18,168,8,134]  |
   477  |                         R = R + 2;  |      2  |   81  |    168  |  1  |   21  |  [18,168,8,134]  |
   481  |                         j = j + 1;  |         |   81  |    168  |  1  |   22  |  [18,168,8,134]  |
   482  |              resetPlaceHolder_2();  |         |   81  |    168  |  1  |   22  |  [18,168,8,134]  |
   488  |                         R = R + 2;  |      2  |   83  |    168  |  1  |   22  |  [18,168,8,134]  |
   492  |                         j = j + 1;  |         |   83  |    168  |  1  |   23  |  [18,168,8,134]  |
   493  |              resetPlaceHolder_2();  |         |   83  |    168  |  1  |   23  |  [18,168,8,134]  |
   499  |                         R = R + 2;  |      2  |   85  |    168  |  1  |   23  |  [18,168,8,134]  |
   503  |                         j = j + 1;  |         |   85  |    168  |  1  |   24  |  [18,168,8,134]  |
   504  |              resetPlaceHolder_2();  |         |   85  |    168  |  1  |   24  |  [18,168,8,134]  |
   510  |                         R = R + 2;  |      2  |   87  |    168  |  1  |   24  |  [18,168,8,134]  |
   514  |                         j = j + 1;  |         |   87  |    168  |  1  |   25  |  [18,168,8,134]  |
   515  |              resetPlaceHolder_2();  |         |   87  |    168  |  1  |   25  |  [18,168,8,134]  |
   521  |                         R = R + 2;  |      2  |   89  |    168  |  1  |   25  |  [18,168,8,134]  |
   525  |                         j = j + 1;  |         |   89  |    168  |  1  |   26  |  [18,168,8,134]  |
   526  |              resetPlaceHolder_2();  |         |   89  |    168  |  1  |   26  |  [18,168,8,134]  |
   532  |                         R = R + 2;  |      2  |   91  |    168  |  1  |   26  |  [18,168,8,134]  |
   536  |                         j = j + 1;  |         |   91  |    168  |  1  |   27  |  [18,168,8,134]  |
   537  |              resetPlaceHolder_2();  |         |   91  |    168  |  1  |   27  |  [18,168,8,134]  |
   543  |                         R = R + 2;  |      2  |   93  |    168  |  1  |   27  |  [18,168,8,134]  |
   547  |                         j = j + 1;  |         |   93  |    168  |  1  |   28  |  [18,168,8,134]  |
   548  |              resetPlaceHolder_2();  |         |   93  |    168  |  1  |   28  |  [18,168,8,134]  |
   554  |                         R = R + 2;  |      2  |   95  |    168  |  1  |   28  |  [18,168,8,134]  |
   558  |                         j = j + 1;  |         |   95  |    168  |  1  |   29  |  [18,168,8,134]  |
   559  |              resetPlaceHolder_2();  |         |   95  |    168  |  1  |   29  |  [18,168,8,134]  |
   565  |                         R = R + 2;  |      2  |   97  |    168  |  1  |   29  |  [18,168,8,134]  |
   569  |                         j = j + 1;  |         |   97  |    168  |  1  |   30  |  [18,168,8,134]  |
   570  |              resetPlaceHolder_2();  |         |   97  |    168  |  1  |   30  |  [18,168,8,134]  |
   576  |                         R = R + 2;  |      2  |   99  |    168  |  1  |   30  |  [18,168,8,134]  |
   580  |                         j = j + 1;  |         |   99  |    168  |  1  |   31  |  [18,168,8,134]  |
   581  |              resetPlaceHolder_2();  |         |   99  |    168  |  1  |   31  |  [18,168,8,134]  |
   587  |                         R = R + 2;  |      2  |  101  |    168  |  1  |   31  |  [18,168,8,134]  |
   591  |                         j = j + 1;  |         |  101  |    168  |  1  |   32  |  [18,168,8,134]  |
   592  |              resetPlaceHolder_2();  |         |  101  |    168  |  1  |   32  |  [18,168,8,134]  |
   598  |                         R = R + 2;  |      2  |  103  |    168  |  1  |   32  |  [18,168,8,134]  |
   602  |                         j = j + 1;  |         |  103  |    168  |  1  |   33  |  [18,168,8,134]  |
   603  |              resetPlaceHolder_2();  |         |  103  |    168  |  1  |   33  |  [18,168,8,134]  |
   609  |                         R = R + 2;  |      2  |  105  |    168  |  1  |   33  |  [18,168,8,134]  |
   613  |                         j = j + 1;  |         |  105  |    168  |  1  |   34  |  [18,168,8,134]  |
   614  |              resetPlaceHolder_2();  |         |  105  |    168  |  1  |   34  |  [18,168,8,134]  |
   620  |                         R = R + 2;  |      2  |  107  |    168  |  1  |   34  |  [18,168,8,134]  |
   624  |                         j = j + 1;  |         |  107  |    168  |  1  |   35  |  [18,168,8,134]  |
   625  |              resetPlaceHolder_2();  |         |  107  |    168  |  1  |   35  |  [18,168,8,134]  |
   631  |                         R = R + 2;  |      2  |  109  |    168  |  1  |   35  |  [18,168,8,134]  |
   635  |                         j = j + 1;  |         |  109  |    168  |  1  |   36  |  [18,168,8,134]  |
   636  |              resetPlaceHolder_2();  |         |  109  |    168  |  1  |   36  |  [18,168,8,134]  |
   642  |                         R = R + 2;  |      2  |  111  |    168  |  1  |   36  |  [18,168,8,134]  |
   646  |                         j = j + 1;  |         |  111  |    168  |  1  |   37  |  [18,168,8,134]  |
   647  |              resetPlaceHolder_2();  |         |  111  |    168  |  1  |   37  |  [18,168,8,134]  |
   653  |                         R = R + 2;  |      2  |  113  |    168  |  1  |   37  |  [18,168,8,134]  |
   657  |                         j = j + 1;  |         |  113  |    168  |  1  |   38  |  [18,168,8,134]  |
   658  |              resetPlaceHolder_2();  |         |  113  |    168  |  1  |   38  |  [18,168,8,134]  |
   664  |                         R = R + 2;  |      2  |  115  |    168  |  1  |   38  |  [18,168,8,134]  |
   668  |                         j = j + 1;  |         |  115  |    168  |  1  |   39  |  [18,168,8,134]  |
   669  |              resetPlaceHolder_2();  |         |  115  |    168  |  1  |   39  |  [18,168,8,134]  |
   675  |                         R = R + 2;  |      2  |  117  |    168  |  1  |   39  |  [18,168,8,134]  |
   679  |                         j = j + 1;  |         |  117  |    168  |  1  |   40  |  [18,168,8,134]  |
   680  |              resetPlaceHolder_2();  |         |  117  |    168  |  1  |   40  |  [18,168,8,134]  |
   686  |                         R = R + 2;  |      2  |  119  |    168  |  1  |   40  |  [18,168,8,134]  |
   690  |                         j = j + 1;  |         |  119  |    168  |  1  |   41  |  [18,168,8,134]  |
   691  |              resetPlaceHolder_2();  |         |  119  |    168  |  1  |   41  |  [18,168,8,134]  |
   697  |                         R = R + 2;  |      2  |  121  |    168  |  1  |   41  |  [18,168,8,134]  |
   701  |                         j = j + 1;  |         |  121  |    168  |  1  |   42  |  [18,168,8,134]  |
   702  |              resetPlaceHolder_2();  |         |  121  |    168  |  1  |   42  |  [18,168,8,134]  |
   708  |                         R = R + 2;  |      2  |  123  |    168  |  1  |   42  |  [18,168,8,134]  |
   712  |                         j = j + 1;  |         |  123  |    168  |  1  |   43  |  [18,168,8,134]  |
   713  |              resetPlaceHolder_2();  |         |  123  |    168  |  1  |   43  |  [18,168,8,134]  |
   719  |                         R = R + 2;  |      2  |  125  |    168  |  1  |   43  |  [18,168,8,134]  |
   723  |                         j = j + 1;  |         |  125  |    168  |  1  |   44  |  [18,168,8,134]  |
   724  |              resetPlaceHolder_2();  |         |  125  |    168  |  1  |   44  |  [18,168,8,134]  |
   730  |                         R = R + 2;  |      2  |  127  |    168  |  1  |   44  |  [18,168,8,134]  |
   734  |                         j = j + 1;  |         |  127  |    168  |  1  |   45  |  [18,168,8,134]  |
   735  |              resetPlaceHolder_2();  |         |  127  |    168  |  1  |   45  |  [18,168,8,134]  |
   741  |                         R = R + 2;  |      2  |  129  |    168  |  1  |   45  |  [18,168,8,134]  |
   745  |                         j = j + 1;  |         |  129  |    168  |  1  |   46  |  [18,168,8,134]  |
   746  |              resetPlaceHolder_2();  |         |  129  |    168  |  1  |   46  |  [18,168,8,134]  |
   752  |                         R = R + 2;  |      2  |  131  |    168  |  1  |   46  |  [18,168,8,134]  |
   756  |                         j = j + 1;  |         |  131  |    168  |  1  |   47  |  [18,168,8,134]  |
   757  |              resetPlaceHolder_2();  |         |  131  |    168  |  1  |   47  |  [18,168,8,134]  |
   763  |                         R = R + 2;  |      2  |  133  |    168  |  1  |   47  |  [18,168,8,134]  |
   767  |                         j = j + 1;  |         |  133  |    168  |  1  |   48  |  [18,168,8,134]  |
   768  |              resetPlaceHolder_2();  |         |  133  |    168  |  1  |   48  |  [18,168,8,134]  |
   774  |                         R = R + 2;  |      2  |  135  |    168  |  1  |   48  |  [18,168,8,134]  |
   778  |                         j = j + 1;  |         |  135  |    168  |  1  |   49  |  [18,168,8,134]  |
   779  |              resetPlaceHolder_2();  |         |  135  |    168  |  1  |   49  |  [18,168,8,134]  |
   785  |                         R = R + 2;  |      2  |  137  |    168  |  1  |   49  |  [18,168,8,134]  |
   789  |                         j = j + 1;  |         |  137  |    168  |  1  |   50  |  [18,168,8,134]  |
   790  |              resetPlaceHolder_2();  |         |  137  |    168  |  1  |   50  |  [18,168,8,134]  |
   796  |                         R = R + 2;  |      2  |  139  |    168  |  1  |   50  |  [18,168,8,134]  |
   800  |                         j = j + 1;  |         |  139  |    168  |  1  |   51  |  [18,168,8,134]  |
   801  |              resetPlaceHolder_2();  |         |  139  |    168  |  1  |   51  |  [18,168,8,134]  |
   807  |                         R = R + 2;  |      2  |  141  |    168  |  1  |   51  |  [18,168,8,134]  |
   811  |                         j = j + 1;  |         |  141  |    168  |  1  |   52  |  [18,168,8,134]  |
   812  |              resetPlaceHolder_2();  |         |  141  |    168  |  1  |   52  |  [18,168,8,134]  |
   818  |                         R = R + 2;  |      2  |  143  |    168  |  1  |   52  |  [18,168,8,134]  |
   822  |                         j = j + 1;  |         |  143  |    168  |  1  |   53  |  [18,168,8,134]  |
   823  |              resetPlaceHolder_2();  |         |  143  |    168  |  1  |   53  |  [18,168,8,134]  |
   829  |                         R = R + 2;  |      2  |  145  |    168  |  1  |   53  |  [18,168,8,134]  |
   833  |                         j = j + 1;  |         |  145  |    168  |  1  |   54  |  [18,168,8,134]  |
   834  |              resetPlaceHolder_2();  |         |  145  |    168  |  1  |   54  |  [18,168,8,134]  |
   840  |                         R = R + 2;  |      2  |  147  |    168  |  1  |   54  |  [18,168,8,134]  |
   844  |                         j = j + 1;  |         |  147  |    168  |  1  |   55  |  [18,168,8,134]  |
   845  |              resetPlaceHolder_2();  |         |  147  |    168  |  1  |   55  |  [18,168,8,134]  |
   851  |                         R = R + 2;  |      2  |  149  |    168  |  1  |   55  |  [18,168,8,134]  |
   855  |                         j = j + 1;  |         |  149  |    168  |  1  |   56  |  [18,168,8,134]  |
   856  |              resetPlaceHolder_2();  |         |  149  |    168  |  1  |   56  |  [18,168,8,134]  |
   862  |                         R = R + 2;  |      2  |  151  |    168  |  1  |   56  |  [18,168,8,134]  |
   866  |                         j = j + 1;  |         |  151  |    168  |  1  |   57  |  [18,168,8,134]  |
   867  |              resetPlaceHolder_2();  |         |  151  |    168  |  1  |   57  |  [18,168,8,134]  |
   873  |                         R = R + 2;  |      2  |  153  |    168  |  1  |   57  |  [18,168,8,134]  |
   877  |                         j = j + 1;  |         |  153  |    168  |  1  |   58  |  [18,168,8,134]  |
   878  |              resetPlaceHolder_2();  |         |  153  |    168  |  1  |   58  |  [18,168,8,134]  |
   884  |                         R = R + 2;  |      2  |  155  |    168  |  1  |   58  |  [18,168,8,134]  |
   888  |                         j = j + 1;  |         |  155  |    168  |  1  |   59  |  [18,168,8,134]  |
   889  |              resetPlaceHolder_2();  |         |  155  |    168  |  1  |   59  |  [18,168,8,134]  |
   895  |                         R = R + 2;  |      2  |  157  |    168  |  1  |   59  |  [18,168,8,134]  |
   899  |                         j = j + 1;  |         |  157  |    168  |  1  |   60  |  [18,168,8,134]  |
   900  |              resetPlaceHolder_2();  |         |  157  |    168  |  1  |   60  |  [18,168,8,134]  |
   906  |                         R = R + 2;  |      2  |  159  |    168  |  1  |   60  |  [18,168,8,134]  |
   910  |                         j = j + 1;  |         |  159  |    168  |  1  |   61  |  [18,168,8,134]  |
   911  |              resetPlaceHolder_2();  |         |  159  |    168  |  1  |   61  |  [18,168,8,134]  |
   917  |                         R = R + 2;  |      2  |  161  |    168  |  1  |   61  |  [18,168,8,134]  |
   921  |                         j = j + 1;  |         |  161  |    168  |  1  |   62  |  [18,168,8,134]  |
   922  |              resetPlaceHolder_2();  |         |  161  |    168  |  1  |   62  |  [18,168,8,134]  |
   928  |                         R = R + 2;  |      2  |  163  |    168  |  1  |   62  |  [18,168,8,134]  |
   932  |                         j = j + 1;  |         |  163  |    168  |  1  |   63  |  [18,168,8,134]  |
   933  |              resetPlaceHolder_2();  |         |  163  |    168  |  1  |   63  |  [18,168,8,134]  |
   939  |                         R = R + 2;  |      2  |  165  |    168  |  1  |   63  |  [18,168,8,134]  |
   943  |                         j = j + 1;  |         |  165  |    168  |  1  |   64  |  [18,168,8,134]  |
   944  |              resetPlaceHolder_2();  |         |  165  |    168  |  1  |   64  |  [18,168,8,134]  |
   950  |                         R = R + 2;  |      2  |  167  |    168  |  1  |   64  |  [18,168,8,134]  |
   954  |                         j = j + 1;  |         |  167  |    168  |  1  |   65  |  [18,168,8,134]  |
   955  |              resetPlaceHolder_2();  |         |  167  |    168  |  1  |   65  |  [18,168,8,134]  |
   961  |                         R = R + 2;  |      2  |  169  |    168  |  1  |   65  |  [18,168,8,134]  |
   965  |                         j = j + 1;  |         |  169  |    168  |  1  |   66  |  [18,168,8,134]  |
   966  |              resetPlaceHolder_2();  |         |  169  |    168  |  1  |   66  |  [18,168,8,134]  |
   972  |                         R = R + 2;  |      2  |  171  |    168  |  1  |   66  |  [18,168,8,134]  |
   976  |                         j = j + 1;  |         |  171  |    168  |  1  |   67  |  [18,168,8,134]  |
   977  |              resetPlaceHolder_2();  |         |  171  |    168  |  1  |   67  |  [18,168,8,134]  |
   983  |                         R = R + 2;  |      2  |  173  |    168  |  1  |   67  |  [18,168,8,134]  |
   987  |                         j = j + 1;  |         |  173  |    168  |  1  |   68  |  [18,168,8,134]  |
   988  |              resetPlaceHolder_2();  |         |  173  |    168  |  1  |   68  |  [18,168,8,134]  |
   994  |                         R = R + 2;  |      2  |  175  |    168  |  1  |   68  |  [18,168,8,134]  |
   998  |                         j = j + 1;  |         |  175  |    168  |  1  |   69  |  [18,168,8,134]  |
   999  |              resetPlaceHolder_2();  |         |  175  |    168  |  1  |   69  |  [18,168,8,134]  |
  1005  |                         R = R + 2;  |      2  |  177  |    168  |  1  |   69  |  [18,168,8,134]  |
  1009  |                         j = j + 1;  |         |  177  |    168  |  1  |   70  |  [18,168,8,134]  |
  1010  |              resetPlaceHolder_2();  |         |  177  |    168  |  1  |   70  |  [18,168,8,134]  |
  1016  |                         R = R + 2;  |      2  |  179  |    168  |  1  |   70  |  [18,168,8,134]  |
  1020  |                         j = j + 1;  |         |  179  |    168  |  1  |   71  |  [18,168,8,134]  |
  1021  |              resetPlaceHolder_2();  |         |  179  |    168  |  1  |   71  |  [18,168,8,134]  |
  1027  |                         R = R + 2;  |      2  |  181  |    168  |  1  |   71  |  [18,168,8,134]  |
  1031  |                         j = j + 1;  |         |  181  |    168  |  1  |   72  |  [18,168,8,134]  |
  1032  |              resetPlaceHolder_2();  |         |  181  |    168  |  1  |   72  |  [18,168,8,134]  |
  1038  |                         R = R + 2;  |      2  |  183  |    168  |  1  |   72  |  [18,168,8,134]  |
  1042  |                         j = j + 1;  |         |  183  |    168  |  1  |   73  |  [18,168,8,134]  |
  1043  |              resetPlaceHolder_2();  |         |  183  |    168  |  1  |   73  |  [18,168,8,134]  |
  1049  |                         R = R + 2;  |      2  |  185  |    168  |  1  |   73  |  [18,168,8,134]  |
  1053  |                         j = j + 1;  |         |  185  |    168  |  1  |   74  |  [18,168,8,134]  |
  1054  |              resetPlaceHolder_2();  |         |  185  |    168  |  1  |   74  |  [18,168,8,134]  |
  1060  |                         R = R + 2;  |      2  |  187  |    168  |  1  |   74  |  [18,168,8,134]  |
  1064  |                         j = j + 1;  |         |  187  |    168  |  1  |   75  |  [18,168,8,134]  |
  1065  |              resetPlaceHolder_2();  |         |  187  |    168  |  1  |   75  |  [18,168,8,134]  |
  1071  |                         R = R + 2;  |      2  |  189  |    168  |  1  |   75  |  [18,168,8,134]  |
  1075  |                         j = j + 1;  |         |  189  |    168  |  1  |   76  |  [18,168,8,134]  |
  1076  |              resetPlaceHolder_2();  |         |  189  |    168  |  1  |   76  |  [18,168,8,134]  |
  1082  |                         R = R + 2;  |      2  |  191  |    168  |  1  |   76  |  [18,168,8,134]  |
  1086  |                         j = j + 1;  |         |  191  |    168  |  1  |   77  |  [18,168,8,134]  |
  1087  |              resetPlaceHolder_2();  |         |  191  |    168  |  1  |   77  |  [18,168,8,134]  |
  1093  |                         R = R + 2;  |      2  |  193  |    168  |  1  |   77  |  [18,168,8,134]  |
  1097  |                         j = j + 1;  |         |  193  |    168  |  1  |   78  |  [18,168,8,134]  |
  1098  |              resetPlaceHolder_2();  |         |  193  |    168  |  1  |   78  |  [18,168,8,134]  |
  1104  |                         R = R + 2;  |      2  |  195  |    168  |  1  |   78  |  [18,168,8,134]  |
  1108  |                         j = j + 1;  |         |  195  |    168  |  1  |   79  |  [18,168,8,134]  |
  1109  |              resetPlaceHolder_2();  |         |  195  |    168  |  1  |   79  |  [18,168,8,134]  |
  1115  |                         R = R + 2;  |      2  |  197  |    168  |  1  |   79  |  [18,168,8,134]  |
  1119  |                         j = j + 1;  |         |  197  |    168  |  1  |   80  |  [18,168,8,134]  |
  1120  |              resetPlaceHolder_2();  |         |  197  |    168  |  1  |   80  |  [18,168,8,134]  |
  1126  |                         R = R + 2;  |      2  |  199  |    168  |  1  |   80  |  [18,168,8,134]  |
  1130  |                         j = j + 1;  |         |  199  |    168  |  1  |   81  |  [18,168,8,134]  |
  1131  |              resetPlaceHolder_2();  |         |  199  |    168  |  1  |   81  |  [18,168,8,134]  |
  1137  |                         R = R + 2;  |      2  |  201  |    168  |  1  |   81  |  [18,168,8,134]  |
  1141  |                         j = j + 1;  |         |  201  |    168  |  1  |   82  |  [18,168,8,134]  |
  1142  |              resetPlaceHolder_2();  |         |  201  |    168  |  1  |   82  |  [18,168,8,134]  |
  1148  |                         R = R + 2;  |      2  |  203  |    168  |  1  |   82  |  [18,168,8,134]  |
  1152  |                         j = j + 1;  |         |  203  |    168  |  1  |   83  |  [18,168,8,134]  |
  1153  |              resetPlaceHolder_2();  |         |  203  |    168  |  1  |   83  |  [18,168,8,134]  |
  1159  |                         R = R + 2;  |      2  |  205  |    168  |  1  |   83  |  [18,168,8,134]  |
  1163  |                         j = j + 1;  |         |  205  |    168  |  1  |   84  |  [18,168,8,134]  |
  1164  |              resetPlaceHolder_2();  |         |  205  |    168  |  1  |   84  |  [18,168,8,134]  |
  1170  |                         R = R + 2;  |      2  |  207  |    168  |  1  |   84  |  [18,168,8,134]  |
  1174  |                         j = j + 1;  |         |  207  |    168  |  1  |   85  |  [18,168,8,134]  |
  1175  |              resetPlaceHolder_2();  |         |  207  |    168  |  1  |   85  |  [18,168,8,134]  |
  1181  |                         R = R + 2;  |      2  |  209  |    168  |  1  |   85  |  [18,168,8,134]  |
  1185  |                         j = j + 1;  |         |  209  |    168  |  1  |   86  |  [18,168,8,134]  |
  1186  |              resetPlaceHolder_2();  |         |  209  |    168  |  1  |   86  |  [18,168,8,134]  |
  1192  |                         R = R + 2;  |      2  |  211  |    168  |  1  |   86  |  [18,168,8,134]  |
  1196  |                         j = j + 1;  |         |  211  |    168  |  1  |   87  |  [18,168,8,134]  |
  1197  |              resetPlaceHolder_2();  |         |  211  |    168  |  1  |   87  |  [18,168,8,134]  |
  1203  |                         R = R + 2;  |      2  |  213  |    168  |  1  |   87  |  [18,168,8,134]  |
  1207  |                         j = j + 1;  |         |  213  |    168  |  1  |   88  |  [18,168,8,134]  |
  1208  |              resetPlaceHolder_2();  |         |  213  |    168  |  1  |   88  |  [18,168,8,134]  |
  1214  |                         R = R + 2;  |      2  |  215  |    168  |  1  |   88  |  [18,168,8,134]  |
  1218  |                         j = j + 1;  |         |  215  |    168  |  1  |   89  |  [18,168,8,134]  |
  1219  |              resetPlaceHolder_2();  |         |  215  |    168  |  1  |   89  |  [18,168,8,134]  |
  1225  |                         R = R + 2;  |      2  |  217  |    168  |  1  |   89  |  [18,168,8,134]  |
  1229  |                         j = j + 1;  |         |  217  |    168  |  1  |   90  |  [18,168,8,134]  |
  1230  |              resetPlaceHolder_2();  |         |  217  |    168  |  1  |   90  |  [18,168,8,134]  |
  1236  |                         R = R + 2;  |      2  |  219  |    168  |  1  |   90  |  [18,168,8,134]  |
  1240  |                         j = j + 1;  |         |  219  |    168  |  1  |   91  |  [18,168,8,134]  |
  1241  |              resetPlaceHolder_2();  |         |  219  |    168  |  1  |   91  |  [18,168,8,134]  |
  1247  |                         R = R + 2;  |      2  |  221  |    168  |  1  |   91  |  [18,168,8,134]  |
  1251  |                         j = j + 1;  |         |  221  |    168  |  1  |   92  |  [18,168,8,134]  |
  1252  |              resetPlaceHolder_2();  |         |  221  |    168  |  1  |   92  |  [18,168,8,134]  |
  1258  |                         R = R + 2;  |      2  |  223  |    168  |  1  |   92  |  [18,168,8,134]  |
  1262  |                         j = j + 1;  |         |  223  |    168  |  1  |   93  |  [18,168,8,134]  |
  1263  |              resetPlaceHolder_2();  |         |  223  |    168  |  1  |   93  |  [18,168,8,134]  |
  1269  |                         R = R + 2;  |      2  |  225  |    168  |  1  |   93  |  [18,168,8,134]  |
  1273  |                         j = j + 1;  |         |  225  |    168  |  1  |   94  |  [18,168,8,134]  |
  1274  |              resetPlaceHolder_2();  |         |  225  |    168  |  1  |   94  |  [18,168,8,134]  |
  1280  |                         R = R + 2;  |      2  |  227  |    168  |  1  |   94  |  [18,168,8,134]  |
  1284  |                         j = j + 1;  |         |  227  |    168  |  1  |   95  |  [18,168,8,134]  |
  1285  |              resetPlaceHolder_2();  |         |  227  |    168  |  1  |   95  |  [18,168,8,134]  |
  1291  |                         R = R + 2;  |      2  |  229  |    168  |  1  |   95  |  [18,168,8,134]  |
  1295  |                         j = j + 1;  |         |  229  |    168  |  1  |   96  |  [18,168,8,134]  |
  1296  |              resetPlaceHolder_2();  |         |  229  |    168  |  1  |   96  |  [18,168,8,134]  |
  1302  |                         R = R + 2;  |      2  |  231  |    168  |  1  |   96  |  [18,168,8,134]  |
  1306  |                         j = j + 1;  |         |  231  |    168  |  1  |   97  |  [18,168,8,134]  |
  1307  |              resetPlaceHolder_2();  |         |  231  |    168  |  1  |   97  |  [18,168,8,134]  |
  1313  |                         R = R + 2;  |      2  |  233  |    168  |  1  |   97  |  [18,168,8,134]  |
  1317  |                         j = j + 1;  |         |  233  |    168  |  1  |   98  |  [18,168,8,134]  |
  1318  |              resetPlaceHolder_2();  |         |  233  |    168  |  1  |   98  |  [18,168,8,134]  |
  1324  |                         R = R + 2;  |      2  |  235  |    168  |  1  |   98  |  [18,168,8,134]  |
  1328  |                         j = j + 1;  |         |  235  |    168  |  1  |   99  |  [18,168,8,134]  |
  1329  |              resetPlaceHolder_2();  |         |  235  |    168  |  1  |   99  |  [18,168,8,134]  |
  1335  |                         R = R + 2;  |      2  |  237  |    168  |  1  |   99  |  [18,168,8,134]  |
  1339  |                         j = j + 1;  |         |  237  |    168  |  1  |  100  |  [18,168,8,134]  |
  1340  |              resetPlaceHolder_2();  |         |  237  |    168  |  1  |  100  |  [18,168,8,134]  |
  1346  |                         R = R + 2;  |      2  |  239  |    168  |  1  |  100  |  [18,168,8,134]  |
  1350  |                         j = j + 1;  |         |  239  |    168  |  1  |  101  |  [18,168,8,134]  |
  1351  |              resetPlaceHolder_2();  |         |  239  |    168  |  1  |  101  |  [18,168,8,134]  |
  1357  |                         R = R + 2;  |      2  |  241  |    168  |  1  |  101  |  [18,168,8,134]  |
  1361  |                         j = j + 1;  |         |  241  |    168  |  1  |  102  |  [18,168,8,134]  |
  1362  |              resetPlaceHolder_2();  |         |  241  |    168  |  1  |  102  |  [18,168,8,134]  |
  1368  |                         R = R + 2;  |      2  |  243  |    168  |  1  |  102  |  [18,168,8,134]  |
  1372  |                         j = j + 1;  |         |  243  |    168  |  1  |  103  |  [18,168,8,134]  |
  1373  |              resetPlaceHolder_2();  |         |  243  |    168  |  1  |  103  |  [18,168,8,134]  |
  1379  |                         R = R + 2;  |      2  |  245  |    168  |  1  |  103  |  [18,168,8,134]  |
  1383  |                         j = j + 1;  |         |  245  |    168  |  1  |  104  |  [18,168,8,134]  |
  1384  |              resetPlaceHolder_2();  |         |  245  |    168  |  1  |  104  |  [18,168,8,134]  |
  1390  |                         R = R + 2;  |      2  |  247  |    168  |  1  |  104  |  [18,168,8,134]  |
  1394  |                         j = j + 1;  |         |  247  |    168  |  1  |  105  |  [18,168,8,134]  |
  1395  |              resetPlaceHolder_2();  |         |  247  |    168  |  1  |  105  |  [18,168,8,134]  |
  1401  |                         R = R + 2;  |      2  |  249  |    168  |  1  |  105  |  [18,168,8,134]  |
  1405  |                         j = j + 1;  |         |  249  |    168  |  1  |  106  |  [18,168,8,134]  |
  1406  |              resetPlaceHolder_2();  |         |  249  |    168  |  1  |  106  |  [18,168,8,134]  |
  1412  |                         R = R + 2;  |      2  |  251  |    168  |  1  |  106  |  [18,168,8,134]  |
  1416  |                         j = j + 1;  |         |  251  |    168  |  1  |  107  |  [18,168,8,134]  |
  1417  |              resetPlaceHolder_2();  |         |  251  |    168  |  1  |  107  |  [18,168,8,134]  |
  1423  |                         R = R + 2;  |      2  |  253  |    168  |  1  |  107  |  [18,168,8,134]  |
  1427  |                         j = j + 1;  |         |  253  |    168  |  1  |  108  |  [18,168,8,134]  |
  1428  |              resetPlaceHolder_2();  |         |  253  |    168  |  1  |  108  |  [18,168,8,134]  |
  1434  |                         R = R + 2;  |      2  |  255  |    168  |  1  |  108  |  [18,168,8,134]  |
  1438  |                         j = j + 1;  |         |  255  |    168  |  1  |  109  |  [18,168,8,134]  |
  1439  |              resetPlaceHolder_2();  |         |  255  |    168  |  1  |  109  |  [18,168,8,134]  |
  1445  |                         R = R + 2;  |      2  |  257  |    168  |  1  |  109  |  [18,168,8,134]  |
  1449  |                         j = j + 1;  |         |  257  |    168  |  1  |  110  |  [18,168,8,134]  |
  1450  |              resetPlaceHolder_2();  |         |  257  |    168  |  1  |  110  |  [18,168,8,134]  |
  1456  |                         R = R + 2;  |      2  |  259  |    168  |  1  |  110  |  [18,168,8,134]  |
  1460  |                         j = j + 1;  |         |  259  |    168  |  1  |  111  |  [18,168,8,134]  |
  1461  |              resetPlaceHolder_2();  |         |  259  |    168  |  1  |  111  |  [18,168,8,134]  |
  1467  |                         R = R + 2;  |      2  |  261  |    168  |  1  |  111  |  [18,168,8,134]  |
  1471  |                         j = j + 1;  |         |  261  |    168  |  1  |  112  |  [18,168,8,134]  |
  1472  |              resetPlaceHolder_2();  |         |  261  |    168  |  1  |  112  |  [18,168,8,134]  |
  1478  |                         R = R + 2;  |      2  |  263  |    168  |  1  |  112  |  [18,168,8,134]  |
  1482  |                         j = j + 1;  |         |  263  |    168  |  1  |  113  |  [18,168,8,134]  |
  1483  |              resetPlaceHolder_2();  |         |  263  |    168  |  1  |  113  |  [18,168,8,134]  |
  1489  |                         R = R + 2;  |      2  |  265  |    168  |  1  |  113  |  [18,168,8,134]  |
  1493  |                         j = j + 1;  |         |  265  |    168  |  1  |  114  |  [18,168,8,134]  |
  1494  |              resetPlaceHolder_2();  |         |  265  |    168  |  1  |  114  |  [18,168,8,134]  |
  1500  |                         R = R + 2;  |      2  |  267  |    168  |  1  |  114  |  [18,168,8,134]  |
  1504  |                         j = j + 1;  |         |  267  |    168  |  1  |  115  |  [18,168,8,134]  |
  1505  |              resetPlaceHolder_2();  |         |  267  |    168  |  1  |  115  |  [18,168,8,134]  |
  1511  |                         R = R + 2;  |      2  |  269  |    168  |  1  |  115  |  [18,168,8,134]  |
  1515  |                         j = j + 1;  |         |  269  |    168  |  1  |  116  |  [18,168,8,134]  |
  1516  |              resetPlaceHolder_2();  |         |  269  |    168  |  1  |  116  |  [18,168,8,134]  |
  1522  |                         R = R + 2;  |      2  |  271  |    168  |  1  |  116  |  [18,168,8,134]  |
  1526  |                         j = j + 1;  |         |  271  |    168  |  1  |  117  |  [18,168,8,134]  |
  1527  |              resetPlaceHolder_2();  |         |  271  |    168  |  1  |  117  |  [18,168,8,134]  |
  1533  |                         R = R + 2;  |      2  |  273  |    168  |  1  |  117  |  [18,168,8,134]  |
  1537  |                         j = j + 1;  |         |  273  |    168  |  1  |  118  |  [18,168,8,134]  |
  1538  |              resetPlaceHolder_2();  |         |  273  |    168  |  1  |  118  |  [18,168,8,134]  |
  1544  |                         R = R + 2;  |      2  |  275  |    168  |  1  |  118  |  [18,168,8,134]  |
  1548  |                         j = j + 1;  |         |  275  |    168  |  1  |  119  |  [18,168,8,134]  |
  1549  |              resetPlaceHolder_2();  |         |  275  |    168  |  1  |  119  |  [18,168,8,134]  |
  1555  |                         R = R + 2;  |      2  |  277  |    168  |  1  |  119  |  [18,168,8,134]  |
  1559  |                         j = j + 1;  |         |  277  |    168  |  1  |  120  |  [18,168,8,134]  |
  1560  |              resetPlaceHolder_2();  |         |  277  |    168  |  1  |  120  |  [18,168,8,134]  |
  1566  |                         R = R + 2;  |      2  |  279  |    168  |  1  |  120  |  [18,168,8,134]  |
  1570  |                         j = j + 1;  |         |  279  |    168  |  1  |  121  |  [18,168,8,134]  |
  1571  |              resetPlaceHolder_2();  |         |  279  |    168  |  1  |  121  |  [18,168,8,134]  |
  1577  |                         R = R + 2;  |      2  |  281  |    168  |  1  |  121  |  [18,168,8,134]  |
  1581  |                         j = j + 1;  |         |  281  |    168  |  1  |  122  |  [18,168,8,134]  |
  1582  |              resetPlaceHolder_2();  |         |  281  |    168  |  1  |  122  |  [18,168,8,134]  |
  1588  |                         R = R + 2;  |      2  |  283  |    168  |  1  |  122  |  [18,168,8,134]  |
  1592  |                         j = j + 1;  |         |  283  |    168  |  1  |  123  |  [18,168,8,134]  |
  1593  |              resetPlaceHolder_2();  |         |  283  |    168  |  1  |  123  |  [18,168,8,134]  |
  1599  |                         R = R + 2;  |      2  |  285  |    168  |  1  |  123  |  [18,168,8,134]  |
  1603  |                         j = j + 1;  |         |  285  |    168  |  1  |  124  |  [18,168,8,134]  |
  1604  |              resetPlaceHolder_2();  |         |  285  |    168  |  1  |  124  |  [18,168,8,134]  |
  1610  |                         R = R + 2;  |      2  |  287  |    168  |  1  |  124  |  [18,168,8,134]  |
  1614  |                         j = j + 1;  |         |  287  |    168  |  1  |  125  |  [18,168,8,134]  |
  1615  |              resetPlaceHolder_2();  |         |  287  |    168  |  1  |  125  |  [18,168,8,134]  |
  1621  |                         R = R + 2;  |      2  |  289  |    168  |  1  |  125  |  [18,168,8,134]  |
  1625  |                         j = j + 1;  |         |  289  |    168  |  1  |  126  |  [18,168,8,134]  |
  1626  |              resetPlaceHolder_2();  |         |  289  |    168  |  1  |  126  |  [18,168,8,134]  |
  1632  |                         R = R + 2;  |      2  |  291  |    168  |  1  |  126  |  [18,168,8,134]  |
  1636  |                         j = j + 1;  |         |  291  |    168  |  1  |  127  |  [18,168,8,134]  |
  1637  |              resetPlaceHolder_2();  |         |  291  |    168  |  1  |  127  |  [18,168,8,134]  |
  1643  |                         R = R + 2;  |      2  |  293  |    168  |  1  |  127  |  [18,168,8,134]  |
  1647  |                         j = j + 1;  |         |  293  |    168  |  1  |  128  |  [18,168,8,134]  |
  1648  |              resetPlaceHolder_2();  |         |  293  |    168  |  1  |  128  |  [18,168,8,134]  |
  1654  |                         R = R + 2;  |      2  |  295  |    168  |  1  |  128  |  [18,168,8,134]  |
  1658  |                         j = j + 1;  |         |  295  |    168  |  1  |  129  |  [18,168,8,134]  |
  1659  |              resetPlaceHolder_2();  |         |  295  |    168  |  1  |  129  |  [18,168,8,134]  |
  1665  |                         R = R + 2;  |      2  |  297  |    168  |  1  |  129  |  [18,168,8,134]  |
  1669  |                         j = j + 1;  |         |  297  |    168  |  1  |  130  |  [18,168,8,134]  |
  1670  |              resetPlaceHolder_2();  |         |  297  |    168  |  1  |  130  |  [18,168,8,134]  |
  1676  |                         R = R + 2;  |      2  |  299  |    168  |  1  |  130  |  [18,168,8,134]  |
  1680  |                         j = j + 1;  |         |  299  |    168  |  1  |  131  |  [18,168,8,134]  |
  1681  |              resetPlaceHolder_2();  |         |  299  |    168  |  1  |  131  |  [18,168,8,134]  |
  1687  |                         R = R + 2;  |      2  |  301  |    168  |  1  |  131  |  [18,168,8,134]  |
  1691  |                         j = j + 1;  |         |  301  |    168  |  1  |  132  |  [18,168,8,134]  |
  1692  |              resetPlaceHolder_2();  |         |  301  |    168  |  1  |  132  |  [18,168,8,134]  |
  1698  |                         R = R + 2;  |      2  |  303  |    168  |  1  |  132  |  [18,168,8,134]  |
  1702  |                         j = j + 1;  |         |  303  |    168  |  1  |  133  |  [18,168,8,134]  |
  1703  |              resetPlaceHolder_2();  |         |  303  |    168  |  1  |  133  |  [18,168,8,134]  |
  1709  |                         R = R + 2;  |      2  |  305  |    168  |  1  |  133  |  [18,168,8,134]  |
  1713  |                         j = j + 1;  |         |  305  |    168  |  1  |  134  |  [18,168,8,134]  |
  1714  |              resetPlaceHolder_2();  |         |  305  |    168  |  1  |  134  |  [18,168,8,134]  |
  1720  |                         R = R + 2;  |      2  |  307  |    168  |  1  |  134  |  [18,168,8,134]  |
  1724  |                         j = j + 1;  |         |  307  |    168  |  1  |  135  |  [18,168,8,134]  |
  1725  |              resetPlaceHolder_2();  |         |  307  |    168  |  1  |  135  |  [18,168,8,134]  |
  1731  |                         R = R + 2;  |      2  |  309  |    168  |  1  |  135  |  [18,168,8,134]  |
  1735  |                         j = j + 1;  |         |  309  |    168  |  1  |  136  |  [18,168,8,134]  |
  1736  |              resetPlaceHolder_2();  |         |  309  |    168  |  1  |  136  |  [18,168,8,134]  |
  1742  |                         R = R + 2;  |      2  |  311  |    168  |  1  |  136  |  [18,168,8,134]  |
  1746  |                         j = j + 1;  |         |  311  |    168  |  1  |  137  |  [18,168,8,134]  |
  1747  |              resetPlaceHolder_2();  |         |  311  |    168  |  1  |  137  |  [18,168,8,134]  |
  1753  |                         R = R + 2;  |      2  |  313  |    168  |  1  |  137  |  [18,168,8,134]  |
  1757  |                         j = j + 1;  |         |  313  |    168  |  1  |  138  |  [18,168,8,134]  |
  1758  |              resetPlaceHolder_2();  |         |  313  |    168  |  1  |  138  |  [18,168,8,134]  |
  1764  |                         R = R + 2;  |      2  |  315  |    168  |  1  |  138  |  [18,168,8,134]  |
  1768  |                         j = j + 1;  |         |  315  |    168  |  1  |  139  |  [18,168,8,134]  |
  1769  |              resetPlaceHolder_2();  |         |  315  |    168  |  1  |  139  |  [18,168,8,134]  |
  1775  |                         R = R + 2;  |      2  |  317  |    168  |  1  |  139  |  [18,168,8,134]  |
  1779  |                         j = j + 1;  |         |  317  |    168  |  1  |  140  |  [18,168,8,134]  |
  1780  |              resetPlaceHolder_2();  |         |  317  |    168  |  1  |  140  |  [18,168,8,134]  |
  1786  |                         R = R + 2;  |      2  |  319  |    168  |  1  |  140  |  [18,168,8,134]  |
  1790  |                         j = j + 1;  |         |  319  |    168  |  1  |  141  |  [18,168,8,134]  |
  1791  |              resetPlaceHolder_2();  |         |  319  |    168  |  1  |  141  |  [18,168,8,134]  |
  1797  |                         R = R + 2;  |      2  |  321  |    168  |  1  |  141  |  [18,168,8,134]  |
  1801  |                         j = j + 1;  |         |  321  |    168  |  1  |  142  |  [18,168,8,134]  |
  1802  |              resetPlaceHolder_2();  |         |  321  |    168  |  1  |  142  |  [18,168,8,134]  |
  1808  |                         R = R + 2;  |      2  |  323  |    168  |  1  |  142  |  [18,168,8,134]  |
  1812  |                         j = j + 1;  |         |  323  |    168  |  1  |  143  |  [18,168,8,134]  |
  1813  |              resetPlaceHolder_2();  |         |  323  |    168  |  1  |  143  |  [18,168,8,134]  |
  1819  |                         R = R + 2;  |      2  |  325  |    168  |  1  |  143  |  [18,168,8,134]  |
  1823  |                         j = j + 1;  |         |  325  |    168  |  1  |  144  |  [18,168,8,134]  |
  1824  |              resetPlaceHolder_2();  |         |  325  |    168  |  1  |  144  |  [18,168,8,134]  |
  1830  |                         R = R + 2;  |      2  |  327  |    168  |  1  |  144  |  [18,168,8,134]  |
  1834  |                         j = j + 1;  |         |  327  |    168  |  1  |  145  |  [18,168,8,134]  |
  1835  |              resetPlaceHolder_2();  |         |  327  |    168  |  1  |  145  |  [18,168,8,134]  |
  1841  |                         R = R + 2;  |      2  |  329  |    168  |  1  |  145  |  [18,168,8,134]  |
  1845  |                         j = j + 1;  |         |  329  |    168  |  1  |  146  |  [18,168,8,134]  |
  1846  |              resetPlaceHolder_2();  |         |  329  |    168  |  1  |  146  |  [18,168,8,134]  |
  1852  |                         R = R + 2;  |      2  |  331  |    168  |  1  |  146  |  [18,168,8,134]  |
  1856  |                         j = j + 1;  |         |  331  |    168  |  1  |  147  |  [18,168,8,134]  |
  1857  |              resetPlaceHolder_2();  |         |  331  |    168  |  1  |  147  |  [18,168,8,134]  |
  1863  |                         R = R + 2;  |      2  |  333  |    168  |  1  |  147  |  [18,168,8,134]  |
  1867  |                         j = j + 1;  |         |  333  |    168  |  1  |  148  |  [18,168,8,134]  |
  1868  |              resetPlaceHolder_2();  |         |  333  |    168  |  1  |  148  |  [18,168,8,134]  |
  1874  |                         R = R + 2;  |      2  |  335  |    168  |  1  |  148  |  [18,168,8,134]  |
  1878  |                         j = j + 1;  |         |  335  |    168  |  1  |  149  |  [18,168,8,134]  |
  1879  |              resetPlaceHolder_2();  |         |  335  |    168  |  1  |  149  |  [18,168,8,134]  |
  1885  |                         R = R + 2;  |      2  |  337  |    168  |  1  |  149  |  [18,168,8,134]  |
  1889  |                         j = j + 1;  |         |  337  |    168  |  1  |  150  |  [18,168,8,134]  |
  1890  |              resetPlaceHolder_2();  |         |  337  |    168  |  1  |  150  |  [18,168,8,134]  |
  1896  |                         R = R + 2;  |      2  |  339  |    168  |  1  |  150  |  [18,168,8,134]  |
  1900  |                         j = j + 1;  |         |  339  |    168  |  1  |  151  |  [18,168,8,134]  |
  1901  |              resetPlaceHolder_2();  |         |  339  |    168  |  1  |  151  |  [18,168,8,134]  |
  1907  |                         R = R + 2;  |      2  |  341  |    168  |  1  |  151  |  [18,168,8,134]  |
  1911  |                         j = j + 1;  |         |  341  |    168  |  1  |  152  |  [18,168,8,134]  |
  1912  |              resetPlaceHolder_2();  |         |  341  |    168  |  1  |  152  |  [18,168,8,134]  |
  1918  |                         R = R + 2;  |      2  |  343  |    168  |  1  |  152  |  [18,168,8,134]  |
  1922  |                         j = j + 1;  |         |  343  |    168  |  1  |  153  |  [18,168,8,134]  |
  1923  |              resetPlaceHolder_2();  |         |  343  |    168  |  1  |  153  |  [18,168,8,134]  |
  1929  |                         R = R + 2;  |      2  |  345  |    168  |  1  |  153  |  [18,168,8,134]  |
  1933  |                         j = j + 1;  |         |  345  |    168  |  1  |  154  |  [18,168,8,134]  |
  1934  |              resetPlaceHolder_2();  |         |  345  |    168  |  1  |  154  |  [18,168,8,134]  |
  1940  |                         R = R + 2;  |      2  |  347  |    168  |  1  |  154  |  [18,168,8,134]  |
  1944  |                         j = j + 1;  |         |  347  |    168  |  1  |  155  |  [18,168,8,134]  |
  1945  |              resetPlaceHolder_2();  |         |  347  |    168  |  1  |  155  |  [18,168,8,134]  |
  1951  |                         R = R + 2;  |      2  |  349  |    168  |  1  |  155  |  [18,168,8,134]  |
  1955  |                         j = j + 1;  |         |  349  |    168  |  1  |  156  |  [18,168,8,134]  |
  1956  |              resetPlaceHolder_2();  |         |  349  |    168  |  1  |  156  |  [18,168,8,134]  |
  1962  |                         R = R + 2;  |      2  |  351  |    168  |  1  |  156  |  [18,168,8,134]  |
  1966  |                         j = j + 1;  |         |  351  |    168  |  1  |  157  |  [18,168,8,134]  |
  1967  |              resetPlaceHolder_2();  |         |  351  |    168  |  1  |  157  |  [18,168,8,134]  |
  1973  |                         R = R + 2;  |      2  |  353  |    168  |  1  |  157  |  [18,168,8,134]  |
  1977  |                         j = j + 1;  |         |  353  |    168  |  1  |  158  |  [18,168,8,134]  |
  1978  |              resetPlaceHolder_2();  |         |  353  |    168  |  1  |  158  |  [18,168,8,134]  |
  1984  |                         R = R + 2;  |      2  |  355  |    168  |  1  |  158  |  [18,168,8,134]  |
  1988  |                         j = j + 1;  |         |  355  |    168  |  1  |  159  |  [18,168,8,134]  |
  1989  |              resetPlaceHolder_2();  |         |  355  |    168  |  1  |  159  |  [18,168,8,134]  |
  1995  |                         R = R + 2;  |      2  |  357  |    168  |  1  |  159  |  [18,168,8,134]  |
  1999  |                         j = j + 1;  |         |  357  |    168  |  1  |  160  |  [18,168,8,134]  |
  2000  |              resetPlaceHolder_2();  |         |  357  |    168  |  1  |  160  |  [18,168,8,134]  |
  2006  |                         R = R + 2;  |      2  |  359  |    168  |  1  |  160  |  [18,168,8,134]  |
  2010  |                         j = j + 1;  |         |  359  |    168  |  1  |  161  |  [18,168,8,134]  |
  2011  |              resetPlaceHolder_2();  |         |  359  |    168  |  1  |  161  |  [18,168,8,134]  |
  2017  |                         R = R + 2;  |      2  |  361  |    168  |  1  |  161  |  [18,168,8,134]  |
  2021  |                         j = j + 1;  |         |  361  |    168  |  1  |  162  |  [18,168,8,134]  |
  2022  |              resetPlaceHolder_2();  |         |  361  |    168  |  1  |  162  |  [18,168,8,134]  |
  2028  |                         R = R + 2;  |      2  |  363  |    168  |  1  |  162  |  [18,168,8,134]  |
  2032  |                         j = j + 1;  |         |  363  |    168  |  1  |  163  |  [18,168,8,134]  |
  2033  |              resetPlaceHolder_2();  |         |  363  |    168  |  1  |  163  |  [18,168,8,134]  |
  2039  |                         R = R + 2;  |      2  |  365  |    168  |  1  |  163  |  [18,168,8,134]  |
  2043  |                         j = j + 1;  |         |  365  |    168  |  1  |  164  |  [18,168,8,134]  |
  2044  |              resetPlaceHolder_2();  |         |  365  |    168  |  1  |  164  |  [18,168,8,134]  |
  2050  |                         R = R + 2;  |      2  |  367  |    168  |  1  |  164  |  [18,168,8,134]  |
  2054  |                         j = j + 1;  |         |  367  |    168  |  1  |  165  |  [18,168,8,134]  |
  2055  |              resetPlaceHolder_2();  |         |  367  |    168  |  1  |  165  |  [18,168,8,134]  |
  2061  |                         R = R + 2;  |      2  |  369  |    168  |  1  |  165  |  [18,168,8,134]  |
  2065  |                         j = j + 1;  |         |  369  |    168  |  1  |  166  |  [18,168,8,134]  |
  2066  |              resetPlaceHolder_2();  |         |  369  |    168  |  1  |  166  |  [18,168,8,134]  |
  2072  |                         R = R + 2;  |      2  |  371  |    168  |  1  |  166  |  [18,168,8,134]  |
  2076  |                         j = j + 1;  |         |  371  |    168  |  1  |  167  |  [18,168,8,134]  |
  2077  |              resetPlaceHolder_2();  |         |  371  |    168  |  1  |  167  |  [18,168,8,134]  |
  2083  |                         R = R + 2;  |      2  |  373  |    168  |  1  |  167  |  [18,168,8,134]  |
  2087  |                         j = j + 1;  |         |  373  |    168  |  1  |  168  |  [18,168,8,134]  |
  2088  |              resetPlaceHolder_2();  |         |  373  |    168  |  1  |  168  |  [18,168,8,134]  |
  2094  |                         R = R + 1;  |      1  |  374  |    168  |  1  |  168  |  [18,168,8,134]  |
  2098  |                         i = i + 1;  |         |  374  |    168  |  2  |  168  |  [18,168,8,134]  |
  2099  |              resetPlaceHolder_1();  |         |  374  |    168  |  2  |  168  |  [18,168,8,134]  |
  2105  |      entry = arrayRead(sorted, i);  |         |  374  |      8  |  2  |  168  |  [18,168,8,134]  |
  2107  |                         int j = 0;  |         |  374  |      8  |  2  |    0  |  [18,168,8,134]  |
  2113  |                         R = R + 2;  |      2  |  376  |      8  |  2  |    0  |  [18,168,8,134]  |
  2117  |                         j = j + 1;  |         |  376  |      8  |  2  |    1  |  [18,168,8,134]  |
  2118  |              resetPlaceHolder_2();  |         |  376  |      8  |  2  |    1  |  [18,168,8,134]  |
  2124  |                         R = R + 2;  |      2  |  378  |      8  |  2  |    1  |  [18,168,8,134]  |
  2128  |                         j = j + 1;  |         |  378  |      8  |  2  |    2  |  [18,168,8,134]  |
  2129  |              resetPlaceHolder_2();  |         |  378  |      8  |  2  |    2  |  [18,168,8,134]  |
  2135  |                         R = R + 2;  |      2  |  380  |      8  |  2  |    2  |  [18,168,8,134]  |
  2139  |                         j = j + 1;  |         |  380  |      8  |  2  |    3  |  [18,168,8,134]  |
  2140  |              resetPlaceHolder_2();  |         |  380  |      8  |  2  |    3  |  [18,168,8,134]  |
  2146  |                         R = R + 2;  |      2  |  382  |      8  |  2  |    3  |  [18,168,8,134]  |
  2150  |                         j = j + 1;  |         |  382  |      8  |  2  |    4  |  [18,168,8,134]  |
  2151  |              resetPlaceHolder_2();  |         |  382  |      8  |  2  |    4  |  [18,168,8,134]  |
  2157  |                         R = R + 2;  |      2  |  384  |      8  |  2  |    4  |  [18,168,8,134]  |
  2161  |                         j = j + 1;  |         |  384  |      8  |  2  |    5  |  [18,168,8,134]  |
  2162  |              resetPlaceHolder_2();  |         |  384  |      8  |  2  |    5  |  [18,168,8,134]  |
  2168  |                         R = R + 2;  |      2  |  386  |      8  |  2  |    5  |  [18,168,8,134]  |
  2172  |                         j = j + 1;  |         |  386  |      8  |  2  |    6  |  [18,168,8,134]  |
  2173  |              resetPlaceHolder_2();  |         |  386  |      8  |  2  |    6  |  [18,168,8,134]  |
  2179  |                         R = R + 2;  |      2  |  388  |      8  |  2  |    6  |  [18,168,8,134]  |
  2183  |                         j = j + 1;  |         |  388  |      8  |  2  |    7  |  [18,168,8,134]  |
  2184  |              resetPlaceHolder_2();  |         |  388  |      8  |  2  |    7  |  [18,168,8,134]  |
  2190  |                         R = R + 2;  |      2  |  390  |      8  |  2  |    7  |  [18,168,8,134]  |
  2194  |                         j = j + 1;  |         |  390  |      8  |  2  |    8  |  [18,168,8,134]  |
  2195  |              resetPlaceHolder_2();  |         |  390  |      8  |  2  |    8  |  [18,168,8,134]  |
  2201  |                         R = R + 1;  |      1  |  391  |      8  |  2  |    8  |  [18,168,8,134]  |
  2205  |                         i = i + 1;  |         |  391  |      8  |  3  |    8  |  [18,168,8,134]  |
  2206  |              resetPlaceHolder_1();  |         |  391  |      8  |  3  |    8  |  [18,168,8,134]  |
  2212  |      entry = arrayRead(sorted, i);  |         |  391  |    134  |  3  |    8  |  [18,168,8,134]  |
  2214  |                         int j = 0;  |         |  391  |    134  |  3  |    0  |  [18,168,8,134]  |
  2220  |                         R = R + 2;  |      2  |  393  |    134  |  3  |    0  |  [18,168,8,134]  |
  2224  |                         j = j + 1;  |         |  393  |    134  |  3  |    1  |  [18,168,8,134]  |
  2225  |              resetPlaceHolder_2();  |         |  393  |    134  |  3  |    1  |  [18,168,8,134]  |
  2231  |                         R = R + 2;  |      2  |  395  |    134  |  3  |    1  |  [18,168,8,134]  |
  2235  |                         j = j + 1;  |         |  395  |    134  |  3  |    2  |  [18,168,8,134]  |
  2236  |              resetPlaceHolder_2();  |         |  395  |    134  |  3  |    2  |  [18,168,8,134]  |
  2242  |                         R = R + 2;  |      2  |  397  |    134  |  3  |    2  |  [18,168,8,134]  |
  2246  |                         j = j + 1;  |         |  397  |    134  |  3  |    3  |  [18,168,8,134]  |
  2247  |              resetPlaceHolder_2();  |         |  397  |    134  |  3  |    3  |  [18,168,8,134]  |
  2253  |                         R = R + 2;  |      2  |  399  |    134  |  3  |    3  |  [18,168,8,134]  |
  2257  |                         j = j + 1;  |         |  399  |    134  |  3  |    4  |  [18,168,8,134]  |
  2258  |              resetPlaceHolder_2();  |         |  399  |    134  |  3  |    4  |  [18,168,8,134]  |
  2264  |                         R = R + 2;  |      2  |  401  |    134  |  3  |    4  |  [18,168,8,134]  |
  2268  |                         j = j + 1;  |         |  401  |    134  |  3  |    5  |  [18,168,8,134]  |
  2269  |              resetPlaceHolder_2();  |         |  401  |    134  |  3  |    5  |  [18,168,8,134]  |
  2275  |                         R = R + 2;  |      2  |  403  |    134  |  3  |    5  |  [18,168,8,134]  |
  2279  |                         j = j + 1;  |         |  403  |    134  |  3  |    6  |  [18,168,8,134]  |
  2280  |              resetPlaceHolder_2();  |         |  403  |    134  |  3  |    6  |  [18,168,8,134]  |
  2286  |                         R = R + 2;  |      2  |  405  |    134  |  3  |    6  |  [18,168,8,134]  |
  2290  |                         j = j + 1;  |         |  405  |    134  |  3  |    7  |  [18,168,8,134]  |
  2291  |              resetPlaceHolder_2();  |         |  405  |    134  |  3  |    7  |  [18,168,8,134]  |
  2297  |                         R = R + 2;  |      2  |  407  |    134  |  3  |    7  |  [18,168,8,134]  |
  2301  |                         j = j + 1;  |         |  407  |    134  |  3  |    8  |  [18,168,8,134]  |
  2302  |              resetPlaceHolder_2();  |         |  407  |    134  |  3  |    8  |  [18,168,8,134]  |
  2308  |                         R = R + 2;  |      2  |  409  |    134  |  3  |    8  |  [18,168,8,134]  |
  2312  |                         j = j + 1;  |         |  409  |    134  |  3  |    9  |  [18,168,8,134]  |
  2313  |              resetPlaceHolder_2();  |         |  409  |    134  |  3  |    9  |  [18,168,8,134]  |
  2319  |                         R = R + 2;  |      2  |  411  |    134  |  3  |    9  |  [18,168,8,134]  |
  2323  |                         j = j + 1;  |         |  411  |    134  |  3  |   10  |  [18,168,8,134]  |
  2324  |              resetPlaceHolder_2();  |         |  411  |    134  |  3  |   10  |  [18,168,8,134]  |
  2330  |                         R = R + 2;  |      2  |  413  |    134  |  3  |   10  |  [18,168,8,134]  |
  2334  |                         j = j + 1;  |         |  413  |    134  |  3  |   11  |  [18,168,8,134]  |
  2335  |              resetPlaceHolder_2();  |         |  413  |    134  |  3  |   11  |  [18,168,8,134]  |
  2341  |                         R = R + 2;  |      2  |  415  |    134  |  3  |   11  |  [18,168,8,134]  |
  2345  |                         j = j + 1;  |         |  415  |    134  |  3  |   12  |  [18,168,8,134]  |
  2346  |              resetPlaceHolder_2();  |         |  415  |    134  |  3  |   12  |  [18,168,8,134]  |
  2352  |                         R = R + 2;  |      2  |  417  |    134  |  3  |   12  |  [18,168,8,134]  |
  2356  |                         j = j + 1;  |         |  417  |    134  |  3  |   13  |  [18,168,8,134]  |
  2357  |              resetPlaceHolder_2();  |         |  417  |    134  |  3  |   13  |  [18,168,8,134]  |
  2363  |                         R = R + 2;  |      2  |  419  |    134  |  3  |   13  |  [18,168,8,134]  |
  2367  |                         j = j + 1;  |         |  419  |    134  |  3  |   14  |  [18,168,8,134]  |
  2368  |              resetPlaceHolder_2();  |         |  419  |    134  |  3  |   14  |  [18,168,8,134]  |
  2374  |                         R = R + 2;  |      2  |  421  |    134  |  3  |   14  |  [18,168,8,134]  |
  2378  |                         j = j + 1;  |         |  421  |    134  |  3  |   15  |  [18,168,8,134]  |
  2379  |              resetPlaceHolder_2();  |         |  421  |    134  |  3  |   15  |  [18,168,8,134]  |
  2385  |                         R = R + 2;  |      2  |  423  |    134  |  3  |   15  |  [18,168,8,134]  |
  2389  |                         j = j + 1;  |         |  423  |    134  |  3  |   16  |  [18,168,8,134]  |
  2390  |              resetPlaceHolder_2();  |         |  423  |    134  |  3  |   16  |  [18,168,8,134]  |
  2396  |                         R = R + 2;  |      2  |  425  |    134  |  3  |   16  |  [18,168,8,134]  |
  2400  |                         j = j + 1;  |         |  425  |    134  |  3  |   17  |  [18,168,8,134]  |
  2401  |              resetPlaceHolder_2();  |         |  425  |    134  |  3  |   17  |  [18,168,8,134]  |
  2407  |                         R = R + 2;  |      2  |  427  |    134  |  3  |   17  |  [18,168,8,134]  |
  2411  |                         j = j + 1;  |         |  427  |    134  |  3  |   18  |  [18,168,8,134]  |
  2412  |              resetPlaceHolder_2();  |         |  427  |    134  |  3  |   18  |  [18,168,8,134]  |
  2418  |                         R = R + 2;  |      2  |  429  |    134  |  3  |   18  |  [18,168,8,134]  |
  2422  |                         j = j + 1;  |         |  429  |    134  |  3  |   19  |  [18,168,8,134]  |
  2423  |              resetPlaceHolder_2();  |         |  429  |    134  |  3  |   19  |  [18,168,8,134]  |
  2429  |                         R = R + 2;  |      2  |  431  |    134  |  3  |   19  |  [18,168,8,134]  |
  2433  |                         j = j + 1;  |         |  431  |    134  |  3  |   20  |  [18,168,8,134]  |
  2434  |              resetPlaceHolder_2();  |         |  431  |    134  |  3  |   20  |  [18,168,8,134]  |
  2440  |                         R = R + 2;  |      2  |  433  |    134  |  3  |   20  |  [18,168,8,134]  |
  2444  |                         j = j + 1;  |         |  433  |    134  |  3  |   21  |  [18,168,8,134]  |
  2445  |              resetPlaceHolder_2();  |         |  433  |    134  |  3  |   21  |  [18,168,8,134]  |
  2451  |                         R = R + 2;  |      2  |  435  |    134  |  3  |   21  |  [18,168,8,134]  |
  2455  |                         j = j + 1;  |         |  435  |    134  |  3  |   22  |  [18,168,8,134]  |
  2456  |              resetPlaceHolder_2();  |         |  435  |    134  |  3  |   22  |  [18,168,8,134]  |
  2462  |                         R = R + 2;  |      2  |  437  |    134  |  3  |   22  |  [18,168,8,134]  |
  2466  |                         j = j + 1;  |         |  437  |    134  |  3  |   23  |  [18,168,8,134]  |
  2467  |              resetPlaceHolder_2();  |         |  437  |    134  |  3  |   23  |  [18,168,8,134]  |
  2473  |                         R = R + 2;  |      2  |  439  |    134  |  3  |   23  |  [18,168,8,134]  |
  2477  |                         j = j + 1;  |         |  439  |    134  |  3  |   24  |  [18,168,8,134]  |
  2478  |              resetPlaceHolder_2();  |         |  439  |    134  |  3  |   24  |  [18,168,8,134]  |
  2484  |                         R = R + 2;  |      2  |  441  |    134  |  3  |   24  |  [18,168,8,134]  |
  2488  |                         j = j + 1;  |         |  441  |    134  |  3  |   25  |  [18,168,8,134]  |
  2489  |              resetPlaceHolder_2();  |         |  441  |    134  |  3  |   25  |  [18,168,8,134]  |
  2495  |                         R = R + 2;  |      2  |  443  |    134  |  3  |   25  |  [18,168,8,134]  |
  2499  |                         j = j + 1;  |         |  443  |    134  |  3  |   26  |  [18,168,8,134]  |
  2500  |              resetPlaceHolder_2();  |         |  443  |    134  |  3  |   26  |  [18,168,8,134]  |
  2506  |                         R = R + 2;  |      2  |  445  |    134  |  3  |   26  |  [18,168,8,134]  |
  2510  |                         j = j + 1;  |         |  445  |    134  |  3  |   27  |  [18,168,8,134]  |
  2511  |              resetPlaceHolder_2();  |         |  445  |    134  |  3  |   27  |  [18,168,8,134]  |
  2517  |                         R = R + 2;  |      2  |  447  |    134  |  3  |   27  |  [18,168,8,134]  |
  2521  |                         j = j + 1;  |         |  447  |    134  |  3  |   28  |  [18,168,8,134]  |
  2522  |              resetPlaceHolder_2();  |         |  447  |    134  |  3  |   28  |  [18,168,8,134]  |
  2528  |                         R = R + 2;  |      2  |  449  |    134  |  3  |   28  |  [18,168,8,134]  |
  2532  |                         j = j + 1;  |         |  449  |    134  |  3  |   29  |  [18,168,8,134]  |
  2533  |              resetPlaceHolder_2();  |         |  449  |    134  |  3  |   29  |  [18,168,8,134]  |
  2539  |                         R = R + 2;  |      2  |  451  |    134  |  3  |   29  |  [18,168,8,134]  |
  2543  |                         j = j + 1;  |         |  451  |    134  |  3  |   30  |  [18,168,8,134]  |
  2544  |              resetPlaceHolder_2();  |         |  451  |    134  |  3  |   30  |  [18,168,8,134]  |
  2550  |                         R = R + 2;  |      2  |  453  |    134  |  3  |   30  |  [18,168,8,134]  |
  2554  |                         j = j + 1;  |         |  453  |    134  |  3  |   31  |  [18,168,8,134]  |
  2555  |              resetPlaceHolder_2();  |         |  453  |    134  |  3  |   31  |  [18,168,8,134]  |
  2561  |                         R = R + 2;  |      2  |  455  |    134  |  3  |   31  |  [18,168,8,134]  |
  2565  |                         j = j + 1;  |         |  455  |    134  |  3  |   32  |  [18,168,8,134]  |
  2566  |              resetPlaceHolder_2();  |         |  455  |    134  |  3  |   32  |  [18,168,8,134]  |
  2572  |                         R = R + 2;  |      2  |  457  |    134  |  3  |   32  |  [18,168,8,134]  |
  2576  |                         j = j + 1;  |         |  457  |    134  |  3  |   33  |  [18,168,8,134]  |
  2577  |              resetPlaceHolder_2();  |         |  457  |    134  |  3  |   33  |  [18,168,8,134]  |
  2583  |                         R = R + 2;  |      2  |  459  |    134  |  3  |   33  |  [18,168,8,134]  |
  2587  |                         j = j + 1;  |         |  459  |    134  |  3  |   34  |  [18,168,8,134]  |
  2588  |              resetPlaceHolder_2();  |         |  459  |    134  |  3  |   34  |  [18,168,8,134]  |
  2594  |                         R = R + 2;  |      2  |  461  |    134  |  3  |   34  |  [18,168,8,134]  |
  2598  |                         j = j + 1;  |         |  461  |    134  |  3  |   35  |  [18,168,8,134]  |
  2599  |              resetPlaceHolder_2();  |         |  461  |    134  |  3  |   35  |  [18,168,8,134]  |
  2605  |                         R = R + 2;  |      2  |  463  |    134  |  3  |   35  |  [18,168,8,134]  |
  2609  |                         j = j + 1;  |         |  463  |    134  |  3  |   36  |  [18,168,8,134]  |
  2610  |              resetPlaceHolder_2();  |         |  463  |    134  |  3  |   36  |  [18,168,8,134]  |
  2616  |                         R = R + 2;  |      2  |  465  |    134  |  3  |   36  |  [18,168,8,134]  |
  2620  |                         j = j + 1;  |         |  465  |    134  |  3  |   37  |  [18,168,8,134]  |
  2621  |              resetPlaceHolder_2();  |         |  465  |    134  |  3  |   37  |  [18,168,8,134]  |
  2627  |                         R = R + 2;  |      2  |  467  |    134  |  3  |   37  |  [18,168,8,134]  |
  2631  |                         j = j + 1;  |         |  467  |    134  |  3  |   38  |  [18,168,8,134]  |
  2632  |              resetPlaceHolder_2();  |         |  467  |    134  |  3  |   38  |  [18,168,8,134]  |
  2638  |                         R = R + 2;  |      2  |  469  |    134  |  3  |   38  |  [18,168,8,134]  |
  2642  |                         j = j + 1;  |         |  469  |    134  |  3  |   39  |  [18,168,8,134]  |
  2643  |              resetPlaceHolder_2();  |         |  469  |    134  |  3  |   39  |  [18,168,8,134]  |
  2649  |                         R = R + 2;  |      2  |  471  |    134  |  3  |   39  |  [18,168,8,134]  |
  2653  |                         j = j + 1;  |         |  471  |    134  |  3  |   40  |  [18,168,8,134]  |
  2654  |              resetPlaceHolder_2();  |         |  471  |    134  |  3  |   40  |  [18,168,8,134]  |
  2660  |                         R = R + 2;  |      2  |  473  |    134  |  3  |   40  |  [18,168,8,134]  |
  2664  |                         j = j + 1;  |         |  473  |    134  |  3  |   41  |  [18,168,8,134]  |
  2665  |              resetPlaceHolder_2();  |         |  473  |    134  |  3  |   41  |  [18,168,8,134]  |
  2671  |                         R = R + 2;  |      2  |  475  |    134  |  3  |   41  |  [18,168,8,134]  |
  2675  |                         j = j + 1;  |         |  475  |    134  |  3  |   42  |  [18,168,8,134]  |
  2676  |              resetPlaceHolder_2();  |         |  475  |    134  |  3  |   42  |  [18,168,8,134]  |
  2682  |                         R = R + 2;  |      2  |  477  |    134  |  3  |   42  |  [18,168,8,134]  |
  2686  |                         j = j + 1;  |         |  477  |    134  |  3  |   43  |  [18,168,8,134]  |
  2687  |              resetPlaceHolder_2();  |         |  477  |    134  |  3  |   43  |  [18,168,8,134]  |
  2693  |                         R = R + 2;  |      2  |  479  |    134  |  3  |   43  |  [18,168,8,134]  |
  2697  |                         j = j + 1;  |         |  479  |    134  |  3  |   44  |  [18,168,8,134]  |
  2698  |              resetPlaceHolder_2();  |         |  479  |    134  |  3  |   44  |  [18,168,8,134]  |
  2704  |                         R = R + 2;  |      2  |  481  |    134  |  3  |   44  |  [18,168,8,134]  |
  2708  |                         j = j + 1;  |         |  481  |    134  |  3  |   45  |  [18,168,8,134]  |
  2709  |              resetPlaceHolder_2();  |         |  481  |    134  |  3  |   45  |  [18,168,8,134]  |
  2715  |                         R = R + 2;  |      2  |  483  |    134  |  3  |   45  |  [18,168,8,134]  |
  2719  |                         j = j + 1;  |         |  483  |    134  |  3  |   46  |  [18,168,8,134]  |
  2720  |              resetPlaceHolder_2();  |         |  483  |    134  |  3  |   46  |  [18,168,8,134]  |
  2726  |                         R = R + 2;  |      2  |  485  |    134  |  3  |   46  |  [18,168,8,134]  |
  2730  |                         j = j + 1;  |         |  485  |    134  |  3  |   47  |  [18,168,8,134]  |
  2731  |              resetPlaceHolder_2();  |         |  485  |    134  |  3  |   47  |  [18,168,8,134]  |
  2737  |                         R = R + 2;  |      2  |  487  |    134  |  3  |   47  |  [18,168,8,134]  |
  2741  |                         j = j + 1;  |         |  487  |    134  |  3  |   48  |  [18,168,8,134]  |
  2742  |              resetPlaceHolder_2();  |         |  487  |    134  |  3  |   48  |  [18,168,8,134]  |
  2748  |                         R = R + 2;  |      2  |  489  |    134  |  3  |   48  |  [18,168,8,134]  |
  2752  |                         j = j + 1;  |         |  489  |    134  |  3  |   49  |  [18,168,8,134]  |
  2753  |              resetPlaceHolder_2();  |         |  489  |    134  |  3  |   49  |  [18,168,8,134]  |
  2759  |                         R = R + 2;  |      2  |  491  |    134  |  3  |   49  |  [18,168,8,134]  |
  2763  |                         j = j + 1;  |         |  491  |    134  |  3  |   50  |  [18,168,8,134]  |
  2764  |              resetPlaceHolder_2();  |         |  491  |    134  |  3  |   50  |  [18,168,8,134]  |
  2770  |                         R = R + 2;  |      2  |  493  |    134  |  3  |   50  |  [18,168,8,134]  |
  2774  |                         j = j + 1;  |         |  493  |    134  |  3  |   51  |  [18,168,8,134]  |
  2775  |              resetPlaceHolder_2();  |         |  493  |    134  |  3  |   51  |  [18,168,8,134]  |
  2781  |                         R = R + 2;  |      2  |  495  |    134  |  3  |   51  |  [18,168,8,134]  |
  2785  |                         j = j + 1;  |         |  495  |    134  |  3  |   52  |  [18,168,8,134]  |
  2786  |              resetPlaceHolder_2();  |         |  495  |    134  |  3  |   52  |  [18,168,8,134]  |
  2792  |                         R = R + 2;  |      2  |  497  |    134  |  3  |   52  |  [18,168,8,134]  |
  2796  |                         j = j + 1;  |         |  497  |    134  |  3  |   53  |  [18,168,8,134]  |
  2797  |              resetPlaceHolder_2();  |         |  497  |    134  |  3  |   53  |  [18,168,8,134]  |
  2803  |                         R = R + 2;  |      2  |  499  |    134  |  3  |   53  |  [18,168,8,134]  |
  2807  |                         j = j + 1;  |         |  499  |    134  |  3  |   54  |  [18,168,8,134]  |
  2808  |              resetPlaceHolder_2();  |         |  499  |    134  |  3  |   54  |  [18,168,8,134]  |
  2814  |                         R = R + 2;  |      2  |  501  |    134  |  3  |   54  |  [18,168,8,134]  |
  2818  |                         j = j + 1;  |         |  501  |    134  |  3  |   55  |  [18,168,8,134]  |
  2819  |              resetPlaceHolder_2();  |         |  501  |    134  |  3  |   55  |  [18,168,8,134]  |
  2825  |                         R = R + 2;  |      2  |  503  |    134  |  3  |   55  |  [18,168,8,134]  |
  2829  |                         j = j + 1;  |         |  503  |    134  |  3  |   56  |  [18,168,8,134]  |
  2830  |              resetPlaceHolder_2();  |         |  503  |    134  |  3  |   56  |  [18,168,8,134]  |
  2836  |                         R = R + 2;  |      2  |  505  |    134  |  3  |   56  |  [18,168,8,134]  |
  2840  |                         j = j + 1;  |         |  505  |    134  |  3  |   57  |  [18,168,8,134]  |
  2841  |              resetPlaceHolder_2();  |         |  505  |    134  |  3  |   57  |  [18,168,8,134]  |
  2847  |                         R = R + 2;  |      2  |  507  |    134  |  3  |   57  |  [18,168,8,134]  |
  2851  |                         j = j + 1;  |         |  507  |    134  |  3  |   58  |  [18,168,8,134]  |
  2852  |              resetPlaceHolder_2();  |         |  507  |    134  |  3  |   58  |  [18,168,8,134]  |
  2858  |                         R = R + 2;  |      2  |  509  |    134  |  3  |   58  |  [18,168,8,134]  |
  2862  |                         j = j + 1;  |         |  509  |    134  |  3  |   59  |  [18,168,8,134]  |
  2863  |              resetPlaceHolder_2();  |         |  509  |    134  |  3  |   59  |  [18,168,8,134]  |
  2869  |                         R = R + 2;  |      2  |  511  |    134  |  3  |   59  |  [18,168,8,134]  |
  2873  |                         j = j + 1;  |         |  511  |    134  |  3  |   60  |  [18,168,8,134]  |
  2874  |              resetPlaceHolder_2();  |         |  511  |    134  |  3  |   60  |  [18,168,8,134]  |
  2880  |                         R = R + 2;  |      2  |  513  |    134  |  3  |   60  |  [18,168,8,134]  |
  2884  |                         j = j + 1;  |         |  513  |    134  |  3  |   61  |  [18,168,8,134]  |
  2885  |              resetPlaceHolder_2();  |         |  513  |    134  |  3  |   61  |  [18,168,8,134]  |
  2891  |                         R = R + 2;  |      2  |  515  |    134  |  3  |   61  |  [18,168,8,134]  |
  2895  |                         j = j + 1;  |         |  515  |    134  |  3  |   62  |  [18,168,8,134]  |
  2896  |              resetPlaceHolder_2();  |         |  515  |    134  |  3  |   62  |  [18,168,8,134]  |
  2902  |                         R = R + 2;  |      2  |  517  |    134  |  3  |   62  |  [18,168,8,134]  |
  2906  |                         j = j + 1;  |         |  517  |    134  |  3  |   63  |  [18,168,8,134]  |
  2907  |              resetPlaceHolder_2();  |         |  517  |    134  |  3  |   63  |  [18,168,8,134]  |
  2913  |                         R = R + 2;  |      2  |  519  |    134  |  3  |   63  |  [18,168,8,134]  |
  2917  |                         j = j + 1;  |         |  519  |    134  |  3  |   64  |  [18,168,8,134]  |
  2918  |              resetPlaceHolder_2();  |         |  519  |    134  |  3  |   64  |  [18,168,8,134]  |
  2924  |                         R = R + 2;  |      2  |  521  |    134  |  3  |   64  |  [18,168,8,134]  |
  2928  |                         j = j + 1;  |         |  521  |    134  |  3  |   65  |  [18,168,8,134]  |
  2929  |              resetPlaceHolder_2();  |         |  521  |    134  |  3  |   65  |  [18,168,8,134]  |
  2935  |                         R = R + 2;  |      2  |  523  |    134  |  3  |   65  |  [18,168,8,134]  |
  2939  |                         j = j + 1;  |         |  523  |    134  |  3  |   66  |  [18,168,8,134]  |
  2940  |              resetPlaceHolder_2();  |         |  523  |    134  |  3  |   66  |  [18,168,8,134]  |
  2946  |                         R = R + 2;  |      2  |  525  |    134  |  3  |   66  |  [18,168,8,134]  |
  2950  |                         j = j + 1;  |         |  525  |    134  |  3  |   67  |  [18,168,8,134]  |
  2951  |              resetPlaceHolder_2();  |         |  525  |    134  |  3  |   67  |  [18,168,8,134]  |
  2957  |                         R = R + 2;  |      2  |  527  |    134  |  3  |   67  |  [18,168,8,134]  |
  2961  |                         j = j + 1;  |         |  527  |    134  |  3  |   68  |  [18,168,8,134]  |
  2962  |              resetPlaceHolder_2();  |         |  527  |    134  |  3  |   68  |  [18,168,8,134]  |
  2968  |                         R = R + 2;  |      2  |  529  |    134  |  3  |   68  |  [18,168,8,134]  |
  2972  |                         j = j + 1;  |         |  529  |    134  |  3  |   69  |  [18,168,8,134]  |
  2973  |              resetPlaceHolder_2();  |         |  529  |    134  |  3  |   69  |  [18,168,8,134]  |
  2979  |                         R = R + 2;  |      2  |  531  |    134  |  3  |   69  |  [18,168,8,134]  |
  2983  |                         j = j + 1;  |         |  531  |    134  |  3  |   70  |  [18,168,8,134]  |
  2984  |              resetPlaceHolder_2();  |         |  531  |    134  |  3  |   70  |  [18,168,8,134]  |
  2990  |                         R = R + 2;  |      2  |  533  |    134  |  3  |   70  |  [18,168,8,134]  |
  2994  |                         j = j + 1;  |         |  533  |    134  |  3  |   71  |  [18,168,8,134]  |
  2995  |              resetPlaceHolder_2();  |         |  533  |    134  |  3  |   71  |  [18,168,8,134]  |
  3001  |                         R = R + 2;  |      2  |  535  |    134  |  3  |   71  |  [18,168,8,134]  |
  3005  |                         j = j + 1;  |         |  535  |    134  |  3  |   72  |  [18,168,8,134]  |
  3006  |              resetPlaceHolder_2();  |         |  535  |    134  |  3  |   72  |  [18,168,8,134]  |
  3012  |                         R = R + 2;  |      2  |  537  |    134  |  3  |   72  |  [18,168,8,134]  |
  3016  |                         j = j + 1;  |         |  537  |    134  |  3  |   73  |  [18,168,8,134]  |
  3017  |              resetPlaceHolder_2();  |         |  537  |    134  |  3  |   73  |  [18,168,8,134]  |
  3023  |                         R = R + 2;  |      2  |  539  |    134  |  3  |   73  |  [18,168,8,134]  |
  3027  |                         j = j + 1;  |         |  539  |    134  |  3  |   74  |  [18,168,8,134]  |
  3028  |              resetPlaceHolder_2();  |         |  539  |    134  |  3  |   74  |  [18,168,8,134]  |
  3034  |                         R = R + 2;  |      2  |  541  |    134  |  3  |   74  |  [18,168,8,134]  |
  3038  |                         j = j + 1;  |         |  541  |    134  |  3  |   75  |  [18,168,8,134]  |
  3039  |              resetPlaceHolder_2();  |         |  541  |    134  |  3  |   75  |  [18,168,8,134]  |
  3045  |                         R = R + 2;  |      2  |  543  |    134  |  3  |   75  |  [18,168,8,134]  |
  3049  |                         j = j + 1;  |         |  543  |    134  |  3  |   76  |  [18,168,8,134]  |
  3050  |              resetPlaceHolder_2();  |         |  543  |    134  |  3  |   76  |  [18,168,8,134]  |
  3056  |                         R = R + 2;  |      2  |  545  |    134  |  3  |   76  |  [18,168,8,134]  |
  3060  |                         j = j + 1;  |         |  545  |    134  |  3  |   77  |  [18,168,8,134]  |
  3061  |              resetPlaceHolder_2();  |         |  545  |    134  |  3  |   77  |  [18,168,8,134]  |
  3067  |                         R = R + 2;  |      2  |  547  |    134  |  3  |   77  |  [18,168,8,134]  |
  3071  |                         j = j + 1;  |         |  547  |    134  |  3  |   78  |  [18,168,8,134]  |
  3072  |              resetPlaceHolder_2();  |         |  547  |    134  |  3  |   78  |  [18,168,8,134]  |
  3078  |                         R = R + 2;  |      2  |  549  |    134  |  3  |   78  |  [18,168,8,134]  |
  3082  |                         j = j + 1;  |         |  549  |    134  |  3  |   79  |  [18,168,8,134]  |
  3083  |              resetPlaceHolder_2();  |         |  549  |    134  |  3  |   79  |  [18,168,8,134]  |
  3089  |                         R = R + 2;  |      2  |  551  |    134  |  3  |   79  |  [18,168,8,134]  |
  3093  |                         j = j + 1;  |         |  551  |    134  |  3  |   80  |  [18,168,8,134]  |
  3094  |              resetPlaceHolder_2();  |         |  551  |    134  |  3  |   80  |  [18,168,8,134]  |
  3100  |                         R = R + 2;  |      2  |  553  |    134  |  3  |   80  |  [18,168,8,134]  |
  3104  |                         j = j + 1;  |         |  553  |    134  |  3  |   81  |  [18,168,8,134]  |
  3105  |              resetPlaceHolder_2();  |         |  553  |    134  |  3  |   81  |  [18,168,8,134]  |
  3111  |                         R = R + 2;  |      2  |  555  |    134  |  3  |   81  |  [18,168,8,134]  |
  3115  |                         j = j + 1;  |         |  555  |    134  |  3  |   82  |  [18,168,8,134]  |
  3116  |              resetPlaceHolder_2();  |         |  555  |    134  |  3  |   82  |  [18,168,8,134]  |
  3122  |                         R = R + 2;  |      2  |  557  |    134  |  3  |   82  |  [18,168,8,134]  |
  3126  |                         j = j + 1;  |         |  557  |    134  |  3  |   83  |  [18,168,8,134]  |
  3127  |              resetPlaceHolder_2();  |         |  557  |    134  |  3  |   83  |  [18,168,8,134]  |
  3133  |                         R = R + 2;  |      2  |  559  |    134  |  3  |   83  |  [18,168,8,134]  |
  3137  |                         j = j + 1;  |         |  559  |    134  |  3  |   84  |  [18,168,8,134]  |
  3138  |              resetPlaceHolder_2();  |         |  559  |    134  |  3  |   84  |  [18,168,8,134]  |
  3144  |                         R = R + 2;  |      2  |  561  |    134  |  3  |   84  |  [18,168,8,134]  |
  3148  |                         j = j + 1;  |         |  561  |    134  |  3  |   85  |  [18,168,8,134]  |
  3149  |              resetPlaceHolder_2();  |         |  561  |    134  |  3  |   85  |  [18,168,8,134]  |
  3155  |                         R = R + 2;  |      2  |  563  |    134  |  3  |   85  |  [18,168,8,134]  |
  3159  |                         j = j + 1;  |         |  563  |    134  |  3  |   86  |  [18,168,8,134]  |
  3160  |              resetPlaceHolder_2();  |         |  563  |    134  |  3  |   86  |  [18,168,8,134]  |
  3166  |                         R = R + 2;  |      2  |  565  |    134  |  3  |   86  |  [18,168,8,134]  |
  3170  |                         j = j + 1;  |         |  565  |    134  |  3  |   87  |  [18,168,8,134]  |
  3171  |              resetPlaceHolder_2();  |         |  565  |    134  |  3  |   87  |  [18,168,8,134]  |
  3177  |                         R = R + 2;  |      2  |  567  |    134  |  3  |   87  |  [18,168,8,134]  |
  3181  |                         j = j + 1;  |         |  567  |    134  |  3  |   88  |  [18,168,8,134]  |
  3182  |              resetPlaceHolder_2();  |         |  567  |    134  |  3  |   88  |  [18,168,8,134]  |
  3188  |                         R = R + 2;  |      2  |  569  |    134  |  3  |   88  |  [18,168,8,134]  |
  3192  |                         j = j + 1;  |         |  569  |    134  |  3  |   89  |  [18,168,8,134]  |
  3193  |              resetPlaceHolder_2();  |         |  569  |    134  |  3  |   89  |  [18,168,8,134]  |
  3199  |                         R = R + 2;  |      2  |  571  |    134  |  3  |   89  |  [18,168,8,134]  |
  3203  |                         j = j + 1;  |         |  571  |    134  |  3  |   90  |  [18,168,8,134]  |
  3204  |              resetPlaceHolder_2();  |         |  571  |    134  |  3  |   90  |  [18,168,8,134]  |
  3210  |                         R = R + 2;  |      2  |  573  |    134  |  3  |   90  |  [18,168,8,134]  |
  3214  |                         j = j + 1;  |         |  573  |    134  |  3  |   91  |  [18,168,8,134]  |
  3215  |              resetPlaceHolder_2();  |         |  573  |    134  |  3  |   91  |  [18,168,8,134]  |
  3221  |                         R = R + 2;  |      2  |  575  |    134  |  3  |   91  |  [18,168,8,134]  |
  3225  |                         j = j + 1;  |         |  575  |    134  |  3  |   92  |  [18,168,8,134]  |
  3226  |              resetPlaceHolder_2();  |         |  575  |    134  |  3  |   92  |  [18,168,8,134]  |
  3232  |                         R = R + 2;  |      2  |  577  |    134  |  3  |   92  |  [18,168,8,134]  |
  3236  |                         j = j + 1;  |         |  577  |    134  |  3  |   93  |  [18,168,8,134]  |
  3237  |              resetPlaceHolder_2();  |         |  577  |    134  |  3  |   93  |  [18,168,8,134]  |
  3243  |                         R = R + 2;  |      2  |  579  |    134  |  3  |   93  |  [18,168,8,134]  |
  3247  |                         j = j + 1;  |         |  579  |    134  |  3  |   94  |  [18,168,8,134]  |
  3248  |              resetPlaceHolder_2();  |         |  579  |    134  |  3  |   94  |  [18,168,8,134]  |
  3254  |                         R = R + 2;  |      2  |  581  |    134  |  3  |   94  |  [18,168,8,134]  |
  3258  |                         j = j + 1;  |         |  581  |    134  |  3  |   95  |  [18,168,8,134]  |
  3259  |              resetPlaceHolder_2();  |         |  581  |    134  |  3  |   95  |  [18,168,8,134]  |
  3265  |                         R = R + 2;  |      2  |  583  |    134  |  3  |   95  |  [18,168,8,134]  |
  3269  |                         j = j + 1;  |         |  583  |    134  |  3  |   96  |  [18,168,8,134]  |
  3270  |              resetPlaceHolder_2();  |         |  583  |    134  |  3  |   96  |  [18,168,8,134]  |
  3276  |                         R = R + 2;  |      2  |  585  |    134  |  3  |   96  |  [18,168,8,134]  |
  3280  |                         j = j + 1;  |         |  585  |    134  |  3  |   97  |  [18,168,8,134]  |
  3281  |              resetPlaceHolder_2();  |         |  585  |    134  |  3  |   97  |  [18,168,8,134]  |
  3287  |                         R = R + 2;  |      2  |  587  |    134  |  3  |   97  |  [18,168,8,134]  |
  3291  |                         j = j + 1;  |         |  587  |    134  |  3  |   98  |  [18,168,8,134]  |
  3292  |              resetPlaceHolder_2();  |         |  587  |    134  |  3  |   98  |  [18,168,8,134]  |
  3298  |                         R = R + 2;  |      2  |  589  |    134  |  3  |   98  |  [18,168,8,134]  |
  3302  |                         j = j + 1;  |         |  589  |    134  |  3  |   99  |  [18,168,8,134]  |
  3303  |              resetPlaceHolder_2();  |         |  589  |    134  |  3  |   99  |  [18,168,8,134]  |
  3309  |                         R = R + 2;  |      2  |  591  |    134  |  3  |   99  |  [18,168,8,134]  |
  3313  |                         j = j + 1;  |         |  591  |    134  |  3  |  100  |  [18,168,8,134]  |
  3314  |              resetPlaceHolder_2();  |         |  591  |    134  |  3  |  100  |  [18,168,8,134]  |
  3320  |                         R = R + 2;  |      2  |  593  |    134  |  3  |  100  |  [18,168,8,134]  |
  3324  |                         j = j + 1;  |         |  593  |    134  |  3  |  101  |  [18,168,8,134]  |
  3325  |              resetPlaceHolder_2();  |         |  593  |    134  |  3  |  101  |  [18,168,8,134]  |
  3331  |                         R = R + 2;  |      2  |  595  |    134  |  3  |  101  |  [18,168,8,134]  |
  3335  |                         j = j + 1;  |         |  595  |    134  |  3  |  102  |  [18,168,8,134]  |
  3336  |              resetPlaceHolder_2();  |         |  595  |    134  |  3  |  102  |  [18,168,8,134]  |
  3342  |                         R = R + 2;  |      2  |  597  |    134  |  3  |  102  |  [18,168,8,134]  |
  3346  |                         j = j + 1;  |         |  597  |    134  |  3  |  103  |  [18,168,8,134]  |
  3347  |              resetPlaceHolder_2();  |         |  597  |    134  |  3  |  103  |  [18,168,8,134]  |
  3353  |                         R = R + 2;  |      2  |  599  |    134  |  3  |  103  |  [18,168,8,134]  |
  3357  |                         j = j + 1;  |         |  599  |    134  |  3  |  104  |  [18,168,8,134]  |
  3358  |              resetPlaceHolder_2();  |         |  599  |    134  |  3  |  104  |  [18,168,8,134]  |
  3364  |                         R = R + 2;  |      2  |  601  |    134  |  3  |  104  |  [18,168,8,134]  |
  3368  |                         j = j + 1;  |         |  601  |    134  |  3  |  105  |  [18,168,8,134]  |
  3369  |              resetPlaceHolder_2();  |         |  601  |    134  |  3  |  105  |  [18,168,8,134]  |
  3375  |                         R = R + 2;  |      2  |  603  |    134  |  3  |  105  |  [18,168,8,134]  |
  3379  |                         j = j + 1;  |         |  603  |    134  |  3  |  106  |  [18,168,8,134]  |
  3380  |              resetPlaceHolder_2();  |         |  603  |    134  |  3  |  106  |  [18,168,8,134]  |
  3386  |                         R = R + 2;  |      2  |  605  |    134  |  3  |  106  |  [18,168,8,134]  |
  3390  |                         j = j + 1;  |         |  605  |    134  |  3  |  107  |  [18,168,8,134]  |
  3391  |              resetPlaceHolder_2();  |         |  605  |    134  |  3  |  107  |  [18,168,8,134]  |
  3397  |                         R = R + 2;  |      2  |  607  |    134  |  3  |  107  |  [18,168,8,134]  |
  3401  |                         j = j + 1;  |         |  607  |    134  |  3  |  108  |  [18,168,8,134]  |
  3402  |              resetPlaceHolder_2();  |         |  607  |    134  |  3  |  108  |  [18,168,8,134]  |
  3408  |                         R = R + 2;  |      2  |  609  |    134  |  3  |  108  |  [18,168,8,134]  |
  3412  |                         j = j + 1;  |         |  609  |    134  |  3  |  109  |  [18,168,8,134]  |
  3413  |              resetPlaceHolder_2();  |         |  609  |    134  |  3  |  109  |  [18,168,8,134]  |
  3419  |                         R = R + 2;  |      2  |  611  |    134  |  3  |  109  |  [18,168,8,134]  |
  3423  |                         j = j + 1;  |         |  611  |    134  |  3  |  110  |  [18,168,8,134]  |
  3424  |              resetPlaceHolder_2();  |         |  611  |    134  |  3  |  110  |  [18,168,8,134]  |
  3430  |                         R = R + 2;  |      2  |  613  |    134  |  3  |  110  |  [18,168,8,134]  |
  3434  |                         j = j + 1;  |         |  613  |    134  |  3  |  111  |  [18,168,8,134]  |
  3435  |              resetPlaceHolder_2();  |         |  613  |    134  |  3  |  111  |  [18,168,8,134]  |
  3441  |                         R = R + 2;  |      2  |  615  |    134  |  3  |  111  |  [18,168,8,134]  |
  3445  |                         j = j + 1;  |         |  615  |    134  |  3  |  112  |  [18,168,8,134]  |
  3446  |              resetPlaceHolder_2();  |         |  615  |    134  |  3  |  112  |  [18,168,8,134]  |
  3452  |                         R = R + 2;  |      2  |  617  |    134  |  3  |  112  |  [18,168,8,134]  |
  3456  |                         j = j + 1;  |         |  617  |    134  |  3  |  113  |  [18,168,8,134]  |
  3457  |              resetPlaceHolder_2();  |         |  617  |    134  |  3  |  113  |  [18,168,8,134]  |
  3463  |                         R = R + 2;  |      2  |  619  |    134  |  3  |  113  |  [18,168,8,134]  |
  3467  |                         j = j + 1;  |         |  619  |    134  |  3  |  114  |  [18,168,8,134]  |
  3468  |              resetPlaceHolder_2();  |         |  619  |    134  |  3  |  114  |  [18,168,8,134]  |
  3474  |                         R = R + 2;  |      2  |  621  |    134  |  3  |  114  |  [18,168,8,134]  |
  3478  |                         j = j + 1;  |         |  621  |    134  |  3  |  115  |  [18,168,8,134]  |
  3479  |              resetPlaceHolder_2();  |         |  621  |    134  |  3  |  115  |  [18,168,8,134]  |
  3485  |                         R = R + 2;  |      2  |  623  |    134  |  3  |  115  |  [18,168,8,134]  |
  3489  |                         j = j + 1;  |         |  623  |    134  |  3  |  116  |  [18,168,8,134]  |
  3490  |              resetPlaceHolder_2();  |         |  623  |    134  |  3  |  116  |  [18,168,8,134]  |
  3496  |                         R = R + 2;  |      2  |  625  |    134  |  3  |  116  |  [18,168,8,134]  |
  3500  |                         j = j + 1;  |         |  625  |    134  |  3  |  117  |  [18,168,8,134]  |
  3501  |              resetPlaceHolder_2();  |         |  625  |    134  |  3  |  117  |  [18,168,8,134]  |
  3507  |                         R = R + 2;  |      2  |  627  |    134  |  3  |  117  |  [18,168,8,134]  |
  3511  |                         j = j + 1;  |         |  627  |    134  |  3  |  118  |  [18,168,8,134]  |
  3512  |              resetPlaceHolder_2();  |         |  627  |    134  |  3  |  118  |  [18,168,8,134]  |
  3518  |                         R = R + 2;  |      2  |  629  |    134  |  3  |  118  |  [18,168,8,134]  |
  3522  |                         j = j + 1;  |         |  629  |    134  |  3  |  119  |  [18,168,8,134]  |
  3523  |              resetPlaceHolder_2();  |         |  629  |    134  |  3  |  119  |  [18,168,8,134]  |
  3529  |                         R = R + 2;  |      2  |  631  |    134  |  3  |  119  |  [18,168,8,134]  |
  3533  |                         j = j + 1;  |         |  631  |    134  |  3  |  120  |  [18,168,8,134]  |
  3534  |              resetPlaceHolder_2();  |         |  631  |    134  |  3  |  120  |  [18,168,8,134]  |
  3540  |                         R = R + 2;  |      2  |  633  |    134  |  3  |  120  |  [18,168,8,134]  |
  3544  |                         j = j + 1;  |         |  633  |    134  |  3  |  121  |  [18,168,8,134]  |
  3545  |              resetPlaceHolder_2();  |         |  633  |    134  |  3  |  121  |  [18,168,8,134]  |
  3551  |                         R = R + 2;  |      2  |  635  |    134  |  3  |  121  |  [18,168,8,134]  |
  3555  |                         j = j + 1;  |         |  635  |    134  |  3  |  122  |  [18,168,8,134]  |
  3556  |              resetPlaceHolder_2();  |         |  635  |    134  |  3  |  122  |  [18,168,8,134]  |
  3562  |                         R = R + 2;  |      2  |  637  |    134  |  3  |  122  |  [18,168,8,134]  |
  3566  |                         j = j + 1;  |         |  637  |    134  |  3  |  123  |  [18,168,8,134]  |
  3567  |              resetPlaceHolder_2();  |         |  637  |    134  |  3  |  123  |  [18,168,8,134]  |
  3573  |                         R = R + 2;  |      2  |  639  |    134  |  3  |  123  |  [18,168,8,134]  |
  3577  |                         j = j + 1;  |         |  639  |    134  |  3  |  124  |  [18,168,8,134]  |
  3578  |              resetPlaceHolder_2();  |         |  639  |    134  |  3  |  124  |  [18,168,8,134]  |
  3584  |                         R = R + 2;  |      2  |  641  |    134  |  3  |  124  |  [18,168,8,134]  |
  3588  |                         j = j + 1;  |         |  641  |    134  |  3  |  125  |  [18,168,8,134]  |
  3589  |              resetPlaceHolder_2();  |         |  641  |    134  |  3  |  125  |  [18,168,8,134]  |
  3595  |                         R = R + 2;  |      2  |  643  |    134  |  3  |  125  |  [18,168,8,134]  |
  3599  |                         j = j + 1;  |         |  643  |    134  |  3  |  126  |  [18,168,8,134]  |
  3600  |              resetPlaceHolder_2();  |         |  643  |    134  |  3  |  126  |  [18,168,8,134]  |
  3606  |                         R = R + 2;  |      2  |  645  |    134  |  3  |  126  |  [18,168,8,134]  |
  3610  |                         j = j + 1;  |         |  645  |    134  |  3  |  127  |  [18,168,8,134]  |
  3611  |              resetPlaceHolder_2();  |         |  645  |    134  |  3  |  127  |  [18,168,8,134]  |
  3617  |                         R = R + 2;  |      2  |  647  |    134  |  3  |  127  |  [18,168,8,134]  |
  3621  |                         j = j + 1;  |         |  647  |    134  |  3  |  128  |  [18,168,8,134]  |
  3622  |              resetPlaceHolder_2();  |         |  647  |    134  |  3  |  128  |  [18,168,8,134]  |
  3628  |                         R = R + 2;  |      2  |  649  |    134  |  3  |  128  |  [18,168,8,134]  |
  3632  |                         j = j + 1;  |         |  649  |    134  |  3  |  129  |  [18,168,8,134]  |
  3633  |              resetPlaceHolder_2();  |         |  649  |    134  |  3  |  129  |  [18,168,8,134]  |
  3639  |                         R = R + 2;  |      2  |  651  |    134  |  3  |  129  |  [18,168,8,134]  |
  3643  |                         j = j + 1;  |         |  651  |    134  |  3  |  130  |  [18,168,8,134]  |
  3644  |              resetPlaceHolder_2();  |         |  651  |    134  |  3  |  130  |  [18,168,8,134]  |
  3650  |                         R = R + 2;  |      2  |  653  |    134  |  3  |  130  |  [18,168,8,134]  |
  3654  |                         j = j + 1;  |         |  653  |    134  |  3  |  131  |  [18,168,8,134]  |
  3655  |              resetPlaceHolder_2();  |         |  653  |    134  |  3  |  131  |  [18,168,8,134]  |
  3661  |                         R = R + 2;  |      2  |  655  |    134  |  3  |  131  |  [18,168,8,134]  |
  3665  |                         j = j + 1;  |         |  655  |    134  |  3  |  132  |  [18,168,8,134]  |
  3666  |              resetPlaceHolder_2();  |         |  655  |    134  |  3  |  132  |  [18,168,8,134]  |
  3672  |                         R = R + 2;  |      2  |  657  |    134  |  3  |  132  |  [18,168,8,134]  |
  3676  |                         j = j + 1;  |         |  657  |    134  |  3  |  133  |  [18,168,8,134]  |
  3677  |              resetPlaceHolder_2();  |         |  657  |    134  |  3  |  133  |  [18,168,8,134]  |
  3683  |                         R = R + 2;  |      2  |  659  |    134  |  3  |  133  |  [18,168,8,134]  |
  3687  |                         j = j + 1;  |         |  659  |    134  |  3  |  134  |  [18,168,8,134]  |
  3688  |              resetPlaceHolder_2();  |         |  659  |    134  |  3  |  134  |  [18,168,8,134]  |
  3694  |                         R = R + 1;  |      1  |  660  |    134  |  3  |  134  |  [18,168,8,134]  |
  3698  |                         i = i + 1;  |         |  660  |    134  |  4  |  134  |  [18,168,8,134]  |
  3699  |              resetPlaceHolder_1();  |         |  660  |    134  |  4  |  134  |  [18,168,8,134]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1665, 2094, 2341, 2072, 3661, 1995, 3397, 2363, 1005, 730, 2231, 1522, 2495, 1808, 994, 1401, 741, 2671, 1544, 873, 3012, 1269, 1533, 1137, 2627, 2168, 3562, 2146, 3276, 829, 301, 565, 2825, 2869, 2957, 257, 389, 3221, 1709, 2814, 2039, 719, 785, 3342, 1907, 3617, 587, 1511, 917, 3485, 2682, 1313, 1577, 3089, 3353, 3463, 1379, 1247, 1115, 29, 216, 1489, 2616, 1302, 3199, 1632, 2451, 2880, 106, 84, 2017, 1896, 2190, 774, 2979, 3243, 2242, 411, 2286, 1104, 3606, 312, 1863, 117, 2473, 3265, 2737, 2083, 2660, 2061, 334, 2264, 862, 1676, 598, 2528, 2396, 1423, 3166, 1555, 1951, 1687, 1819, 2179, 3144, 1159, 1027, 1291, 3408, 3595, 697, 2157, 3254, 3122, 2946, 2990, 3518, 3386, 2726, 356, 2858, 3078, 3650, 2638, 499, 3001, 884, 1082, 488, 554, 2561, 3210, 686, 3441, 642, 1214, 1016, 2649, 3573, 2781, 2968, 1324, 1588, 1478, 2836, 1456, 1192, 1060, 3540, 2006, 1984, 1852, 3628, 1874, 1599, 1720, 3364, 1434, 73, 128, 205, 2748, 1170, 1071, 3639, 2440, 906, 1764, 1698, 2253, 2275, 161, 279, 2028, 3375, 3111, 444, 1929, 1786, 3023, 2220, 2891, 2308, 2935, 2759, 466, 1258, 2319, 172, 3155, 3551, 3287, 3683, 3419, 477, 631, 2605, 345, 3133, 367, 609, 323, 1731, 3034, 895, 3298, 521, 2770, 983, 2418, 1841, 2550, 1445, 1643, 455, 1775, 851, 653, 2693, 1973, 2506, 675, 1203, 1467, 3672, 2124, 939, 1181, 194, 1049, 2715, 3507, 1225, 150, 95, 1566, 1368, 1753, 2407, 1038, 840, 2429, 1830, 576, 2113, 1797, 1940, 2924, 3584, 3452, 1918, 2352, 3067, 3188, 1654, 1412, 1126, 3320, 1390, 3056, 2792, 961, 2594, 40, 2135, 139, 3331, 3694, 290, 378, 246, 433, 510, 3430, 2462, 2330, 3529, 763, 2902, 2374, 620, 752, 2517, 1280, 2385, 3232, 950, 51, 818, 3100, 183, 1148, 422, 2050, 3496, 3309, 2201, 268, 807, 3177, 1335, 2572, 2704, 664, 400, 2913, 532, 3045, 1346, 1610, 796, 1742, 928, 1093, 1236, 2803, 2847, 1357, 2583, 1500, 2539, 62, 2484, 1885, 1621, 227, 3474, 1962, 543, 2297, 708, 972]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,40,51,62,73,84,95,106,117,128,139,150,161,172,183,194,205,216,227,246,257,268,279,290,301,312,323,334,345,356,367,378,389,400,411,422,433,444,455,466,477,488,499,510,521,532,543,554,565,576,587,598,609,620,631,642,653,664,675,686,697,708,719,730,741,752,763,774,785,796,807,818,829,840,851,862,873,884,895,906,917,928,939,950,961,972,983,994,1005,1016,1027,1038,1049,1060,1071,1082,1093,1104,1115,1126,1137,1148,1159,1170,1181,1192,1203,1214,1225,1236,1247,1258,1269,1280,1291,1302,1313,1324,1335,1346,1357,1368,1379,1390,1401,1412,1423,1434,1445,1456,1467,1478,1489,1500,1511,1522,1533,1544,1555,1566,1577,1588,1599,1610,1621,1632,1643,1654,1665,1676,1687,1698,1709,1720,1731,1742,1753,1764,1775,1786,1797,1808,1819,1830,1841,1852,1863,1874,1885,1896,1907,1918,1929,1940,1951,1962,1973,1984,1995,2006,2017,2028,2039,2050,2061,2072,2083,2094,2113,2124,2135,2146,2157,2168,2179,2190,2201,2220,2231,2242,2253,2264,2275,2286,2297,2308,2319,2330,2341,2352,2363,2374,2385,2396,2407,2418,2429,2440,2451,2462,2473,2484,2495,2506,2517,2528,2539,2550,2561,2572,2583,2594,2605,2616,2627,2638,2649,2660,2671,2682,2693,2704,2715,2726,2737,2748,2759,2770,2781,2792,2803,2814,2825,2836,2847,2858,2869,2880,2891,2902,2913,2924,2935,2946,2957,2968,2979,2990,3001,3012,3023,3034,3045,3056,3067,3078,3089,3100,3111,3122,3133,3144,3155,3166,3177,3188,3199,3210,3221,3232,3243,3254,3265,3276,3287,3298,3309,3320,3331,3342,3353,3364,3375,3386,3397,3408,3419,3430,3441,3452,3463,3474,3485,3496,3507,3518,3529,3540,3551,3562,3573,3584,3595,3606,3617,3628,3639,3650,3661,3672,3683,3694}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |             R = R + 2;  |      2  |                         0  |
    34  |  resetPlaceHolder_2();  |         |                            |
    40  |             R = R + 2;  |      2  |                         0  |
    45  |  resetPlaceHolder_2();  |         |                            |
    51  |             R = R + 2;  |      2  |                         0  |
    56  |  resetPlaceHolder_2();  |         |                            |
    62  |             R = R + 2;  |      2  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    73  |             R = R + 2;  |      2  |                         0  |
    78  |  resetPlaceHolder_2();  |         |                            |
    84  |             R = R + 2;  |      2  |                         0  |
    89  |  resetPlaceHolder_2();  |         |                            |
    95  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_2();  |         |                            |
   106  |             R = R + 2;  |      2  |                         0  |
   111  |  resetPlaceHolder_2();  |         |                            |
   117  |             R = R + 2;  |      2  |                         0  |
   122  |  resetPlaceHolder_2();  |         |                            |
   128  |             R = R + 2;  |      2  |                         0  |
   133  |  resetPlaceHolder_2();  |         |                            |
   139  |             R = R + 2;  |      2  |                         0  |
   144  |  resetPlaceHolder_2();  |         |                            |
   150  |             R = R + 2;  |      2  |                         0  |
   155  |  resetPlaceHolder_2();  |         |                            |
   161  |             R = R + 2;  |      2  |                         0  |
   166  |  resetPlaceHolder_2();  |         |                            |
   172  |             R = R + 2;  |      2  |                         0  |
   177  |  resetPlaceHolder_2();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   188  |  resetPlaceHolder_2();  |         |                            |
   194  |             R = R + 2;  |      2  |                         0  |
   199  |  resetPlaceHolder_2();  |         |                            |
   205  |             R = R + 2;  |      2  |                         0  |
   210  |  resetPlaceHolder_2();  |         |                            |
   216  |             R = R + 2;  |      2  |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |
   227  |             R = R + 1;  |      1  |                         0  |
   232  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                         0  |
   251  |  resetPlaceHolder_2();  |         |                            |
   257  |             R = R + 2;  |      2  |                         0  |
   262  |  resetPlaceHolder_2();  |         |                            |
   268  |             R = R + 2;  |      2  |                         0  |
   273  |  resetPlaceHolder_2();  |         |                            |
   279  |             R = R + 2;  |      2  |                         0  |
   284  |  resetPlaceHolder_2();  |         |                            |
   290  |             R = R + 2;  |      2  |                         0  |
   295  |  resetPlaceHolder_2();  |         |                            |
   301  |             R = R + 2;  |      2  |                         0  |
   306  |  resetPlaceHolder_2();  |         |                            |
   312  |             R = R + 2;  |      2  |                         0  |
   317  |  resetPlaceHolder_2();  |         |                            |
   323  |             R = R + 2;  |      2  |                         0  |
   328  |  resetPlaceHolder_2();  |         |                            |
   334  |             R = R + 2;  |      2  |                         0  |
   339  |  resetPlaceHolder_2();  |         |                            |
   345  |             R = R + 2;  |      2  |                         0  |
   350  |  resetPlaceHolder_2();  |         |                            |
   356  |             R = R + 2;  |      2  |                         0  |
   361  |  resetPlaceHolder_2();  |         |                            |
   367  |             R = R + 2;  |      2  |                         0  |
   372  |  resetPlaceHolder_2();  |         |                            |
   378  |             R = R + 2;  |      2  |                         0  |
   383  |  resetPlaceHolder_2();  |         |                            |
   389  |             R = R + 2;  |      2  |                         0  |
   394  |  resetPlaceHolder_2();  |         |                            |
   400  |             R = R + 2;  |      2  |                         0  |
   405  |  resetPlaceHolder_2();  |         |                            |
   411  |             R = R + 2;  |      2  |                         0  |
   416  |  resetPlaceHolder_2();  |         |                            |
   422  |             R = R + 2;  |      2  |                         0  |
   427  |  resetPlaceHolder_2();  |         |                            |
   433  |             R = R + 2;  |      2  |                         0  |
   438  |  resetPlaceHolder_2();  |         |                            |
   444  |             R = R + 2;  |      2  |                         0  |
   449  |  resetPlaceHolder_2();  |         |                            |
   455  |             R = R + 2;  |      2  |                         0  |
   460  |  resetPlaceHolder_2();  |         |                            |
   466  |             R = R + 2;  |      2  |                         0  |
   471  |  resetPlaceHolder_2();  |         |                            |
   477  |             R = R + 2;  |      2  |                         0  |
   482  |  resetPlaceHolder_2();  |         |                            |
   488  |             R = R + 2;  |      2  |                         0  |
   493  |  resetPlaceHolder_2();  |         |                            |
   499  |             R = R + 2;  |      2  |                         0  |
   504  |  resetPlaceHolder_2();  |         |                            |
   510  |             R = R + 2;  |      2  |                         0  |
   515  |  resetPlaceHolder_2();  |         |                            |
   521  |             R = R + 2;  |      2  |                         0  |
   526  |  resetPlaceHolder_2();  |         |                            |
   532  |             R = R + 2;  |      2  |                         0  |
   537  |  resetPlaceHolder_2();  |         |                            |
   543  |             R = R + 2;  |      2  |                         0  |
   548  |  resetPlaceHolder_2();  |         |                            |
   554  |             R = R + 2;  |      2  |                         0  |
   559  |  resetPlaceHolder_2();  |         |                            |
   565  |             R = R + 2;  |      2  |                         0  |
   570  |  resetPlaceHolder_2();  |         |                            |
   576  |             R = R + 2;  |      2  |                         0  |
   581  |  resetPlaceHolder_2();  |         |                            |
   587  |             R = R + 2;  |      2  |                         0  |
   592  |  resetPlaceHolder_2();  |         |                            |
   598  |             R = R + 2;  |      2  |                         0  |
   603  |  resetPlaceHolder_2();  |         |                            |
   609  |             R = R + 2;  |      2  |                         0  |
   614  |  resetPlaceHolder_2();  |         |                            |
   620  |             R = R + 2;  |      2  |                         0  |
   625  |  resetPlaceHolder_2();  |         |                            |
   631  |             R = R + 2;  |      2  |                         0  |
   636  |  resetPlaceHolder_2();  |         |                            |
   642  |             R = R + 2;  |      2  |                         0  |
   647  |  resetPlaceHolder_2();  |         |                            |
   653  |             R = R + 2;  |      2  |                         0  |
   658  |  resetPlaceHolder_2();  |         |                            |
   664  |             R = R + 2;  |      2  |                         0  |
   669  |  resetPlaceHolder_2();  |         |                            |
   675  |             R = R + 2;  |      2  |                         0  |
   680  |  resetPlaceHolder_2();  |         |                            |
   686  |             R = R + 2;  |      2  |                         0  |
   691  |  resetPlaceHolder_2();  |         |                            |
   697  |             R = R + 2;  |      2  |                         0  |
   702  |  resetPlaceHolder_2();  |         |                            |
   708  |             R = R + 2;  |      2  |                         0  |
   713  |  resetPlaceHolder_2();  |         |                            |
   719  |             R = R + 2;  |      2  |                         0  |
   724  |  resetPlaceHolder_2();  |         |                            |
   730  |             R = R + 2;  |      2  |                         0  |
   735  |  resetPlaceHolder_2();  |         |                            |
   741  |             R = R + 2;  |      2  |                         0  |
   746  |  resetPlaceHolder_2();  |         |                            |
   752  |             R = R + 2;  |      2  |                         0  |
   757  |  resetPlaceHolder_2();  |         |                            |
   763  |             R = R + 2;  |      2  |                         0  |
   768  |  resetPlaceHolder_2();  |         |                            |
   774  |             R = R + 2;  |      2  |                         0  |
   779  |  resetPlaceHolder_2();  |         |                            |
   785  |             R = R + 2;  |      2  |                         0  |
   790  |  resetPlaceHolder_2();  |         |                            |
   796  |             R = R + 2;  |      2  |                         0  |
   801  |  resetPlaceHolder_2();  |         |                            |
   807  |             R = R + 2;  |      2  |                         0  |
   812  |  resetPlaceHolder_2();  |         |                            |
   818  |             R = R + 2;  |      2  |                         0  |
   823  |  resetPlaceHolder_2();  |         |                            |
   829  |             R = R + 2;  |      2  |                         0  |
   834  |  resetPlaceHolder_2();  |         |                            |
   840  |             R = R + 2;  |      2  |                         0  |
   845  |  resetPlaceHolder_2();  |         |                            |
   851  |             R = R + 2;  |      2  |                         0  |
   856  |  resetPlaceHolder_2();  |         |                            |
   862  |             R = R + 2;  |      2  |                         0  |
   867  |  resetPlaceHolder_2();  |         |                            |
   873  |             R = R + 2;  |      2  |                         0  |
   878  |  resetPlaceHolder_2();  |         |                            |
   884  |             R = R + 2;  |      2  |                         0  |
   889  |  resetPlaceHolder_2();  |         |                            |
   895  |             R = R + 2;  |      2  |                         0  |
   900  |  resetPlaceHolder_2();  |         |                            |
   906  |             R = R + 2;  |      2  |                         0  |
   911  |  resetPlaceHolder_2();  |         |                            |
   917  |             R = R + 2;  |      2  |                         0  |
   922  |  resetPlaceHolder_2();  |         |                            |
   928  |             R = R + 2;  |      2  |                         0  |
   933  |  resetPlaceHolder_2();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   944  |  resetPlaceHolder_2();  |         |                            |
   950  |             R = R + 2;  |      2  |                         0  |
   955  |  resetPlaceHolder_2();  |         |                            |
   961  |             R = R + 2;  |      2  |                         0  |
   966  |  resetPlaceHolder_2();  |         |                            |
   972  |             R = R + 2;  |      2  |                         0  |
   977  |  resetPlaceHolder_2();  |         |                            |
   983  |             R = R + 2;  |      2  |                         0  |
   988  |  resetPlaceHolder_2();  |         |                            |
   994  |             R = R + 2;  |      2  |                         0  |
   999  |  resetPlaceHolder_2();  |         |                            |
  1005  |             R = R + 2;  |      2  |                         0  |
  1010  |  resetPlaceHolder_2();  |         |                            |
  1016  |             R = R + 2;  |      2  |                         0  |
  1021  |  resetPlaceHolder_2();  |         |                            |
  1027  |             R = R + 2;  |      2  |                         0  |
  1032  |  resetPlaceHolder_2();  |         |                            |
  1038  |             R = R + 2;  |      2  |                         0  |
  1043  |  resetPlaceHolder_2();  |         |                            |
  1049  |             R = R + 2;  |      2  |                         0  |
  1054  |  resetPlaceHolder_2();  |         |                            |
  1060  |             R = R + 2;  |      2  |                         0  |
  1065  |  resetPlaceHolder_2();  |         |                            |
  1071  |             R = R + 2;  |      2  |                         0  |
  1076  |  resetPlaceHolder_2();  |         |                            |
  1082  |             R = R + 2;  |      2  |                         0  |
  1087  |  resetPlaceHolder_2();  |         |                            |
  1093  |             R = R + 2;  |      2  |                         0  |
  1098  |  resetPlaceHolder_2();  |         |                            |
  1104  |             R = R + 2;  |      2  |                         0  |
  1109  |  resetPlaceHolder_2();  |         |                            |
  1115  |             R = R + 2;  |      2  |                         0  |
  1120  |  resetPlaceHolder_2();  |         |                            |
  1126  |             R = R + 2;  |      2  |                         0  |
  1131  |  resetPlaceHolder_2();  |         |                            |
  1137  |             R = R + 2;  |      2  |                         0  |
  1142  |  resetPlaceHolder_2();  |         |                            |
  1148  |             R = R + 2;  |      2  |                         0  |
  1153  |  resetPlaceHolder_2();  |         |                            |
  1159  |             R = R + 2;  |      2  |                         0  |
  1164  |  resetPlaceHolder_2();  |         |                            |
  1170  |             R = R + 2;  |      2  |                         0  |
  1175  |  resetPlaceHolder_2();  |         |                            |
  1181  |             R = R + 2;  |      2  |                         0  |
  1186  |  resetPlaceHolder_2();  |         |                            |
  1192  |             R = R + 2;  |      2  |                         0  |
  1197  |  resetPlaceHolder_2();  |         |                            |
  1203  |             R = R + 2;  |      2  |                         0  |
  1208  |  resetPlaceHolder_2();  |         |                            |
  1214  |             R = R + 2;  |      2  |                         0  |
  1219  |  resetPlaceHolder_2();  |         |                            |
  1225  |             R = R + 2;  |      2  |                         0  |
  1230  |  resetPlaceHolder_2();  |         |                            |
  1236  |             R = R + 2;  |      2  |                         0  |
  1241  |  resetPlaceHolder_2();  |         |                            |
  1247  |             R = R + 2;  |      2  |                         0  |
  1252  |  resetPlaceHolder_2();  |         |                            |
  1258  |             R = R + 2;  |      2  |                         0  |
  1263  |  resetPlaceHolder_2();  |         |                            |
  1269  |             R = R + 2;  |      2  |                         0  |
  1274  |  resetPlaceHolder_2();  |         |                            |
  1280  |             R = R + 2;  |      2  |                         0  |
  1285  |  resetPlaceHolder_2();  |         |                            |
  1291  |             R = R + 2;  |      2  |                         0  |
  1296  |  resetPlaceHolder_2();  |         |                            |
  1302  |             R = R + 2;  |      2  |                         0  |
  1307  |  resetPlaceHolder_2();  |         |                            |
  1313  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_2();  |         |                            |
  1324  |             R = R + 2;  |      2  |                         0  |
  1329  |  resetPlaceHolder_2();  |         |                            |
  1335  |             R = R + 2;  |      2  |                         0  |
  1340  |  resetPlaceHolder_2();  |         |                            |
  1346  |             R = R + 2;  |      2  |                         0  |
  1351  |  resetPlaceHolder_2();  |         |                            |
  1357  |             R = R + 2;  |      2  |                         0  |
  1362  |  resetPlaceHolder_2();  |         |                            |
  1368  |             R = R + 2;  |      2  |                         0  |
  1373  |  resetPlaceHolder_2();  |         |                            |
  1379  |             R = R + 2;  |      2  |                         0  |
  1384  |  resetPlaceHolder_2();  |         |                            |
  1390  |             R = R + 2;  |      2  |                         0  |
  1395  |  resetPlaceHolder_2();  |         |                            |
  1401  |             R = R + 2;  |      2  |                         0  |
  1406  |  resetPlaceHolder_2();  |         |                            |
  1412  |             R = R + 2;  |      2  |                         0  |
  1417  |  resetPlaceHolder_2();  |         |                            |
  1423  |             R = R + 2;  |      2  |                         0  |
  1428  |  resetPlaceHolder_2();  |         |                            |
  1434  |             R = R + 2;  |      2  |                         0  |
  1439  |  resetPlaceHolder_2();  |         |                            |
  1445  |             R = R + 2;  |      2  |                         0  |
  1450  |  resetPlaceHolder_2();  |         |                            |
  1456  |             R = R + 2;  |      2  |                         0  |
  1461  |  resetPlaceHolder_2();  |         |                            |
  1467  |             R = R + 2;  |      2  |                         0  |
  1472  |  resetPlaceHolder_2();  |         |                            |
  1478  |             R = R + 2;  |      2  |                         0  |
  1483  |  resetPlaceHolder_2();  |         |                            |
  1489  |             R = R + 2;  |      2  |                         0  |
  1494  |  resetPlaceHolder_2();  |         |                            |
  1500  |             R = R + 2;  |      2  |                         0  |
  1505  |  resetPlaceHolder_2();  |         |                            |
  1511  |             R = R + 2;  |      2  |                         0  |
  1516  |  resetPlaceHolder_2();  |         |                            |
  1522  |             R = R + 2;  |      2  |                         0  |
  1527  |  resetPlaceHolder_2();  |         |                            |
  1533  |             R = R + 2;  |      2  |                         0  |
  1538  |  resetPlaceHolder_2();  |         |                            |
  1544  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_2();  |         |                            |
  1555  |             R = R + 2;  |      2  |                         0  |
  1560  |  resetPlaceHolder_2();  |         |                            |
  1566  |             R = R + 2;  |      2  |                         0  |
  1571  |  resetPlaceHolder_2();  |         |                            |
  1577  |             R = R + 2;  |      2  |                         0  |
  1582  |  resetPlaceHolder_2();  |         |                            |
  1588  |             R = R + 2;  |      2  |                         0  |
  1593  |  resetPlaceHolder_2();  |         |                            |
  1599  |             R = R + 2;  |      2  |                         0  |
  1604  |  resetPlaceHolder_2();  |         |                            |
  1610  |             R = R + 2;  |      2  |                         0  |
  1615  |  resetPlaceHolder_2();  |         |                            |
  1621  |             R = R + 2;  |      2  |                         0  |
  1626  |  resetPlaceHolder_2();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1637  |  resetPlaceHolder_2();  |         |                            |
  1643  |             R = R + 2;  |      2  |                         0  |
  1648  |  resetPlaceHolder_2();  |         |                            |
  1654  |             R = R + 2;  |      2  |                         0  |
  1659  |  resetPlaceHolder_2();  |         |                            |
  1665  |             R = R + 2;  |      2  |                         0  |
  1670  |  resetPlaceHolder_2();  |         |                            |
  1676  |             R = R + 2;  |      2  |                         0  |
  1681  |  resetPlaceHolder_2();  |         |                            |
  1687  |             R = R + 2;  |      2  |                         0  |
  1692  |  resetPlaceHolder_2();  |         |                            |
  1698  |             R = R + 2;  |      2  |                         0  |
  1703  |  resetPlaceHolder_2();  |         |                            |
  1709  |             R = R + 2;  |      2  |                         0  |
  1714  |  resetPlaceHolder_2();  |         |                            |
  1720  |             R = R + 2;  |      2  |                         0  |
  1725  |  resetPlaceHolder_2();  |         |                            |
  1731  |             R = R + 2;  |      2  |                         0  |
  1736  |  resetPlaceHolder_2();  |         |                            |
  1742  |             R = R + 2;  |      2  |                         0  |
  1747  |  resetPlaceHolder_2();  |         |                            |
  1753  |             R = R + 2;  |      2  |                         0  |
  1758  |  resetPlaceHolder_2();  |         |                            |
  1764  |             R = R + 2;  |      2  |                         0  |
  1769  |  resetPlaceHolder_2();  |         |                            |
  1775  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_2();  |         |                            |
  1786  |             R = R + 2;  |      2  |                         0  |
  1791  |  resetPlaceHolder_2();  |         |                            |
  1797  |             R = R + 2;  |      2  |                         0  |
  1802  |  resetPlaceHolder_2();  |         |                            |
  1808  |             R = R + 2;  |      2  |                         0  |
  1813  |  resetPlaceHolder_2();  |         |                            |
  1819  |             R = R + 2;  |      2  |                         0  |
  1824  |  resetPlaceHolder_2();  |         |                            |
  1830  |             R = R + 2;  |      2  |                         0  |
  1835  |  resetPlaceHolder_2();  |         |                            |
  1841  |             R = R + 2;  |      2  |                         0  |
  1846  |  resetPlaceHolder_2();  |         |                            |
  1852  |             R = R + 2;  |      2  |                         0  |
  1857  |  resetPlaceHolder_2();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1868  |  resetPlaceHolder_2();  |         |                            |
  1874  |             R = R + 2;  |      2  |                         0  |
  1879  |  resetPlaceHolder_2();  |         |                            |
  1885  |             R = R + 2;  |      2  |                         0  |
  1890  |  resetPlaceHolder_2();  |         |                            |
  1896  |             R = R + 2;  |      2  |                         0  |
  1901  |  resetPlaceHolder_2();  |         |                            |
  1907  |             R = R + 2;  |      2  |                         0  |
  1912  |  resetPlaceHolder_2();  |         |                            |
  1918  |             R = R + 2;  |      2  |                         0  |
  1923  |  resetPlaceHolder_2();  |         |                            |
  1929  |             R = R + 2;  |      2  |                         0  |
  1934  |  resetPlaceHolder_2();  |         |                            |
  1940  |             R = R + 2;  |      2  |                         0  |
  1945  |  resetPlaceHolder_2();  |         |                            |
  1951  |             R = R + 2;  |      2  |                         0  |
  1956  |  resetPlaceHolder_2();  |         |                            |
  1962  |             R = R + 2;  |      2  |                         0  |
  1967  |  resetPlaceHolder_2();  |         |                            |
  1973  |             R = R + 2;  |      2  |                         0  |
  1978  |  resetPlaceHolder_2();  |         |                            |
  1984  |             R = R + 2;  |      2  |                         0  |
  1989  |  resetPlaceHolder_2();  |         |                            |
  1995  |             R = R + 2;  |      2  |                         0  |
  2000  |  resetPlaceHolder_2();  |         |                            |
  2006  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_2();  |         |                            |
  2017  |             R = R + 2;  |      2  |                         0  |
  2022  |  resetPlaceHolder_2();  |         |                            |
  2028  |             R = R + 2;  |      2  |                         0  |
  2033  |  resetPlaceHolder_2();  |         |                            |
  2039  |             R = R + 2;  |      2  |                         0  |
  2044  |  resetPlaceHolder_2();  |         |                            |
  2050  |             R = R + 2;  |      2  |                         0  |
  2055  |  resetPlaceHolder_2();  |         |                            |
  2061  |             R = R + 2;  |      2  |                         0  |
  2066  |  resetPlaceHolder_2();  |         |                            |
  2072  |             R = R + 2;  |      2  |                         0  |
  2077  |  resetPlaceHolder_2();  |         |                            |
  2083  |             R = R + 2;  |      2  |                         0  |
  2088  |  resetPlaceHolder_2();  |         |                            |
  2094  |             R = R + 1;  |      1  |                         0  |
  2099  |  resetPlaceHolder_1();  |         |                            |
  2113  |             R = R + 2;  |      2  |                         0  |
  2118  |  resetPlaceHolder_2();  |         |                            |
  2124  |             R = R + 2;  |      2  |                         0  |
  2129  |  resetPlaceHolder_2();  |         |                            |
  2135  |             R = R + 2;  |      2  |                         0  |
  2140  |  resetPlaceHolder_2();  |         |                            |
  2146  |             R = R + 2;  |      2  |                         0  |
  2151  |  resetPlaceHolder_2();  |         |                            |
  2157  |             R = R + 2;  |      2  |                         0  |
  2162  |  resetPlaceHolder_2();  |         |                            |
  2168  |             R = R + 2;  |      2  |                         0  |
  2173  |  resetPlaceHolder_2();  |         |                            |
  2179  |             R = R + 2;  |      2  |                         0  |
  2184  |  resetPlaceHolder_2();  |         |                            |
  2190  |             R = R + 2;  |      2  |                         0  |
  2195  |  resetPlaceHolder_2();  |         |                            |
  2201  |             R = R + 1;  |      1  |                         0  |
  2206  |  resetPlaceHolder_1();  |         |                            |
  2220  |             R = R + 2;  |      2  |                         0  |
  2225  |  resetPlaceHolder_2();  |         |                            |
  2231  |             R = R + 2;  |      2  |                         0  |
  2236  |  resetPlaceHolder_2();  |         |                            |
  2242  |             R = R + 2;  |      2  |                         0  |
  2247  |  resetPlaceHolder_2();  |         |                            |
  2253  |             R = R + 2;  |      2  |                         0  |
  2258  |  resetPlaceHolder_2();  |         |                            |
  2264  |             R = R + 2;  |      2  |                         0  |
  2269  |  resetPlaceHolder_2();  |         |                            |
  2275  |             R = R + 2;  |      2  |                         0  |
  2280  |  resetPlaceHolder_2();  |         |                            |
  2286  |             R = R + 2;  |      2  |                         0  |
  2291  |  resetPlaceHolder_2();  |         |                            |
  2297  |             R = R + 2;  |      2  |                         0  |
  2302  |  resetPlaceHolder_2();  |         |                            |
  2308  |             R = R + 2;  |      2  |                         0  |
  2313  |  resetPlaceHolder_2();  |         |                            |
  2319  |             R = R + 2;  |      2  |                         0  |
  2324  |  resetPlaceHolder_2();  |         |                            |
  2330  |             R = R + 2;  |      2  |                         0  |
  2335  |  resetPlaceHolder_2();  |         |                            |
  2341  |             R = R + 2;  |      2  |                         0  |
  2346  |  resetPlaceHolder_2();  |         |                            |
  2352  |             R = R + 2;  |      2  |                         0  |
  2357  |  resetPlaceHolder_2();  |         |                            |
  2363  |             R = R + 2;  |      2  |                         0  |
  2368  |  resetPlaceHolder_2();  |         |                            |
  2374  |             R = R + 2;  |      2  |                         0  |
  2379  |  resetPlaceHolder_2();  |         |                            |
  2385  |             R = R + 2;  |      2  |                         0  |
  2390  |  resetPlaceHolder_2();  |         |                            |
  2396  |             R = R + 2;  |      2  |                         0  |
  2401  |  resetPlaceHolder_2();  |         |                            |
  2407  |             R = R + 2;  |      2  |                         0  |
  2412  |  resetPlaceHolder_2();  |         |                            |
  2418  |             R = R + 2;  |      2  |                         0  |
  2423  |  resetPlaceHolder_2();  |         |                            |
  2429  |             R = R + 2;  |      2  |                         0  |
  2434  |  resetPlaceHolder_2();  |         |                            |
  2440  |             R = R + 2;  |      2  |                         0  |
  2445  |  resetPlaceHolder_2();  |         |                            |
  2451  |             R = R + 2;  |      2  |                         0  |
  2456  |  resetPlaceHolder_2();  |         |                            |
  2462  |             R = R + 2;  |      2  |                         0  |
  2467  |  resetPlaceHolder_2();  |         |                            |
  2473  |             R = R + 2;  |      2  |                         0  |
  2478  |  resetPlaceHolder_2();  |         |                            |
  2484  |             R = R + 2;  |      2  |                         0  |
  2489  |  resetPlaceHolder_2();  |         |                            |
  2495  |             R = R + 2;  |      2  |                         0  |
  2500  |  resetPlaceHolder_2();  |         |                            |
  2506  |             R = R + 2;  |      2  |                         0  |
  2511  |  resetPlaceHolder_2();  |         |                            |
  2517  |             R = R + 2;  |      2  |                         0  |
  2522  |  resetPlaceHolder_2();  |         |                            |
  2528  |             R = R + 2;  |      2  |                         0  |
  2533  |  resetPlaceHolder_2();  |         |                            |
  2539  |             R = R + 2;  |      2  |                         0  |
  2544  |  resetPlaceHolder_2();  |         |                            |
  2550  |             R = R + 2;  |      2  |                         0  |
  2555  |  resetPlaceHolder_2();  |         |                            |
  2561  |             R = R + 2;  |      2  |                         0  |
  2566  |  resetPlaceHolder_2();  |         |                            |
  2572  |             R = R + 2;  |      2  |                         0  |
  2577  |  resetPlaceHolder_2();  |         |                            |
  2583  |             R = R + 2;  |      2  |                         0  |
  2588  |  resetPlaceHolder_2();  |         |                            |
  2594  |             R = R + 2;  |      2  |                         0  |
  2599  |  resetPlaceHolder_2();  |         |                            |
  2605  |             R = R + 2;  |      2  |                         0  |
  2610  |  resetPlaceHolder_2();  |         |                            |
  2616  |             R = R + 2;  |      2  |                         0  |
  2621  |  resetPlaceHolder_2();  |         |                            |
  2627  |             R = R + 2;  |      2  |                         0  |
  2632  |  resetPlaceHolder_2();  |         |                            |
  2638  |             R = R + 2;  |      2  |                         0  |
  2643  |  resetPlaceHolder_2();  |         |                            |
  2649  |             R = R + 2;  |      2  |                         0  |
  2654  |  resetPlaceHolder_2();  |         |                            |
  2660  |             R = R + 2;  |      2  |                         0  |
  2665  |  resetPlaceHolder_2();  |         |                            |
  2671  |             R = R + 2;  |      2  |                         0  |
  2676  |  resetPlaceHolder_2();  |         |                            |
  2682  |             R = R + 2;  |      2  |                         0  |
  2687  |  resetPlaceHolder_2();  |         |                            |
  2693  |             R = R + 2;  |      2  |                         0  |
  2698  |  resetPlaceHolder_2();  |         |                            |
  2704  |             R = R + 2;  |      2  |                         0  |
  2709  |  resetPlaceHolder_2();  |         |                            |
  2715  |             R = R + 2;  |      2  |                         0  |
  2720  |  resetPlaceHolder_2();  |         |                            |
  2726  |             R = R + 2;  |      2  |                         0  |
  2731  |  resetPlaceHolder_2();  |         |                            |
  2737  |             R = R + 2;  |      2  |                         0  |
  2742  |  resetPlaceHolder_2();  |         |                            |
  2748  |             R = R + 2;  |      2  |                         0  |
  2753  |  resetPlaceHolder_2();  |         |                            |
  2759  |             R = R + 2;  |      2  |                         0  |
  2764  |  resetPlaceHolder_2();  |         |                            |
  2770  |             R = R + 2;  |      2  |                         0  |
  2775  |  resetPlaceHolder_2();  |         |                            |
  2781  |             R = R + 2;  |      2  |                         0  |
  2786  |  resetPlaceHolder_2();  |         |                            |
  2792  |             R = R + 2;  |      2  |                         0  |
  2797  |  resetPlaceHolder_2();  |         |                            |
  2803  |             R = R + 2;  |      2  |                         0  |
  2808  |  resetPlaceHolder_2();  |         |                            |
  2814  |             R = R + 2;  |      2  |                         0  |
  2819  |  resetPlaceHolder_2();  |         |                            |
  2825  |             R = R + 2;  |      2  |                         0  |
  2830  |  resetPlaceHolder_2();  |         |                            |
  2836  |             R = R + 2;  |      2  |                         0  |
  2841  |  resetPlaceHolder_2();  |         |                            |
  2847  |             R = R + 2;  |      2  |                         0  |
  2852  |  resetPlaceHolder_2();  |         |                            |
  2858  |             R = R + 2;  |      2  |                         0  |
  2863  |  resetPlaceHolder_2();  |         |                            |
  2869  |             R = R + 2;  |      2  |                         0  |
  2874  |  resetPlaceHolder_2();  |         |                            |
  2880  |             R = R + 2;  |      2  |                         0  |
  2885  |  resetPlaceHolder_2();  |         |                            |
  2891  |             R = R + 2;  |      2  |                         0  |
  2896  |  resetPlaceHolder_2();  |         |                            |
  2902  |             R = R + 2;  |      2  |                         0  |
  2907  |  resetPlaceHolder_2();  |         |                            |
  2913  |             R = R + 2;  |      2  |                         0  |
  2918  |  resetPlaceHolder_2();  |         |                            |
  2924  |             R = R + 2;  |      2  |                         0  |
  2929  |  resetPlaceHolder_2();  |         |                            |
  2935  |             R = R + 2;  |      2  |                         0  |
  2940  |  resetPlaceHolder_2();  |         |                            |
  2946  |             R = R + 2;  |      2  |                         0  |
  2951  |  resetPlaceHolder_2();  |         |                            |
  2957  |             R = R + 2;  |      2  |                         0  |
  2962  |  resetPlaceHolder_2();  |         |                            |
  2968  |             R = R + 2;  |      2  |                         0  |
  2973  |  resetPlaceHolder_2();  |         |                            |
  2979  |             R = R + 2;  |      2  |                         0  |
  2984  |  resetPlaceHolder_2();  |         |                            |
  2990  |             R = R + 2;  |      2  |                         0  |
  2995  |  resetPlaceHolder_2();  |         |                            |
  3001  |             R = R + 2;  |      2  |                         0  |
  3006  |  resetPlaceHolder_2();  |         |                            |
  3012  |             R = R + 2;  |      2  |                         0  |
  3017  |  resetPlaceHolder_2();  |         |                            |
  3023  |             R = R + 2;  |      2  |                         0  |
  3028  |  resetPlaceHolder_2();  |         |                            |
  3034  |             R = R + 2;  |      2  |                         0  |
  3039  |  resetPlaceHolder_2();  |         |                            |
  3045  |             R = R + 2;  |      2  |                         0  |
  3050  |  resetPlaceHolder_2();  |         |                            |
  3056  |             R = R + 2;  |      2  |                         0  |
  3061  |  resetPlaceHolder_2();  |         |                            |
  3067  |             R = R + 2;  |      2  |                         0  |
  3072  |  resetPlaceHolder_2();  |         |                            |
  3078  |             R = R + 2;  |      2  |                         0  |
  3083  |  resetPlaceHolder_2();  |         |                            |
  3089  |             R = R + 2;  |      2  |                         0  |
  3094  |  resetPlaceHolder_2();  |         |                            |
  3100  |             R = R + 2;  |      2  |                         0  |
  3105  |  resetPlaceHolder_2();  |         |                            |
  3111  |             R = R + 2;  |      2  |                         0  |
  3116  |  resetPlaceHolder_2();  |         |                            |
  3122  |             R = R + 2;  |      2  |                         0  |
  3127  |  resetPlaceHolder_2();  |         |                            |
  3133  |             R = R + 2;  |      2  |                         0  |
  3138  |  resetPlaceHolder_2();  |         |                            |
  3144  |             R = R + 2;  |      2  |                         0  |
  3149  |  resetPlaceHolder_2();  |         |                            |
  3155  |             R = R + 2;  |      2  |                         0  |
  3160  |  resetPlaceHolder_2();  |         |                            |
  3166  |             R = R + 2;  |      2  |                         0  |
  3171  |  resetPlaceHolder_2();  |         |                            |
  3177  |             R = R + 2;  |      2  |                         0  |
  3182  |  resetPlaceHolder_2();  |         |                            |
  3188  |             R = R + 2;  |      2  |                         0  |
  3193  |  resetPlaceHolder_2();  |         |                            |
  3199  |             R = R + 2;  |      2  |                         0  |
  3204  |  resetPlaceHolder_2();  |         |                            |
  3210  |             R = R + 2;  |      2  |                         0  |
  3215  |  resetPlaceHolder_2();  |         |                            |
  3221  |             R = R + 2;  |      2  |                         0  |
  3226  |  resetPlaceHolder_2();  |         |                            |
  3232  |             R = R + 2;  |      2  |                         0  |
  3237  |  resetPlaceHolder_2();  |         |                            |
  3243  |             R = R + 2;  |      2  |                         0  |
  3248  |  resetPlaceHolder_2();  |         |                            |
  3254  |             R = R + 2;  |      2  |                         0  |
  3259  |  resetPlaceHolder_2();  |         |                            |
  3265  |             R = R + 2;  |      2  |                         0  |
  3270  |  resetPlaceHolder_2();  |         |                            |
  3276  |             R = R + 2;  |      2  |                         0  |
  3281  |  resetPlaceHolder_2();  |         |                            |
  3287  |             R = R + 2;  |      2  |                         0  |
  3292  |  resetPlaceHolder_2();  |         |                            |
  3298  |             R = R + 2;  |      2  |                         0  |
  3303  |  resetPlaceHolder_2();  |         |                            |
  3309  |             R = R + 2;  |      2  |                         0  |
  3314  |  resetPlaceHolder_2();  |         |                            |
  3320  |             R = R + 2;  |      2  |                         0  |
  3325  |  resetPlaceHolder_2();  |         |                            |
  3331  |             R = R + 2;  |      2  |                         0  |
  3336  |  resetPlaceHolder_2();  |         |                            |
  3342  |             R = R + 2;  |      2  |                         0  |
  3347  |  resetPlaceHolder_2();  |         |                            |
  3353  |             R = R + 2;  |      2  |                         0  |
  3358  |  resetPlaceHolder_2();  |         |                            |
  3364  |             R = R + 2;  |      2  |                         0  |
  3369  |  resetPlaceHolder_2();  |         |                            |
  3375  |             R = R + 2;  |      2  |                         0  |
  3380  |  resetPlaceHolder_2();  |         |                            |
  3386  |             R = R + 2;  |      2  |                         0  |
  3391  |  resetPlaceHolder_2();  |         |                            |
  3397  |             R = R + 2;  |      2  |                         0  |
  3402  |  resetPlaceHolder_2();  |         |                            |
  3408  |             R = R + 2;  |      2  |                         0  |
  3413  |  resetPlaceHolder_2();  |         |                            |
  3419  |             R = R + 2;  |      2  |                         0  |
  3424  |  resetPlaceHolder_2();  |         |                            |
  3430  |             R = R + 2;  |      2  |                         0  |
  3435  |  resetPlaceHolder_2();  |         |                            |
  3441  |             R = R + 2;  |      2  |                         0  |
  3446  |  resetPlaceHolder_2();  |         |                            |
  3452  |             R = R + 2;  |      2  |                         0  |
  3457  |  resetPlaceHolder_2();  |         |                            |
  3463  |             R = R + 2;  |      2  |                         0  |
  3468  |  resetPlaceHolder_2();  |         |                            |
  3474  |             R = R + 2;  |      2  |                         0  |
  3479  |  resetPlaceHolder_2();  |         |                            |
  3485  |             R = R + 2;  |      2  |                         0  |
  3490  |  resetPlaceHolder_2();  |         |                            |
  3496  |             R = R + 2;  |      2  |                         0  |
  3501  |  resetPlaceHolder_2();  |         |                            |
  3507  |             R = R + 2;  |      2  |                         0  |
  3512  |  resetPlaceHolder_2();  |         |                            |
  3518  |             R = R + 2;  |      2  |                         0  |
  3523  |  resetPlaceHolder_2();  |         |                            |
  3529  |             R = R + 2;  |      2  |                         0  |
  3534  |  resetPlaceHolder_2();  |         |                            |
  3540  |             R = R + 2;  |      2  |                         0  |
  3545  |  resetPlaceHolder_2();  |         |                            |
  3551  |             R = R + 2;  |      2  |                         0  |
  3556  |  resetPlaceHolder_2();  |         |                            |
  3562  |             R = R + 2;  |      2  |                         0  |
  3567  |  resetPlaceHolder_2();  |         |                            |
  3573  |             R = R + 2;  |      2  |                         0  |
  3578  |  resetPlaceHolder_2();  |         |                            |
  3584  |             R = R + 2;  |      2  |                         0  |
  3589  |  resetPlaceHolder_2();  |         |                            |
  3595  |             R = R + 2;  |      2  |                         0  |
  3600  |  resetPlaceHolder_2();  |         |                            |
  3606  |             R = R + 2;  |      2  |                         0  |
  3611  |  resetPlaceHolder_2();  |         |                            |
  3617  |             R = R + 2;  |      2  |                         0  |
  3622  |  resetPlaceHolder_2();  |         |                            |
  3628  |             R = R + 2;  |      2  |                         0  |
  3633  |  resetPlaceHolder_2();  |         |                            |
  3639  |             R = R + 2;  |      2  |                         0  |
  3644  |  resetPlaceHolder_2();  |         |                            |
  3650  |             R = R + 2;  |      2  |                         0  |
  3655  |  resetPlaceHolder_2();  |         |                            |
  3661  |             R = R + 2;  |      2  |                         0  |
  3666  |  resetPlaceHolder_2();  |         |                            |
  3672  |             R = R + 2;  |      2  |                         0  |
  3677  |  resetPlaceHolder_2();  |         |                            |
  3683  |             R = R + 2;  |      2  |                         0  |
  3688  |  resetPlaceHolder_2();  |         |                            |
  3694  |             R = R + 1;  |      1  |                         0  |
  3699  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_2(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	0m29.220s
user	0m43.796s
sys	0m1.858s

2023-01-11 00:12:35,401 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:12:47,424 INFO     Done. Execution time: 12.023303270339966 seconds
2023-01-11 00:12:47,424 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun R () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= (+ R) (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun sorted () Int    1)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    7))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `10.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0012-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0012-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.018s
user	0m25.718s
sys	0m2.676s

2023-01-11 00:12:47,424 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-11 00:12:47,424 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:12:49,177 INFO     Done. Execution time: 1.7528502941131592 seconds
2023-01-11 00:12:49,177 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m1.747s
user	0m3.200s
sys	0m0.202s

2023-01-11 00:12:49,178 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-11 00:12:49,178 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-11 00:12:49,179 INFO     Done. Execution time: 0.0011951923370361328 seconds
2023-01-11 00:12:49,179 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-11 00:12:49,179 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-11 00:12:50,982 INFO     Done. Execution time: 1.8022360801696777 seconds
2023-01-11 00:12:50,982 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:212)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:182)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:105)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:153)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:70)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:51)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:105)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:88)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:88)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:62)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:62)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:58)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:58)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.796s
user	0m3.231s
sys	0m0.181s

2023-01-11 00:12:50,982 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:12:52,131 INFO     Done. Execution time: 1.1493043899536133 seconds
2023-01-11 00:12:52,131 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.144s
user	0m1.741s
sys	0m0.159s

2023-01-11 00:12:52,132 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-11 00:12:52,132 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:13:28,281 INFO     Done. Execution time: 36.14900231361389 seconds
2023-01-11 00:13:28,281 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz6820003078343391647/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6820003078343391647/bin -o /tmp/qfuzz6820003078343391647/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6820003078343391647/bin
Found file /tmp/qfuzz6820003078343391647/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz6820003078343391647/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6820003078343391647/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6820003078343391647/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6820003078343391647/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6820003078343391647/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 49531 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m49.5k to 49.5k us (average: 49.5k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6820003078343391647/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.142s
user	0m52.616s
sys	0m4.160s

2023-01-11 00:13:28,281 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-11 00:13:28,281 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-11 00:13:28,283 INFO     Done. Execution time: 0.0016050338745117188 seconds
2023-01-11 00:13:28,283 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java': No such file or directory

2023-01-11 00:13:28,283 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-11 00:13:30,326 INFO     Done. Execution time: 2.0429558753967285 seconds
2023-01-11 00:13:30,326 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.036s
user	0m3.665s
sys	0m0.198s

2023-01-11 00:13:30,326 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:13:31,392 INFO     Done. Execution time: 1.0654380321502686 seconds
2023-01-11 00:13:31,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.059s
user	0m1.756s
sys	0m0.136s

2023-01-11 00:13:31,392 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-11 00:13:31,392 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:14:07,564 INFO     Done. Execution time: 36.171313762664795 seconds
2023-01-11 00:14:07,564 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz8658841296085780878/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8658841296085780878/bin -o /tmp/qfuzz8658841296085780878/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8658841296085780878/bin
Found file /tmp/qfuzz8658841296085780878/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz8658841296085780878/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8658841296085780878/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8658841296085780878/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8658841296085780878/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8658841296085780878/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 53713 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m53.7k to 53.7k us (average: 53.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8658841296085780878/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.164s
user	0m51.552s
sys	0m4.319s

2023-01-11 00:14:07,564 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-11 00:14:07,565 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-11 00:14:07,567 INFO     Done. Execution time: 0.0015189647674560547 seconds
2023-01-11 00:14:07,567 INFO     Output: 
2023-01-11 00:14:07,567 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-11 00:14:10,459 INFO     Done. Execution time: 2.8922290802001953 seconds
2023-01-11 00:14:10,459 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.883s
user	0m5.178s
sys	0m0.306s

2023-01-11 00:14:10,459 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:14:11,832 INFO     Done. Execution time: 1.3723702430725098 seconds
2023-01-11 00:14:11,832 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.367s
user	0m2.114s
sys	0m0.196s

2023-01-11 00:14:11,832 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-11 00:14:11,832 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:14:48,767 INFO     Done. Execution time: 36.93435883522034 seconds
2023-01-11 00:14:48,767 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz713819628667214909/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz713819628667214909/bin -o /tmp/qfuzz713819628667214909/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz713819628667214909/bin
Found file /tmp/qfuzz713819628667214909/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz713819628667214909/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz713819628667214909/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz713819628667214909/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz713819628667214909/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz713819628667214909/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz713819628667214909/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz713819628667214909/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 47831 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m47.8k to 47.8k us (average: 47.8k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz713819628667214909/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
0; /tmp/qfuzz713819628667214909/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz713819628667214909/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz713819628667214909/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 190, 8, 193, 4, 90, 99)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.926s
user	0m54.439s
sys	0m4.141s

2023-01-11 00:14:48,767 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-11 00:14:48,767 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-11 00:14:48,768 INFO     Done. Execution time: 0.001264810562133789 seconds
2023-01-11 00:14:48,768 INFO     Output: 
2023-01-11 00:14:48,769 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-11 00:14:54,781 INFO     Done. Execution time: 6.012028932571411 seconds
2023-01-11 00:14:54,781 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |   0  |    2  |
    11  |                         int R = 0;  |         |  0  |     |   0  |    2  |
    12  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    15  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    29  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    44  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m6.006s
user	0m10.627s
sys	0m1.384s

2023-01-11 00:14:54,781 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:15:04,114 INFO     Done. Execution time: 9.332629203796387 seconds
2023-01-11 00:15:04,114 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0014-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0014-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.325s
user	0m17.983s
sys	0m2.705s

2023-01-11 00:15:04,114 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-11 00:15:04,114 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:15:40,975 INFO     Done. Execution time: 36.860310316085815 seconds
2023-01-11 00:15:40,975 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz7651509632639276681/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7651509632639276681/bin -o /tmp/qfuzz7651509632639276681/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7651509632639276681/bin
Found file /tmp/qfuzz7651509632639276681/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz7651509632639276681/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7651509632639276681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7651509632639276681/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7651509632639276681/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7651509632639276681/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 51392 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m51.4k to 51.4k us (average: 51.4k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 68.00; [81.00,149.00,235.00,321.00,401.00]
0; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 118.00; [15.00,133.00]
1; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 5; 12.00; [15.00,27.00,201.00,383.00,407.00]
1; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 2.00; [139.00,291.00,293.00]
2; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 5; 8.00; [47.00,113.00,141.00,149.00,301.00]
7; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 5; 12.00; [69.00,81.00,235.00,335.00,401.00]
7; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 5; 30.00; [37.00,233.00,263.00,321.00,401.00]
8; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta; 5; 82.00; [23.00,149.00,235.00,335.00,417.00]
10; /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 4; 12.00; [55.00,67.00,173.00,353.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 110, 4, 160, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 93, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(133, 138, 138, 62, 138, 161, 5, 4, 138, 138, 138, 138, 138, 131, 138, 138, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 63, 49, 16, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 27, 160, 39, 153, 67, 84)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 109, 11, 153, 124, 185)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7651509632639276681/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 169, 79, 20, 169, 79, 151, 50, 151, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,110,4,160,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,93,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [133,138,138,62,138]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,63,49,16,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,27,160]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,109,11,153,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,169,79,20,169]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.852s
user	0m53.203s
sys	0m4.459s

2023-01-11 00:15:40,975 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-11 00:15:40,975 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-11 00:15:40,976 INFO     Done. Execution time: 0.0014901161193847656 seconds
2023-01-11 00:15:40,977 INFO     Output: 
2023-01-11 00:15:40,977 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-11 00:15:47,783 INFO     Done. Execution time: 6.8066017627716064 seconds
2023-01-11 00:15:47,784 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,110,4,160,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([190,93,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,63,49,16,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,27,160])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([133,138,138,62,138])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,109,11,153,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,169,79,20,169])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 93):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff         |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------------------
     9  |                int lhsBuilder = 0;  |         |       |         |  [195,110,4,160,67]  |     |           0  |              |
    11  |                int rhsBuilder = 0;  |         |       |         |  [195,110,4,160,67]  |     |           0  |           0  |
    13  |                         int R = 0;  |         |    0  |         |  [195,110,4,160,67]  |     |           0  |           0  |
    14  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [195,110,4,160,67]  |     |           0  |           0  |
    15  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [195,110,4,160,67]  |     |           0  |           0  |
    17  |                     int chunk = 0;  |         |    0  |      0  |  [195,110,4,160,67]  |     |           0  |           0  |
    19  |                         int i = 0;  |         |    0  |      0  |  [195,110,4,160,67]  |  0  |           0  |           0  |
    25  |        chunk = arrayRead(diff, i);  |         |    0  |    195  |  [195,110,4,160,67]  |  0  |           0  |           0  |
    28  |                     R = R + chunk;  |    195  |  195  |    195  |  [195,110,4,160,67]  |  0  |           0  |           0  |
    32  |                         i = i + 1;  |         |  195  |    195  |  [195,110,4,160,67]  |  1  |           0  |           0  |
    33  |              resetPlaceHolder_1();  |         |  195  |    195  |  [195,110,4,160,67]  |  1  |           0  |           0  |
    39  |        chunk = arrayRead(diff, i);  |         |  195  |    110  |  [195,110,4,160,67]  |  1  |           0  |           0  |
    42  |                     R = R + chunk;  |    110  |  305  |    110  |  [195,110,4,160,67]  |  1  |           0  |           0  |
    46  |                         i = i + 1;  |         |  305  |    110  |  [195,110,4,160,67]  |  2  |           0  |           0  |
    47  |              resetPlaceHolder_1();  |         |  305  |    110  |  [195,110,4,160,67]  |  2  |           0  |           0  |
    53  |        chunk = arrayRead(diff, i);  |         |  305  |      4  |  [195,110,4,160,67]  |  2  |           0  |           0  |
    56  |                     R = R + chunk;  |      4  |  309  |      4  |  [195,110,4,160,67]  |  2  |           0  |           0  |
    60  |                         i = i + 1;  |         |  309  |      4  |  [195,110,4,160,67]  |  3  |           0  |           0  |
    61  |              resetPlaceHolder_1();  |         |  309  |      4  |  [195,110,4,160,67]  |  3  |           0  |           0  |
    67  |        chunk = arrayRead(diff, i);  |         |  309  |    160  |  [195,110,4,160,67]  |  3  |           0  |           0  |
    70  |                     R = R + chunk;  |    160  |  469  |    160  |  [195,110,4,160,67]  |  3  |           0  |           0  |
    74  |                         i = i + 1;  |         |  469  |    160  |  [195,110,4,160,67]  |  4  |           0  |           0  |
    75  |              resetPlaceHolder_1();  |         |  469  |    160  |  [195,110,4,160,67]  |  4  |           0  |           0  |
    81  |        chunk = arrayRead(diff, i);  |         |  469  |     67  |  [195,110,4,160,67]  |  4  |           0  |           0  |
    84  |                     R = R + chunk;  |     67  |  536  |     67  |  [195,110,4,160,67]  |  4  |           0  |           0  |
    88  |                         i = i + 1;  |         |  536  |     67  |  [195,110,4,160,67]  |  5  |           0  |           0  |
    89  |              resetPlaceHolder_1();  |         |  536  |     67  |  [195,110,4,160,67]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56} because there exists a longer and subsuming segment {28,56} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {84} because there exists a longer and subsuming segment {28,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28} because there exists a longer and subsuming segment {28,56} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42} because there exists a longer and subsuming segment {42,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {70} because there exists a longer and subsuming segment {70,84} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,56} because there exists a longer and subsuming segment {28,42,56} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,84} because there exists a longer and subsuming segment {28,42,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42,84} because there exists a longer and subsuming segment {42,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {70,84} because there exists a longer and subsuming segment {42,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,42} because there exists a longer and subsuming segment {28,42,70} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,70} because there exists a longer and subsuming segment {56,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,70} because there exists a longer and subsuming segment {28,42,70} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,84} because there exists a longer and subsuming segment {56,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42,70} because there exists a longer and subsuming segment {42,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42,56} because there exists a longer and subsuming segment {42,56,84} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28,42,56,70,84}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    28  |         R = R + chunk;  |    195  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |    110  |                         0  |
    47  |  resetPlaceHolder_1();  |         |                            |
    56  |         R = R + chunk;  |      4  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    70  |         R = R + chunk;  |    160  |                         0  |
    75  |  resetPlaceHolder_1();  |         |                            |
    84  |         R = R + chunk;  |     67  |                         0  |
    89  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m6.799s
user	0m11.732s
sys	0m1.504s

2023-01-11 00:15:47,784 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:15:55,862 INFO     Done. Execution time: 8.077842950820923 seconds
2023-01-11 00:15:55,862 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0015-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.072s
user	0m16.923s
sys	0m2.290s

2023-01-11 00:15:55,862 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-11 00:15:55,862 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:16:32,074 INFO     Done. Execution time: 36.211236000061035 seconds
2023-01-11 00:16:32,074 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz8773061214538251901/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8773061214538251901/bin -o /tmp/qfuzz8773061214538251901/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8773061214538251901/bin
Found file /tmp/qfuzz8773061214538251901/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz8773061214538251901/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8773061214538251901/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8773061214538251901/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8773061214538251901/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8773061214538251901/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 62218 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m62.2k to 62.2k us (average: 62.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
0; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta; 7; 7.00; [57.00,106.00,113.00,175.00,218.00,287.00,355.00]
1; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 7; 10.00; [23.00,129.00,155.00,165.00,237.00,300.00,392.00]
2; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 7; 19.00; [63.00,125.00,235.00,274.00,293.00,371.00,406.00]
5; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 7.00; [226.00,233.00,243.00]
7; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 6; 17.00; [29.00,77.00,236.00,254.00,271.00,305.00]
9; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 6; 11.00; [39.00,89.00,100.50,123.00,360.00,407.00]
10; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 7; 29.00; [49.00,103.00,134.00,163.00,301.00,364.00,417.00]
12; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 7; 31.00; [40.00,71.00,115.00,194.00,235.00,355.00,399.00]
13; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4; 7; 3.00; [74.00,81.00,194.00,197.00,277.00,311.00,399.00]
21; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta; 7; 32.00; [16.00,48.00,91.00,155.00,191.00,315.00,399.00]
22; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2,+delta; 7; 34.00; [81.00,129.00,194.00,273.00,307.00,348.00,399.00]
29; /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64; 7; 17.00; [50.00,181.00,232.00,249.00,289.00,389.00,423.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4
/tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 170, 80, 49, 136, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 111, 57, 4, 70, 146, 192, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(173, 24, 110, 139, 55, 133, 199)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(196, 74, 17, 143, 44, 63, 178, 195, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 28, 50, 170, 93, 16, 187, 112, 153, 79, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 150, 70, 88, 38, 4, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 129, 33, 146, 57, 170, 93, 16, 187, 114, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(109, 109, 109, 109, 109, 109, 109, 109, 42, 109, 109, 109)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 7, 128, 128, 145, 114, 123, 128, 128, 128, 128, 128, 182, 62, 169, 83, 151, 119, 164, 91, 76, 128, 128, 128, 145, 114, 123, 138, 128, 128, 128, 128, 182, 188)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 196, 43, 12, 37, 46, 176, 53, 191, 63, 24, 13, 62, 120, 8, 104, 156, 25, 101, 40, 62, 31, 4, 74, 4, 197, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 33, 148, 131, 91, 93, 33, 192, 33, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8773061214538251901/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(199, 187, 117, 83, 137, 112, 21, 198, 41, 153, 133, 198, 36, 93, 83, 70, 90, 21, 60, 192, 21, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70,111,57,4,70], 146, 192
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [173,24,110,139,55], 133, 199
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [196,74,17,143,44], 63, 178
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,28,50,170], 93, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,150,70,88,38], 4, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,129,33,146,57], 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [109,109,109,109,109], 109, 109
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [26,7,128,128,145], 114, 123
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,196,43,12,37], 46, 176
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,33,148,131,91], 93, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [199,187,117,83,137], 112, 21
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.205s
user	0m52.700s
sys	0m3.717s

2023-01-11 00:16:32,074 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-11 00:16:32,074 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-11 00:16:32,076 INFO     Done. Execution time: 0.0016758441925048828 seconds
2023-01-11 00:16:32,076 INFO     Output: 
2023-01-11 00:16:32,076 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-11 00:16:44,552 INFO     Done. Execution time: 12.47627329826355 seconds
2023-01-11 00:16:44,553 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70,111,57,4,70], 146, 192)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,28,50,170], 93, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([196,74,17,143,44], 63, 178)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([173,24,110,139,55], 133, 199)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,150,70,88,38], 4, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,129,33,146,57], 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([109,109,109,109,109], 109, 109)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([26,7,128,128,145], 114, 123)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,196,43,12,37], 46, 176)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,33,148,131,91], 93, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([199,187,117,83,137], 112, 21)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 135):
                                                                                                                            
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |       tokens       |  years  |
----------------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |     0  |         |     |     192  |  [70,111,57,4,70]  |    146  |
    26  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     192  |  [70,111,57,4,70]  |    146  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     192  |  [70,111,57,4,70]  |    146  |
    29  |                     int chunk = 0;  |         |     0  |      0  |     |     192  |  [70,111,57,4,70]  |    146  |
    31  |                         int i = 0;  |         |     0  |      0  |  0  |     192  |  [70,111,57,4,70]  |    146  |
    37  |      chunk = arrayRead(tokens, i);  |         |     0  |     70  |  0  |     192  |  [70,111,57,4,70]  |    146  |
    40  |                     R = R + chunk;  |     70  |    70  |     70  |  0  |     192  |  [70,111,57,4,70]  |    146  |
    43  |                     R = R + years;  |    146  |   216  |     70  |  0  |     192  |  [70,111,57,4,70]  |    146  |
    46  |                    R = R + months;  |    192  |   408  |     70  |  0  |     192  |  [70,111,57,4,70]  |    146  |
    50  |                         i = i + 1;  |         |   408  |     70  |  1  |     192  |  [70,111,57,4,70]  |    146  |
    51  |              resetPlaceHolder_1();  |         |   408  |     70  |  1  |     192  |  [70,111,57,4,70]  |    146  |
    57  |      chunk = arrayRead(tokens, i);  |         |   408  |    111  |  1  |     192  |  [70,111,57,4,70]  |    146  |
    60  |                     R = R + chunk;  |    111  |   519  |    111  |  1  |     192  |  [70,111,57,4,70]  |    146  |
    63  |                     R = R + years;  |    146  |   665  |    111  |  1  |     192  |  [70,111,57,4,70]  |    146  |
    66  |                    R = R + months;  |    192  |   857  |    111  |  1  |     192  |  [70,111,57,4,70]  |    146  |
    70  |                         i = i + 1;  |         |   857  |    111  |  2  |     192  |  [70,111,57,4,70]  |    146  |
    71  |              resetPlaceHolder_1();  |         |   857  |    111  |  2  |     192  |  [70,111,57,4,70]  |    146  |
    77  |      chunk = arrayRead(tokens, i);  |         |   857  |     57  |  2  |     192  |  [70,111,57,4,70]  |    146  |
    80  |                     R = R + chunk;  |     57  |   914  |     57  |  2  |     192  |  [70,111,57,4,70]  |    146  |
    83  |                     R = R + years;  |    146  |  1060  |     57  |  2  |     192  |  [70,111,57,4,70]  |    146  |
    86  |                    R = R + months;  |    192  |  1252  |     57  |  2  |     192  |  [70,111,57,4,70]  |    146  |
    90  |                         i = i + 1;  |         |  1252  |     57  |  3  |     192  |  [70,111,57,4,70]  |    146  |
    91  |              resetPlaceHolder_1();  |         |  1252  |     57  |  3  |     192  |  [70,111,57,4,70]  |    146  |
    97  |      chunk = arrayRead(tokens, i);  |         |  1252  |      4  |  3  |     192  |  [70,111,57,4,70]  |    146  |
   100  |                     R = R + chunk;  |      4  |  1256  |      4  |  3  |     192  |  [70,111,57,4,70]  |    146  |
   103  |                     R = R + years;  |    146  |  1402  |      4  |  3  |     192  |  [70,111,57,4,70]  |    146  |
   106  |                    R = R + months;  |    192  |  1594  |      4  |  3  |     192  |  [70,111,57,4,70]  |    146  |
   110  |                         i = i + 1;  |         |  1594  |      4  |  4  |     192  |  [70,111,57,4,70]  |    146  |
   111  |              resetPlaceHolder_1();  |         |  1594  |      4  |  4  |     192  |  [70,111,57,4,70]  |    146  |
   117  |      chunk = arrayRead(tokens, i);  |         |  1594  |     70  |  4  |     192  |  [70,111,57,4,70]  |    146  |
   120  |                     R = R + chunk;  |     70  |  1664  |     70  |  4  |     192  |  [70,111,57,4,70]  |    146  |
   123  |                     R = R + years;  |    146  |  1810  |     70  |  4  |     192  |  [70,111,57,4,70]  |    146  |
   126  |                    R = R + months;  |    192  |  2002  |     70  |  4  |     192  |  [70,111,57,4,70]  |    146  |
   130  |                         i = i + 1;  |         |  2002  |     70  |  5  |     192  |  [70,111,57,4,70]  |    146  |
   131  |              resetPlaceHolder_1();  |         |  2002  |     70  |  5  |     192  |  [70,111,57,4,70]  |    146  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {100} because there exists a longer and subsuming segment {60,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {80} because there exists a longer and subsuming segment {40,80} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40} because there exists a longer and subsuming segment {40,80} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {120} because there exists a longer and subsuming segment {46,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60} because there exists a longer and subsuming segment {60,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {103}, {123}, {43}, {63}, {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    40  |         R = R + chunk;  |     70  |                            |
    43  |         R = R + years;  |    146  |                         0  |
    46  |        R = R + months;  |    192  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |
    60  |         R = R + chunk;  |    111  |                            |
    63  |         R = R + years;  |    146  |                         1  |
    66  |        R = R + months;  |    192  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |
    80  |         R = R + chunk;  |     57  |                            |
    83  |         R = R + years;  |    146  |                         2  |
    86  |        R = R + months;  |    192  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |
   100  |         R = R + chunk;  |      4  |                            |
   103  |         R = R + years;  |    146  |                         3  |
   106  |        R = R + months;  |    192  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   120  |         R = R + chunk;  |     70  |                            |
   123  |         R = R + years;  |    146  |                         4  |
   126  |        R = R + months;  |    192  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {106}, {126}, {46}, {66}, {86} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    40  |         R = R + chunk;  |     70  |                            |
    43  |         R = R + years;  |    146  |                            |
    46  |        R = R + months;  |    192  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    60  |         R = R + chunk;  |    111  |                            |
    63  |         R = R + years;  |    146  |                            |
    66  |        R = R + months;  |    192  |                         1  |
    71  |  resetPlaceHolder_1();  |         |                            |
    80  |         R = R + chunk;  |     57  |                            |
    83  |         R = R + years;  |    146  |                            |
    86  |        R = R + months;  |    192  |                         2  |
    91  |  resetPlaceHolder_1();  |         |                            |
   100  |         R = R + chunk;  |      4  |                            |
   103  |         R = R + years;  |    146  |                            |
   106  |        R = R + months;  |    192  |                         3  |
   111  |  resetPlaceHolder_1();  |         |                            |
   120  |         R = R + chunk;  |     70  |                            |
   123  |         R = R + years;  |    146  |                            |
   126  |        R = R + months;  |    192  |                         4  |
   131  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 60, 80, 40, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 60, 80, 40, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 60, 80, 40, 100]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,100} because there exists a longer and subsuming segment {40,80,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60,100} because there exists a longer and subsuming segment {40,60,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {100,120} because there exists a longer and subsuming segment {80,100,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {80,120} because there exists a longer and subsuming segment {80,100,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,80} because there exists a longer and subsuming segment {40,80,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,120} because there exists a longer and subsuming segment {40,80,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60,120} because there exists a longer and subsuming segment {60,100,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60,80} because there exists a longer and subsuming segment {60,80,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,60} because there exists a longer and subsuming segment {40,60,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {80,100} because there exists a longer and subsuming segment {80,100,120} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 60, 80, 40, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 60, 80, 40, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {60,100,120} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    40  |         R = R + chunk;  |     70  |                            |
    43  |         R = R + years;  |    146  |                            |
    46  |        R = R + months;  |    192  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |
    60  |         R = R + chunk;  |    111  |                         0  |
    63  |         R = R + years;  |    146  |                            |
    66  |        R = R + months;  |    192  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |
    80  |         R = R + chunk;  |     57  |                            |
    83  |         R = R + years;  |    146  |                            |
    86  |        R = R + months;  |    192  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |
   100  |         R = R + chunk;  |      4  |                         0  |
   103  |         R = R + years;  |    146  |                            |
   106  |        R = R + months;  |    192  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |
   120  |         R = R + chunk;  |     70  |                         0  |
   123  |         R = R + years;  |    146  |                            |
   126  |        R = R + months;  |    192  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {103}, {123}, {43}, {63}, {83}
GroupID(1): {106}, {126}, {46}, {66}, {86}
GroupID(2): {60,100,120}
GroupID(3): {40,80}
                                                                                                                                                                 
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |  SegmentIDs in GroupID(3)  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |     70  |                            |                            |                            |                         0  |
    43  |         R = R + years;  |    146  |                         0  |                            |                            |                            |
    46  |        R = R + months;  |    192  |                            |                         0  |                            |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    60  |         R = R + chunk;  |    111  |                            |                            |                         0  |                            |
    63  |         R = R + years;  |    146  |                         1  |                            |                            |                            |
    66  |        R = R + months;  |    192  |                            |                         1  |                            |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
    80  |         R = R + chunk;  |     57  |                            |                            |                            |                         0  |
    83  |         R = R + years;  |    146  |                         2  |                            |                            |                            |
    86  |        R = R + months;  |    192  |                            |                         2  |                            |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   100  |         R = R + chunk;  |      4  |                            |                            |                         0  |                            |
   103  |         R = R + years;  |    146  |                         3  |                            |                            |                            |
   106  |        R = R + months;  |    192  |                            |                         3  |                            |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
   120  |         R = R + chunk;  |     70  |                            |                            |                         0  |                            |
   123  |         R = R + years;  |    146  |                         4  |                            |                            |                            |
   126  |        R = R + months;  |    192  |                            |                         4  |                            |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
GroupID(3): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(51, 71, 91, 111)
GroupID(1): Set(51, 71, 91, 111)
GroupID(2): Set()
GroupID(3): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 2) || (i == 2))
{
  if ((i < 0) || (i == 0))
  {
    R3 = R3 + chunk;
  }
  else
  {
    if ((i < 1) || (i == 1))
    {
      R2 = R2 + chunk;
    }
    else
    {
      R3 = R3 + chunk;
    }
  }
}
else
{
  R2 = R2 + chunk;
}
use R months -> R1 = R1 + months;
resetPlaceHolder_1(); -> {
  // reset R3
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m12.469s
user	0m20.259s
sys	0m3.911s

2023-01-11 00:16:44,553 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:22:58,111 INFO     Done. Execution time: 373.55852603912354 seconds
2023-01-11 00:22:58,112 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D3 = 0),List()) -> DeltaCounterPair(D3,C3), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        if ((i < 0) || (i == 0))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((i < 1) || (i == 1))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D3 = D3 + chunk;
          }
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int C3 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int D3 = 0;
    int D3p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) < (tokens + (tokens * (years + months)))) || (((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) + (D3 + (D3p * (C3 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        if ((i < 0) || (i == 0))
        {
          D3 = D3 + chunk;
        }
        else
        {
          if ((i < 1) || (i == 1))
          {
            D2 = D2 + chunk;
          }
          else
          {
            D3 = D3 + chunk;
          }
        }
      }
      else
      {
        D2 = D2 + chunk;
      }
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D3`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D3` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C3` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6985099386983939282.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5262410027426690629.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D2`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3148790764470459230.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C2`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-645783795106739069.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3281736243032149221.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3965838289731023513.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4643001994870082344.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5245314039610505643.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4664843859888480462.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-5481922654144485154.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D3p 0)` for variable `D3p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3370637209559034976.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8625933553120074121.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4665769130529897738.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7175872843553321908.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1) (* 1 1 years)))` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3777658591903478994.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4491770147714450866.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 8 1 months) (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 8 1 months) (* 1 1 tokens)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 8 1 months) (* 1 1 tokens)))` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= (+ R) (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D3p () Int)
(declare-fun D0p () Int)
(declare-fun D2p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C3 () Int)
(declare-fun D3 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun R () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D3p 0))
(assert (>= D0p 0))
(assert (>= D2p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C3 1) 0) (- C3 1) 0) D3p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!5 (<= D1p (+ (+ 0 (* 8 1 months)) (* 1 1 tokens))))
      (a!6 (<= D0p (+ (+ 0 (* 8 1 months)) (* 1 1 years))))
      (a!7 (or (<= D0p (+ 0 (* 1 1) (* 1 1 years))) (= D0p 0))))
  (and (<= (+ R) (+ D1 a!1 D3 a!2 D0 a!3 D2 a!4))
       a!5
       (or a!5 (= D1p 0))
       (<= D3p 0)
       (or true (= D3p 0))
       a!6
       a!7
       (<= D2p 0)
       (or true (= D2p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 8 1 months) (* 1 1 tokens))) (= D1 0)))
      (a!2 (or (<= D0 (+ 0 (* 1 1) (* 1 1 years))) (= D0 0))))
  (and a!1 (or true (= D3 0)) a!2 (or true (= D2 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 2))  (define-fun D1 () Int    0)  (define-fun months () Int    2)  (define-fun tokens () Int    1)  (define-fun years () Int    3)  (define-fun D0p () Int    2)  (define-fun D1p () Int    4)  (define-fun C0 () Int    0)  (define-fun D2p () Int    0)  (define-fun D3p () Int    0)  (define-fun C2 () Int    0)  (define-fun C3 () Int    0)  (define-fun C1 () Int    0)  (define-fun D3 () Int    0)  (define-fun D2 () Int    15)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    13))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0
              D0
              (* D0p (- C0 1))
              D1
              (* D1p (- C1 1))
              D2
              (* D2p (- C2 1))
              D3
              (* D3p (- C3 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `371.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0016-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0016-transparentAmortize-60s-mostPrecise-000-099.csv`

real	6m13.553s
user	20m40.316s
sys	0m12.960s

2023-01-11 00:22:58,112 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-11 00:22:58,112 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:23:34,147 INFO     Done. Execution time: 36.03487038612366 seconds
2023-01-11 00:23:34,147 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz4060160386802645355/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4060160386802645355/bin -o /tmp/qfuzz4060160386802645355/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4060160386802645355/bin
Found file /tmp/qfuzz4060160386802645355/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz4060160386802645355/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4060160386802645355/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4060160386802645355/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4060160386802645355/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4060160386802645355/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 23, exec speed = 38666 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m38.7k to 38.7k us (average: 38.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4060160386802645355/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [12.00,17.00]
0; /tmp/qfuzz4060160386802645355/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [12.00,17.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4060160386802645355/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4060160386802645355/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.029s
user	0m51.427s
sys	0m3.861s

2023-01-11 00:23:34,147 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-11 00:23:34,147 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-11 00:23:34,149 INFO     Done. Execution time: 0.0016036033630371094 seconds
2023-01-11 00:23:34,149 INFO     Output: 
2023-01-11 00:23:34,149 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-11 00:23:40,272 INFO     Done. Execution time: 6.122288703918457 seconds
2023-01-11 00:23:40,272 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |  0  |          2  |     |
    10  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    11  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    13  |                         int i = 0;  |         |  0  |          2  |  0  |
    19  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    23  |                         i = i + 1;  |         |  1  |          2  |  1  |
    24  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    30  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    34  |                         i = i + 1;  |         |  2  |          2  |  2  |
    35  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [19, 30]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {19}, {30} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    19  |             R = R + 1;  |      1  |                         0  |
    24  |  resetPlaceHolder_1();  |         |                            |
    30  |             R = R + 1;  |      1  |                         1  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {19}, {30}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    19  |             R = R + 1;  |      1  |                         0  |
    24  |  resetPlaceHolder_1();  |         |                            |
    30  |             R = R + 1;  |      1  |                         1  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(24)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m6.115s
user	0m11.082s
sys	0m1.466s

2023-01-11 00:23:40,272 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:23:48,893 INFO     Done. Execution time: 8.621389627456665 seconds
2023-01-11 00:23:48,893 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0023-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0023-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.615s
user	0m16.866s
sys	0m2.547s

2023-01-11 00:23:48,894 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-11 00:23:48,894 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:24:25,149 INFO     Done. Execution time: 36.25572681427002 seconds
2023-01-11 00:24:25,150 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz417749473069838175/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz417749473069838175/bin -o /tmp/qfuzz417749473069838175/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz417749473069838175/bin
Found file /tmp/qfuzz417749473069838175/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz417749473069838175/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz417749473069838175/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz417749473069838175/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz417749473069838175/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz417749473069838175/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz417749473069838175/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz417749473069838175/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 95, exec speed = 59713 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m95 to 95 bits (average: 95.00 bits)
[1;90m        Exec timing : [0m59.7k to 59.7k us (average: 59.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000000,orig:example.txt; 9; 2.00; [10.00,14.00,17.50,20.00,74.00,142.00,228.00,314.00,382.00]
0; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 8; 1.00; [8.00,10.00,14.00,16.50,18.00,20.00,290.00,340.00]
1; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 6; 2.00; [8.00,10.00,14.00,17.50,20.00,246.00]
2; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 8; 2.00; [10.00,14.00,17.50,20.00,228.00,280.00,382.00,384.00]
3; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 6; 2.00; [8.00,10.00,14.00,17.50,20.00,282.00]
7; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 8; 2.00; [10.00,14.00,17.50,20.00,158.00,272.00,274.00,382.00]
7; /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 8; 2.00; [10.00,14.00,17.50,20.00,74.00,142.00,314.00,382.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(166, 141)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 188, 136, 187, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 75, 187, 133, 132, 4, 56)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz417749473069838175/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 33, 153, 67, 67, 185)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [166,141]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,188,136,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,75,187,133,132]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,33,153,67,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.250s
user	0m50.229s
sys	0m4.690s

2023-01-11 00:24:25,150 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-11 00:24:25,150 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-11 00:24:25,151 INFO     Done. Execution time: 0.0014035701751708984 seconds
2023-01-11 00:24:25,151 INFO     Output: 
2023-01-11 00:24:25,151 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-11 00:24:35,278 INFO     Done. Execution time: 10.126764297485352 seconds
2023-01-11 00:24:35,278 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([166,141])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,188,136,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,75,187,133,132])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,33,153,67,67])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  baseMessage  |  buffer  |  chunk  |  i  |
------------------------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |       |    [166,141]  |       0  |         |     |
    11  |                         int R = 0;  |         |    0  |    [166,141]  |       0  |         |     |
    12  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |    [166,141]  |       0  |         |     |
    13  |  // lessPreciseBound(R <= MAX +...  |         |    0  |    [166,141]  |       0  |         |     |
    16  |                         R = R + 1;  |      1  |    1  |    [166,141]  |       0  |         |     |
    19  |                         R = R + 1;  |      1  |    2  |    [166,141]  |       0  |         |     |
    21  |                     int chunk = 0;  |         |    2  |    [166,141]  |       0  |      0  |     |
    23  |                         int i = 0;  |         |    2  |    [166,141]  |       0  |      0  |  0  |
    29  |  chunk = arrayRead(baseMessage,...  |         |    2  |    [166,141]  |       0  |    166  |  0  |
    32  |                         R = R + 1;  |      1  |    3  |    [166,141]  |       0  |    166  |  0  |
    35  |                         R = R + 1;  |      1  |    4  |    [166,141]  |       0  |    166  |  0  |
    38  |                         R = R + 1;  |      1  |    5  |    [166,141]  |       0  |    166  |  0  |
    41  |                     R = R + chunk;  |    166  |  171  |    [166,141]  |       0  |    166  |  0  |
    44  |                         R = R + 1;  |      1  |  172  |    [166,141]  |       0  |    166  |  0  |
    47  |                         R = R + 1;  |      1  |  173  |    [166,141]  |       0  |    166  |  0  |
    50  |                         R = R + 1;  |      1  |  174  |    [166,141]  |       0  |    166  |  0  |
    54  |                         i = i + 1;  |         |  174  |    [166,141]  |       0  |    166  |  1  |
    55  |              resetPlaceHolder_1();  |         |  174  |    [166,141]  |       0  |    166  |  1  |
    61  |  chunk = arrayRead(baseMessage,...  |         |  174  |    [166,141]  |       0  |    141  |  1  |
    64  |                         R = R + 1;  |      1  |  175  |    [166,141]  |       0  |    141  |  1  |
    67  |                         R = R + 1;  |      1  |  176  |    [166,141]  |       0  |    141  |  1  |
    70  |                         R = R + 1;  |      1  |  177  |    [166,141]  |       0  |    141  |  1  |
    73  |                     R = R + chunk;  |    141  |  318  |    [166,141]  |       0  |    141  |  1  |
    76  |                         R = R + 1;  |      1  |  319  |    [166,141]  |       0  |    141  |  1  |
    79  |                         R = R + 1;  |      1  |  320  |    [166,141]  |       0  |    141  |  1  |
    82  |                         R = R + 1;  |      1  |  321  |    [166,141]  |       0  |    141  |  1  |
    86  |                         i = i + 1;  |         |  321  |    [166,141]  |       0  |    141  |  2  |
    87  |              resetPlaceHolder_1();  |         |  321  |    [166,141]  |       0  |    141  |  2  |
    93  |                         R = R + 1;  |      1  |  322  |    [166,141]  |       0  |    141  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [93, 38, 70, 41, 73, 32, 64, 44, 76, 35, 50, 67, 16, 82, 19, 79, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [93, 38, 70, 41, 73, 32, 64, 44, 76, 35, 50, 67, 16, 82, 19, 79, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [93, 38, 70, 41, 73, 32, 64, 44, 76, 35, 50, 67, 16, 82, 19, 79, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [93, 38, 70, 41, 73, 32, 64, 44, 76, 35, 50, 67, 16, 82, 19, 79, 47]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {73} because there exists a longer and subsuming segment {41,73} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {41} because there exists a longer and subsuming segment {41,73} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {16}, {19}, {32}, {35}, {38}, {44}, {47}, {50}, {64}, {67}, {70}, {76}, {79}, {82}, {93} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |
    19  |             R = R + 1;  |      1  |                         1  |
    32  |             R = R + 1;  |      1  |                         2  |
    35  |             R = R + 1;  |      1  |                         3  |
    38  |             R = R + 1;  |      1  |                         4  |
    41  |         R = R + chunk;  |    166  |                            |
    44  |             R = R + 1;  |      1  |                         5  |
    47  |             R = R + 1;  |      1  |                         6  |
    50  |             R = R + 1;  |      1  |                         7  |
    55  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         8  |
    67  |             R = R + 1;  |      1  |                         9  |
    70  |             R = R + 1;  |      1  |                        10  |
    73  |         R = R + chunk;  |    141  |                            |
    76  |             R = R + 1;  |      1  |                        11  |
    79  |             R = R + 1;  |      1  |                        12  |
    82  |             R = R + 1;  |      1  |                        13  |
    87  |  resetPlaceHolder_1();  |         |                            |
    93  |             R = R + 1;  |      1  |                        14  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [41, 73]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [41, 73]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [41, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {16}, {19}, {32}, {35}, {38}, {44}, {47}, {50}, {64}, {67}, {70}, {76}, {79}, {82}, {93}
GroupID(1): {41,73}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [17, 18])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [20, 31])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [33, 34])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [36, 37])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [39, 43])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [45, 46])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [48, 49])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [51, 63])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [65, 66])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [68, 69])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [71, 75])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [77, 78])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [80, 81])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [83, 92])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |    166  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |    141  |                            |                         0  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    93  |             R = R + 1;  |      1  |                        14  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m10.121s
user	0m22.143s
sys	0m4.142s

2023-01-11 00:24:35,279 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:24:49,066 INFO     Done. Execution time: 13.786967039108276 seconds
2023-01-11 00:24:49,066 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun R () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= (+ R) (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    18))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `11.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0024-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0024-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.781s
user	0m36.135s
sys	0m4.811s

2023-01-11 00:24:49,066 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-11 00:24:49,066 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:25:25,489 INFO     Done. Execution time: 36.422736167907715 seconds
2023-01-11 00:25:25,489 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz2271089884373567494/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2271089884373567494/bin -o /tmp/qfuzz2271089884373567494/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2271089884373567494/bin
Found file /tmp/qfuzz2271089884373567494/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz2271089884373567494/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2271089884373567494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2271089884373567494/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2271089884373567494/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2271089884373567494/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 52199 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m52.2k to 52.2k us (average: 52.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 7.00; [15.00,22.00]
0; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]
1; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 2; 7.00; [15.00,22.00]
1; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 2; 7.00; [15.00,22.00]
3; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 7.00; [15.00,22.00]
3; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 2; 7.00; [15.00,22.00]
4; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 2; 7.00; [15.00,22.00]
5; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]
6; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
7; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32; 2; 7.00; [15.00,22.00]
7; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]
10; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 2; 7.00; [15.00,22.00]
13; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]
25; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
28; /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 109, 56, 150, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(142, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(165, 110, 33, 161, 31, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 144, 176, 70, 4, 197, 143, 139, 139, 139, 167, 139, 127, 181, 4, 132, 4, 139, 139, 176)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2271089884373567494/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(84, 34, 16, 193, 109, 109, 54, 109, 91, 109, 109, 113, 109, 109, 4, 37, 109)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 63
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 142
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 165
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 139
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 84
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.416s
user	0m50.446s
sys	0m5.663s

2023-01-11 00:25:25,489 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-11 00:25:25,489 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-11 00:25:25,491 INFO     Done. Execution time: 0.0016126632690429688 seconds
2023-01-11 00:25:25,491 INFO     Output: 
2023-01-11 00:25:25,491 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-11 00:25:34,210 INFO     Done. Execution time: 8.718044519424438 seconds
2023-01-11 00:25:34,210 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(63)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(142)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(165)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(12)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(139)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 12 (66.67%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(84)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 1348):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     9  |               int arrayPrefix = 0;  |         |       |            0  |         63  |              |
    11  |                         int R = 0;  |         |    0  |            0  |         63  |              |
    12  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         63  |              |
    13  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         63  |              |
    15  |        int className_ = className;  |         |    0  |            0  |         63  |          63  |
    28  |       className_ = className_ - 1;  |         |    0  |            0  |         63  |          62  |
    32  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         63  |          62  |
    35  |                         R = R + 2;  |      2  |    2  |            2  |         63  |          62  |
    36  |              resetPlaceHolder_1();  |         |    2  |            2  |         63  |          62  |
    49  |       className_ = className_ - 1;  |         |    2  |            2  |         63  |          61  |
    53  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         63  |          61  |
    56  |                         R = R + 2;  |      2  |    4  |            4  |         63  |          61  |
    57  |              resetPlaceHolder_1();  |         |    4  |            4  |         63  |          61  |
    70  |       className_ = className_ - 1;  |         |    4  |            4  |         63  |          60  |
    74  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         63  |          60  |
    77  |                         R = R + 2;  |      2  |    6  |            6  |         63  |          60  |
    78  |              resetPlaceHolder_1();  |         |    6  |            6  |         63  |          60  |
    91  |       className_ = className_ - 1;  |         |    6  |            6  |         63  |          59  |
    95  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         63  |          59  |
    98  |                         R = R + 2;  |      2  |    8  |            8  |         63  |          59  |
    99  |              resetPlaceHolder_1();  |         |    8  |            8  |         63  |          59  |
   112  |       className_ = className_ - 1;  |         |    8  |            8  |         63  |          58  |
   116  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         63  |          58  |
   119  |                         R = R + 2;  |      2  |   10  |           10  |         63  |          58  |
   120  |              resetPlaceHolder_1();  |         |   10  |           10  |         63  |          58  |
   133  |       className_ = className_ - 1;  |         |   10  |           10  |         63  |          57  |
   137  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         63  |          57  |
   140  |                         R = R + 2;  |      2  |   12  |           12  |         63  |          57  |
   141  |              resetPlaceHolder_1();  |         |   12  |           12  |         63  |          57  |
   154  |       className_ = className_ - 1;  |         |   12  |           12  |         63  |          56  |
   158  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         63  |          56  |
   161  |                         R = R + 2;  |      2  |   14  |           14  |         63  |          56  |
   162  |              resetPlaceHolder_1();  |         |   14  |           14  |         63  |          56  |
   175  |       className_ = className_ - 1;  |         |   14  |           14  |         63  |          55  |
   179  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         63  |          55  |
   182  |                         R = R + 2;  |      2  |   16  |           16  |         63  |          55  |
   183  |              resetPlaceHolder_1();  |         |   16  |           16  |         63  |          55  |
   196  |       className_ = className_ - 1;  |         |   16  |           16  |         63  |          54  |
   200  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         63  |          54  |
   203  |                         R = R + 2;  |      2  |   18  |           18  |         63  |          54  |
   204  |              resetPlaceHolder_1();  |         |   18  |           18  |         63  |          54  |
   217  |       className_ = className_ - 1;  |         |   18  |           18  |         63  |          53  |
   221  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         63  |          53  |
   224  |                         R = R + 2;  |      2  |   20  |           20  |         63  |          53  |
   225  |              resetPlaceHolder_1();  |         |   20  |           20  |         63  |          53  |
   238  |       className_ = className_ - 1;  |         |   20  |           20  |         63  |          52  |
   242  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         63  |          52  |
   245  |                         R = R + 2;  |      2  |   22  |           22  |         63  |          52  |
   246  |              resetPlaceHolder_1();  |         |   22  |           22  |         63  |          52  |
   259  |       className_ = className_ - 1;  |         |   22  |           22  |         63  |          51  |
   263  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         63  |          51  |
   266  |                         R = R + 2;  |      2  |   24  |           24  |         63  |          51  |
   267  |              resetPlaceHolder_1();  |         |   24  |           24  |         63  |          51  |
   280  |       className_ = className_ - 1;  |         |   24  |           24  |         63  |          50  |
   284  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         63  |          50  |
   287  |                         R = R + 2;  |      2  |   26  |           26  |         63  |          50  |
   288  |              resetPlaceHolder_1();  |         |   26  |           26  |         63  |          50  |
   301  |       className_ = className_ - 1;  |         |   26  |           26  |         63  |          49  |
   305  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         63  |          49  |
   308  |                         R = R + 2;  |      2  |   28  |           28  |         63  |          49  |
   309  |              resetPlaceHolder_1();  |         |   28  |           28  |         63  |          49  |
   322  |       className_ = className_ - 1;  |         |   28  |           28  |         63  |          48  |
   326  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         63  |          48  |
   329  |                         R = R + 2;  |      2  |   30  |           30  |         63  |          48  |
   330  |              resetPlaceHolder_1();  |         |   30  |           30  |         63  |          48  |
   343  |       className_ = className_ - 1;  |         |   30  |           30  |         63  |          47  |
   347  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         63  |          47  |
   350  |                         R = R + 2;  |      2  |   32  |           32  |         63  |          47  |
   351  |              resetPlaceHolder_1();  |         |   32  |           32  |         63  |          47  |
   364  |       className_ = className_ - 1;  |         |   32  |           32  |         63  |          46  |
   368  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         63  |          46  |
   371  |                         R = R + 2;  |      2  |   34  |           34  |         63  |          46  |
   372  |              resetPlaceHolder_1();  |         |   34  |           34  |         63  |          46  |
   385  |       className_ = className_ - 1;  |         |   34  |           34  |         63  |          45  |
   389  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         63  |          45  |
   392  |                         R = R + 2;  |      2  |   36  |           36  |         63  |          45  |
   393  |              resetPlaceHolder_1();  |         |   36  |           36  |         63  |          45  |
   406  |       className_ = className_ - 1;  |         |   36  |           36  |         63  |          44  |
   410  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         63  |          44  |
   413  |                         R = R + 2;  |      2  |   38  |           38  |         63  |          44  |
   414  |              resetPlaceHolder_1();  |         |   38  |           38  |         63  |          44  |
   427  |       className_ = className_ - 1;  |         |   38  |           38  |         63  |          43  |
   431  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         63  |          43  |
   434  |                         R = R + 2;  |      2  |   40  |           40  |         63  |          43  |
   435  |              resetPlaceHolder_1();  |         |   40  |           40  |         63  |          43  |
   448  |       className_ = className_ - 1;  |         |   40  |           40  |         63  |          42  |
   452  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         63  |          42  |
   455  |                         R = R + 2;  |      2  |   42  |           42  |         63  |          42  |
   456  |              resetPlaceHolder_1();  |         |   42  |           42  |         63  |          42  |
   469  |       className_ = className_ - 1;  |         |   42  |           42  |         63  |          41  |
   473  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         63  |          41  |
   476  |                         R = R + 2;  |      2  |   44  |           44  |         63  |          41  |
   477  |              resetPlaceHolder_1();  |         |   44  |           44  |         63  |          41  |
   490  |       className_ = className_ - 1;  |         |   44  |           44  |         63  |          40  |
   494  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         63  |          40  |
   497  |                         R = R + 2;  |      2  |   46  |           46  |         63  |          40  |
   498  |              resetPlaceHolder_1();  |         |   46  |           46  |         63  |          40  |
   511  |       className_ = className_ - 1;  |         |   46  |           46  |         63  |          39  |
   515  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         63  |          39  |
   518  |                         R = R + 2;  |      2  |   48  |           48  |         63  |          39  |
   519  |              resetPlaceHolder_1();  |         |   48  |           48  |         63  |          39  |
   532  |       className_ = className_ - 1;  |         |   48  |           48  |         63  |          38  |
   536  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         63  |          38  |
   539  |                         R = R + 2;  |      2  |   50  |           50  |         63  |          38  |
   540  |              resetPlaceHolder_1();  |         |   50  |           50  |         63  |          38  |
   553  |       className_ = className_ - 1;  |         |   50  |           50  |         63  |          37  |
   557  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         63  |          37  |
   560  |                         R = R + 2;  |      2  |   52  |           52  |         63  |          37  |
   561  |              resetPlaceHolder_1();  |         |   52  |           52  |         63  |          37  |
   574  |       className_ = className_ - 1;  |         |   52  |           52  |         63  |          36  |
   578  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         63  |          36  |
   581  |                         R = R + 2;  |      2  |   54  |           54  |         63  |          36  |
   582  |              resetPlaceHolder_1();  |         |   54  |           54  |         63  |          36  |
   595  |       className_ = className_ - 1;  |         |   54  |           54  |         63  |          35  |
   599  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         63  |          35  |
   602  |                         R = R + 2;  |      2  |   56  |           56  |         63  |          35  |
   603  |              resetPlaceHolder_1();  |         |   56  |           56  |         63  |          35  |
   616  |       className_ = className_ - 1;  |         |   56  |           56  |         63  |          34  |
   620  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         63  |          34  |
   623  |                         R = R + 2;  |      2  |   58  |           58  |         63  |          34  |
   624  |              resetPlaceHolder_1();  |         |   58  |           58  |         63  |          34  |
   637  |       className_ = className_ - 1;  |         |   58  |           58  |         63  |          33  |
   641  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         63  |          33  |
   644  |                         R = R + 2;  |      2  |   60  |           60  |         63  |          33  |
   645  |              resetPlaceHolder_1();  |         |   60  |           60  |         63  |          33  |
   658  |       className_ = className_ - 1;  |         |   60  |           60  |         63  |          32  |
   662  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         63  |          32  |
   665  |                         R = R + 2;  |      2  |   62  |           62  |         63  |          32  |
   666  |              resetPlaceHolder_1();  |         |   62  |           62  |         63  |          32  |
   679  |       className_ = className_ - 1;  |         |   62  |           62  |         63  |          31  |
   683  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         63  |          31  |
   686  |                         R = R + 2;  |      2  |   64  |           64  |         63  |          31  |
   687  |              resetPlaceHolder_1();  |         |   64  |           64  |         63  |          31  |
   700  |       className_ = className_ - 1;  |         |   64  |           64  |         63  |          30  |
   704  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         63  |          30  |
   707  |                         R = R + 2;  |      2  |   66  |           66  |         63  |          30  |
   708  |              resetPlaceHolder_1();  |         |   66  |           66  |         63  |          30  |
   721  |       className_ = className_ - 1;  |         |   66  |           66  |         63  |          29  |
   725  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         63  |          29  |
   728  |                         R = R + 2;  |      2  |   68  |           68  |         63  |          29  |
   729  |              resetPlaceHolder_1();  |         |   68  |           68  |         63  |          29  |
   742  |       className_ = className_ - 1;  |         |   68  |           68  |         63  |          28  |
   746  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         63  |          28  |
   749  |                         R = R + 2;  |      2  |   70  |           70  |         63  |          28  |
   750  |              resetPlaceHolder_1();  |         |   70  |           70  |         63  |          28  |
   763  |       className_ = className_ - 1;  |         |   70  |           70  |         63  |          27  |
   767  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         63  |          27  |
   770  |                         R = R + 2;  |      2  |   72  |           72  |         63  |          27  |
   771  |              resetPlaceHolder_1();  |         |   72  |           72  |         63  |          27  |
   784  |       className_ = className_ - 1;  |         |   72  |           72  |         63  |          26  |
   788  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         63  |          26  |
   791  |                         R = R + 2;  |      2  |   74  |           74  |         63  |          26  |
   792  |              resetPlaceHolder_1();  |         |   74  |           74  |         63  |          26  |
   805  |       className_ = className_ - 1;  |         |   74  |           74  |         63  |          25  |
   809  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         63  |          25  |
   812  |                         R = R + 2;  |      2  |   76  |           76  |         63  |          25  |
   813  |              resetPlaceHolder_1();  |         |   76  |           76  |         63  |          25  |
   826  |       className_ = className_ - 1;  |         |   76  |           76  |         63  |          24  |
   830  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         63  |          24  |
   833  |                         R = R + 2;  |      2  |   78  |           78  |         63  |          24  |
   834  |              resetPlaceHolder_1();  |         |   78  |           78  |         63  |          24  |
   847  |       className_ = className_ - 1;  |         |   78  |           78  |         63  |          23  |
   851  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         63  |          23  |
   854  |                         R = R + 2;  |      2  |   80  |           80  |         63  |          23  |
   855  |              resetPlaceHolder_1();  |         |   80  |           80  |         63  |          23  |
   868  |       className_ = className_ - 1;  |         |   80  |           80  |         63  |          22  |
   872  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         63  |          22  |
   875  |                         R = R + 2;  |      2  |   82  |           82  |         63  |          22  |
   876  |              resetPlaceHolder_1();  |         |   82  |           82  |         63  |          22  |
   889  |       className_ = className_ - 1;  |         |   82  |           82  |         63  |          21  |
   893  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         63  |          21  |
   896  |                         R = R + 2;  |      2  |   84  |           84  |         63  |          21  |
   897  |              resetPlaceHolder_1();  |         |   84  |           84  |         63  |          21  |
   910  |       className_ = className_ - 1;  |         |   84  |           84  |         63  |          20  |
   914  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         63  |          20  |
   917  |                         R = R + 2;  |      2  |   86  |           86  |         63  |          20  |
   918  |              resetPlaceHolder_1();  |         |   86  |           86  |         63  |          20  |
   931  |       className_ = className_ - 1;  |         |   86  |           86  |         63  |          19  |
   935  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         63  |          19  |
   938  |                         R = R + 2;  |      2  |   88  |           88  |         63  |          19  |
   939  |              resetPlaceHolder_1();  |         |   88  |           88  |         63  |          19  |
   952  |       className_ = className_ - 1;  |         |   88  |           88  |         63  |          18  |
   956  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         63  |          18  |
   959  |                         R = R + 2;  |      2  |   90  |           90  |         63  |          18  |
   960  |              resetPlaceHolder_1();  |         |   90  |           90  |         63  |          18  |
   973  |       className_ = className_ - 1;  |         |   90  |           90  |         63  |          17  |
   977  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         63  |          17  |
   980  |                         R = R + 2;  |      2  |   92  |           92  |         63  |          17  |
   981  |              resetPlaceHolder_1();  |         |   92  |           92  |         63  |          17  |
   994  |       className_ = className_ - 1;  |         |   92  |           92  |         63  |          16  |
   998  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         63  |          16  |
  1001  |                         R = R + 2;  |      2  |   94  |           94  |         63  |          16  |
  1002  |              resetPlaceHolder_1();  |         |   94  |           94  |         63  |          16  |
  1015  |       className_ = className_ - 1;  |         |   94  |           94  |         63  |          15  |
  1019  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         63  |          15  |
  1022  |                         R = R + 2;  |      2  |   96  |           96  |         63  |          15  |
  1023  |              resetPlaceHolder_1();  |         |   96  |           96  |         63  |          15  |
  1036  |       className_ = className_ - 1;  |         |   96  |           96  |         63  |          14  |
  1040  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         63  |          14  |
  1043  |                         R = R + 2;  |      2  |   98  |           98  |         63  |          14  |
  1044  |              resetPlaceHolder_1();  |         |   98  |           98  |         63  |          14  |
  1057  |       className_ = className_ - 1;  |         |   98  |           98  |         63  |          13  |
  1061  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         63  |          13  |
  1064  |                         R = R + 2;  |      2  |  100  |          100  |         63  |          13  |
  1065  |              resetPlaceHolder_1();  |         |  100  |          100  |         63  |          13  |
  1078  |       className_ = className_ - 1;  |         |  100  |          100  |         63  |          12  |
  1082  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         63  |          12  |
  1085  |                         R = R + 2;  |      2  |  102  |          102  |         63  |          12  |
  1086  |              resetPlaceHolder_1();  |         |  102  |          102  |         63  |          12  |
  1099  |       className_ = className_ - 1;  |         |  102  |          102  |         63  |          11  |
  1103  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         63  |          11  |
  1106  |                         R = R + 2;  |      2  |  104  |          104  |         63  |          11  |
  1107  |              resetPlaceHolder_1();  |         |  104  |          104  |         63  |          11  |
  1120  |       className_ = className_ - 1;  |         |  104  |          104  |         63  |          10  |
  1124  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         63  |          10  |
  1127  |                         R = R + 2;  |      2  |  106  |          106  |         63  |          10  |
  1128  |              resetPlaceHolder_1();  |         |  106  |          106  |         63  |          10  |
  1141  |       className_ = className_ - 1;  |         |  106  |          106  |         63  |           9  |
  1145  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         63  |           9  |
  1148  |                         R = R + 2;  |      2  |  108  |          108  |         63  |           9  |
  1149  |              resetPlaceHolder_1();  |         |  108  |          108  |         63  |           9  |
  1162  |       className_ = className_ - 1;  |         |  108  |          108  |         63  |           8  |
  1166  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         63  |           8  |
  1169  |                         R = R + 2;  |      2  |  110  |          110  |         63  |           8  |
  1170  |              resetPlaceHolder_1();  |         |  110  |          110  |         63  |           8  |
  1183  |       className_ = className_ - 1;  |         |  110  |          110  |         63  |           7  |
  1187  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         63  |           7  |
  1190  |                         R = R + 2;  |      2  |  112  |          112  |         63  |           7  |
  1191  |              resetPlaceHolder_1();  |         |  112  |          112  |         63  |           7  |
  1204  |       className_ = className_ - 1;  |         |  112  |          112  |         63  |           6  |
  1208  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         63  |           6  |
  1211  |                         R = R + 2;  |      2  |  114  |          114  |         63  |           6  |
  1212  |              resetPlaceHolder_1();  |         |  114  |          114  |         63  |           6  |
  1225  |       className_ = className_ - 1;  |         |  114  |          114  |         63  |           5  |
  1229  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         63  |           5  |
  1232  |                         R = R + 2;  |      2  |  116  |          116  |         63  |           5  |
  1233  |              resetPlaceHolder_1();  |         |  116  |          116  |         63  |           5  |
  1246  |       className_ = className_ - 1;  |         |  116  |          116  |         63  |           4  |
  1250  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         63  |           4  |
  1253  |                         R = R + 2;  |      2  |  118  |          118  |         63  |           4  |
  1254  |              resetPlaceHolder_1();  |         |  118  |          118  |         63  |           4  |
  1267  |       className_ = className_ - 1;  |         |  118  |          118  |         63  |           3  |
  1271  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         63  |           3  |
  1274  |                         R = R + 2;  |      2  |  120  |          120  |         63  |           3  |
  1275  |              resetPlaceHolder_1();  |         |  120  |          120  |         63  |           3  |
  1288  |       className_ = className_ - 1;  |         |  120  |          120  |         63  |           2  |
  1292  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         63  |           2  |
  1295  |                         R = R + 2;  |      2  |  122  |          122  |         63  |           2  |
  1296  |              resetPlaceHolder_1();  |         |  122  |          122  |         63  |           2  |
  1309  |       className_ = className_ - 1;  |         |  122  |          122  |         63  |           1  |
  1313  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         63  |           1  |
  1316  |                         R = R + 2;  |      2  |  124  |          124  |         63  |           1  |
  1317  |              resetPlaceHolder_1();  |         |  124  |          124  |         63  |           1  |
  1330  |       className_ = className_ - 1;  |         |  124  |          124  |         63  |           0  |
  1334  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |         63  |           0  |
  1337  |                         R = R + 2;  |      2  |  126  |          126  |         63  |           0  |
  1338  |              resetPlaceHolder_1();  |         |  126  |          126  |         63  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {1001}, {1022}, {1043}, {1064}, {1085}, {1106}, {1127}, {1148}, {1169}, {1190}, {119}, {1211}, {1232}, {1253}, {1274}, {1295}, {1316}, {1337}, {140}, {161}, {182}, {203}, {224}, {245}, {266}, {287}, {308}, {329}, {350}, {35}, {371}, {392}, {413}, {434}, {455}, {476}, {497}, {518}, {539}, {560}, {56}, {581}, {602}, {623}, {644}, {665}, {686}, {707}, {728}, {749}, {770}, {77}, {791}, {812}, {833}, {854}, {875}, {896}, {917}, {938}, {959}, {980}, {98} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 2;  |      2  |                         0  |
    36  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 2;  |      2  |                         1  |
    57  |  resetPlaceHolder_1();  |         |                            |
    77  |             R = R + 2;  |      2  |                         2  |
    78  |  resetPlaceHolder_1();  |         |                            |
    98  |             R = R + 2;  |      2  |                         3  |
    99  |  resetPlaceHolder_1();  |         |                            |
   119  |             R = R + 2;  |      2  |                         4  |
   120  |  resetPlaceHolder_1();  |         |                            |
   140  |             R = R + 2;  |      2  |                         5  |
   141  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 2;  |      2  |                         6  |
   162  |  resetPlaceHolder_1();  |         |                            |
   182  |             R = R + 2;  |      2  |                         7  |
   183  |  resetPlaceHolder_1();  |         |                            |
   203  |             R = R + 2;  |      2  |                         8  |
   204  |  resetPlaceHolder_1();  |         |                            |
   224  |             R = R + 2;  |      2  |                         9  |
   225  |  resetPlaceHolder_1();  |         |                            |
   245  |             R = R + 2;  |      2  |                        10  |
   246  |  resetPlaceHolder_1();  |         |                            |
   266  |             R = R + 2;  |      2  |                        11  |
   267  |  resetPlaceHolder_1();  |         |                            |
   287  |             R = R + 2;  |      2  |                        12  |
   288  |  resetPlaceHolder_1();  |         |                            |
   308  |             R = R + 2;  |      2  |                        13  |
   309  |  resetPlaceHolder_1();  |         |                            |
   329  |             R = R + 2;  |      2  |                        14  |
   330  |  resetPlaceHolder_1();  |         |                            |
   350  |             R = R + 2;  |      2  |                        15  |
   351  |  resetPlaceHolder_1();  |         |                            |
   371  |             R = R + 2;  |      2  |                        16  |
   372  |  resetPlaceHolder_1();  |         |                            |
   392  |             R = R + 2;  |      2  |                        17  |
   393  |  resetPlaceHolder_1();  |         |                            |
   413  |             R = R + 2;  |      2  |                        18  |
   414  |  resetPlaceHolder_1();  |         |                            |
   434  |             R = R + 2;  |      2  |                        19  |
   435  |  resetPlaceHolder_1();  |         |                            |
   455  |             R = R + 2;  |      2  |                        20  |
   456  |  resetPlaceHolder_1();  |         |                            |
   476  |             R = R + 2;  |      2  |                        21  |
   477  |  resetPlaceHolder_1();  |         |                            |
   497  |             R = R + 2;  |      2  |                        22  |
   498  |  resetPlaceHolder_1();  |         |                            |
   518  |             R = R + 2;  |      2  |                        23  |
   519  |  resetPlaceHolder_1();  |         |                            |
   539  |             R = R + 2;  |      2  |                        24  |
   540  |  resetPlaceHolder_1();  |         |                            |
   560  |             R = R + 2;  |      2  |                        25  |
   561  |  resetPlaceHolder_1();  |         |                            |
   581  |             R = R + 2;  |      2  |                        26  |
   582  |  resetPlaceHolder_1();  |         |                            |
   602  |             R = R + 2;  |      2  |                        27  |
   603  |  resetPlaceHolder_1();  |         |                            |
   623  |             R = R + 2;  |      2  |                        28  |
   624  |  resetPlaceHolder_1();  |         |                            |
   644  |             R = R + 2;  |      2  |                        29  |
   645  |  resetPlaceHolder_1();  |         |                            |
   665  |             R = R + 2;  |      2  |                        30  |
   666  |  resetPlaceHolder_1();  |         |                            |
   686  |             R = R + 2;  |      2  |                        31  |
   687  |  resetPlaceHolder_1();  |         |                            |
   707  |             R = R + 2;  |      2  |                        32  |
   708  |  resetPlaceHolder_1();  |         |                            |
   728  |             R = R + 2;  |      2  |                        33  |
   729  |  resetPlaceHolder_1();  |         |                            |
   749  |             R = R + 2;  |      2  |                        34  |
   750  |  resetPlaceHolder_1();  |         |                            |
   770  |             R = R + 2;  |      2  |                        35  |
   771  |  resetPlaceHolder_1();  |         |                            |
   791  |             R = R + 2;  |      2  |                        36  |
   792  |  resetPlaceHolder_1();  |         |                            |
   812  |             R = R + 2;  |      2  |                        37  |
   813  |  resetPlaceHolder_1();  |         |                            |
   833  |             R = R + 2;  |      2  |                        38  |
   834  |  resetPlaceHolder_1();  |         |                            |
   854  |             R = R + 2;  |      2  |                        39  |
   855  |  resetPlaceHolder_1();  |         |                            |
   875  |             R = R + 2;  |      2  |                        40  |
   876  |  resetPlaceHolder_1();  |         |                            |
   896  |             R = R + 2;  |      2  |                        41  |
   897  |  resetPlaceHolder_1();  |         |                            |
   917  |             R = R + 2;  |      2  |                        42  |
   918  |  resetPlaceHolder_1();  |         |                            |
   938  |             R = R + 2;  |      2  |                        43  |
   939  |  resetPlaceHolder_1();  |         |                            |
   959  |             R = R + 2;  |      2  |                        44  |
   960  |  resetPlaceHolder_1();  |         |                            |
   980  |             R = R + 2;  |      2  |                        45  |
   981  |  resetPlaceHolder_1();  |         |                            |
  1001  |             R = R + 2;  |      2  |                        46  |
  1002  |  resetPlaceHolder_1();  |         |                            |
  1022  |             R = R + 2;  |      2  |                        47  |
  1023  |  resetPlaceHolder_1();  |         |                            |
  1043  |             R = R + 2;  |      2  |                        48  |
  1044  |  resetPlaceHolder_1();  |         |                            |
  1064  |             R = R + 2;  |      2  |                        49  |
  1065  |  resetPlaceHolder_1();  |         |                            |
  1085  |             R = R + 2;  |      2  |                        50  |
  1086  |  resetPlaceHolder_1();  |         |                            |
  1106  |             R = R + 2;  |      2  |                        51  |
  1107  |  resetPlaceHolder_1();  |         |                            |
  1127  |             R = R + 2;  |      2  |                        52  |
  1128  |  resetPlaceHolder_1();  |         |                            |
  1148  |             R = R + 2;  |      2  |                        53  |
  1149  |  resetPlaceHolder_1();  |         |                            |
  1169  |             R = R + 2;  |      2  |                        54  |
  1170  |  resetPlaceHolder_1();  |         |                            |
  1190  |             R = R + 2;  |      2  |                        55  |
  1191  |  resetPlaceHolder_1();  |         |                            |
  1211  |             R = R + 2;  |      2  |                        56  |
  1212  |  resetPlaceHolder_1();  |         |                            |
  1232  |             R = R + 2;  |      2  |                        57  |
  1233  |  resetPlaceHolder_1();  |         |                            |
  1253  |             R = R + 2;  |      2  |                        58  |
  1254  |  resetPlaceHolder_1();  |         |                            |
  1274  |             R = R + 2;  |      2  |                        59  |
  1275  |  resetPlaceHolder_1();  |         |                            |
  1295  |             R = R + 2;  |      2  |                        60  |
  1296  |  resetPlaceHolder_1();  |         |                            |
  1316  |             R = R + 2;  |      2  |                        61  |
  1317  |  resetPlaceHolder_1();  |         |                            |
  1337  |             R = R + 2;  |      2  |                        62  |
  1338  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {1001}, {1022}, {1043}, {1064}, {1085}, {1106}, {1127}, {1148}, {1169}, {1190}, {119}, {1211}, {1232}, {1253}, {1274}, {1295}, {1316}, {1337}, {140}, {161}, {182}, {203}, {224}, {245}, {266}, {287}, {308}, {329}, {350}, {35}, {371}, {392}, {413}, {434}, {455}, {476}, {497}, {518}, {539}, {560}, {56}, {581}, {602}, {623}, {644}, {665}, {686}, {707}, {728}, {749}, {770}, {77}, {791}, {812}, {833}, {854}, {875}, {896}, {917}, {938}, {959}, {980}, {98}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 2;  |      2  |                         0  |
    36  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 2;  |      2  |                         1  |
    57  |  resetPlaceHolder_1();  |         |                            |
    77  |             R = R + 2;  |      2  |                         2  |
    78  |  resetPlaceHolder_1();  |         |                            |
    98  |             R = R + 2;  |      2  |                         3  |
    99  |  resetPlaceHolder_1();  |         |                            |
   119  |             R = R + 2;  |      2  |                         4  |
   120  |  resetPlaceHolder_1();  |         |                            |
   140  |             R = R + 2;  |      2  |                         5  |
   141  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 2;  |      2  |                         6  |
   162  |  resetPlaceHolder_1();  |         |                            |
   182  |             R = R + 2;  |      2  |                         7  |
   183  |  resetPlaceHolder_1();  |         |                            |
   203  |             R = R + 2;  |      2  |                         8  |
   204  |  resetPlaceHolder_1();  |         |                            |
   224  |             R = R + 2;  |      2  |                         9  |
   225  |  resetPlaceHolder_1();  |         |                            |
   245  |             R = R + 2;  |      2  |                        10  |
   246  |  resetPlaceHolder_1();  |         |                            |
   266  |             R = R + 2;  |      2  |                        11  |
   267  |  resetPlaceHolder_1();  |         |                            |
   287  |             R = R + 2;  |      2  |                        12  |
   288  |  resetPlaceHolder_1();  |         |                            |
   308  |             R = R + 2;  |      2  |                        13  |
   309  |  resetPlaceHolder_1();  |         |                            |
   329  |             R = R + 2;  |      2  |                        14  |
   330  |  resetPlaceHolder_1();  |         |                            |
   350  |             R = R + 2;  |      2  |                        15  |
   351  |  resetPlaceHolder_1();  |         |                            |
   371  |             R = R + 2;  |      2  |                        16  |
   372  |  resetPlaceHolder_1();  |         |                            |
   392  |             R = R + 2;  |      2  |                        17  |
   393  |  resetPlaceHolder_1();  |         |                            |
   413  |             R = R + 2;  |      2  |                        18  |
   414  |  resetPlaceHolder_1();  |         |                            |
   434  |             R = R + 2;  |      2  |                        19  |
   435  |  resetPlaceHolder_1();  |         |                            |
   455  |             R = R + 2;  |      2  |                        20  |
   456  |  resetPlaceHolder_1();  |         |                            |
   476  |             R = R + 2;  |      2  |                        21  |
   477  |  resetPlaceHolder_1();  |         |                            |
   497  |             R = R + 2;  |      2  |                        22  |
   498  |  resetPlaceHolder_1();  |         |                            |
   518  |             R = R + 2;  |      2  |                        23  |
   519  |  resetPlaceHolder_1();  |         |                            |
   539  |             R = R + 2;  |      2  |                        24  |
   540  |  resetPlaceHolder_1();  |         |                            |
   560  |             R = R + 2;  |      2  |                        25  |
   561  |  resetPlaceHolder_1();  |         |                            |
   581  |             R = R + 2;  |      2  |                        26  |
   582  |  resetPlaceHolder_1();  |         |                            |
   602  |             R = R + 2;  |      2  |                        27  |
   603  |  resetPlaceHolder_1();  |         |                            |
   623  |             R = R + 2;  |      2  |                        28  |
   624  |  resetPlaceHolder_1();  |         |                            |
   644  |             R = R + 2;  |      2  |                        29  |
   645  |  resetPlaceHolder_1();  |         |                            |
   665  |             R = R + 2;  |      2  |                        30  |
   666  |  resetPlaceHolder_1();  |         |                            |
   686  |             R = R + 2;  |      2  |                        31  |
   687  |  resetPlaceHolder_1();  |         |                            |
   707  |             R = R + 2;  |      2  |                        32  |
   708  |  resetPlaceHolder_1();  |         |                            |
   728  |             R = R + 2;  |      2  |                        33  |
   729  |  resetPlaceHolder_1();  |         |                            |
   749  |             R = R + 2;  |      2  |                        34  |
   750  |  resetPlaceHolder_1();  |         |                            |
   770  |             R = R + 2;  |      2  |                        35  |
   771  |  resetPlaceHolder_1();  |         |                            |
   791  |             R = R + 2;  |      2  |                        36  |
   792  |  resetPlaceHolder_1();  |         |                            |
   812  |             R = R + 2;  |      2  |                        37  |
   813  |  resetPlaceHolder_1();  |         |                            |
   833  |             R = R + 2;  |      2  |                        38  |
   834  |  resetPlaceHolder_1();  |         |                            |
   854  |             R = R + 2;  |      2  |                        39  |
   855  |  resetPlaceHolder_1();  |         |                            |
   875  |             R = R + 2;  |      2  |                        40  |
   876  |  resetPlaceHolder_1();  |         |                            |
   896  |             R = R + 2;  |      2  |                        41  |
   897  |  resetPlaceHolder_1();  |         |                            |
   917  |             R = R + 2;  |      2  |                        42  |
   918  |  resetPlaceHolder_1();  |         |                            |
   938  |             R = R + 2;  |      2  |                        43  |
   939  |  resetPlaceHolder_1();  |         |                            |
   959  |             R = R + 2;  |      2  |                        44  |
   960  |  resetPlaceHolder_1();  |         |                            |
   980  |             R = R + 2;  |      2  |                        45  |
   981  |  resetPlaceHolder_1();  |         |                            |
  1001  |             R = R + 2;  |      2  |                        46  |
  1002  |  resetPlaceHolder_1();  |         |                            |
  1022  |             R = R + 2;  |      2  |                        47  |
  1023  |  resetPlaceHolder_1();  |         |                            |
  1043  |             R = R + 2;  |      2  |                        48  |
  1044  |  resetPlaceHolder_1();  |         |                            |
  1064  |             R = R + 2;  |      2  |                        49  |
  1065  |  resetPlaceHolder_1();  |         |                            |
  1085  |             R = R + 2;  |      2  |                        50  |
  1086  |  resetPlaceHolder_1();  |         |                            |
  1106  |             R = R + 2;  |      2  |                        51  |
  1107  |  resetPlaceHolder_1();  |         |                            |
  1127  |             R = R + 2;  |      2  |                        52  |
  1128  |  resetPlaceHolder_1();  |         |                            |
  1148  |             R = R + 2;  |      2  |                        53  |
  1149  |  resetPlaceHolder_1();  |         |                            |
  1169  |             R = R + 2;  |      2  |                        54  |
  1170  |  resetPlaceHolder_1();  |         |                            |
  1190  |             R = R + 2;  |      2  |                        55  |
  1191  |  resetPlaceHolder_1();  |         |                            |
  1211  |             R = R + 2;  |      2  |                        56  |
  1212  |  resetPlaceHolder_1();  |         |                            |
  1232  |             R = R + 2;  |      2  |                        57  |
  1233  |  resetPlaceHolder_1();  |         |                            |
  1253  |             R = R + 2;  |      2  |                        58  |
  1254  |  resetPlaceHolder_1();  |         |                            |
  1274  |             R = R + 2;  |      2  |                        59  |
  1275  |  resetPlaceHolder_1();  |         |                            |
  1295  |             R = R + 2;  |      2  |                        60  |
  1296  |  resetPlaceHolder_1();  |         |                            |
  1316  |             R = R + 2;  |      2  |                        61  |
  1317  |  resetPlaceHolder_1();  |         |                            |
  1337  |             R = R + 2;  |      2  |                        62  |
  1338  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(645, 666, 582, 120, 1275, 1233, 288, 1254, 372, 1191, 57, 78, 834, 981, 687, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 393, 1002, 792, 1086, 1170, 750, 204, 498, 1107, 540, 477, 1149, 330, 1044, 267, 162, 939, 855, 414, 1317, 1023, 876, 99, 771, 813, 351, 246, 1212, 36, 183, 603, 918, 897, 960, 1065, 624, 309, 708)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m8.712s
user	0m15.759s
sys	0m1.578s

2023-01-11 00:25:34,210 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:25:42,891 INFO     Done. Execution time: 8.681110620498657 seconds
2023-01-11 00:25:42,891 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int R = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int R = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0025-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0025-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.675s
user	0m16.694s
sys	0m2.524s

2023-01-11 00:25:42,891 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-11 00:25:42,892 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:26:19,504 INFO     Done. Execution time: 36.61204218864441 seconds
2023-01-11 00:26:19,504 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz5073841760693046910/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5073841760693046910/bin -o /tmp/qfuzz5073841760693046910/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5073841760693046910/bin
Found file /tmp/qfuzz5073841760693046910/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz5073841760693046910/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5073841760693046910/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5073841760693046910/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5073841760693046910/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5073841760693046910/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 29, exec speed = 42603 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m29 to 29 bits (average: 29.00 bits)
[1;90m        Exec timing : [0m42.6k to 42.6k us (average: 42.6k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5073841760693046910/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [19.00]
0; /tmp/qfuzz5073841760693046910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5073841760693046910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5073841760693046910/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 187, 110, 99, 153, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.606s
user	0m53.274s
sys	0m4.031s

2023-01-11 00:26:19,504 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-11 00:26:19,504 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-11 00:26:19,506 INFO     Done. Execution time: 0.0012691020965576172 seconds
2023-01-11 00:26:19,506 INFO     Output: 
2023-01-11 00:26:19,506 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-11 00:26:23,637 INFO     Done. Execution time: 4.130795240402222 seconds
2023-01-11 00:26:23,637 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |       2  |     |             |
    11  |                         int R = 0;  |         |  0  |       0  |       2  |     |             |
    12  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    15  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    17  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    50  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    52  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    56  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    57  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    85  |                     inLiteral = 0;  |         |  0  |       0  |       2  |  1  |          0  |
    89  |                         i = i + 1;  |         |  0  |       0  |       2  |  2  |          0  |
    90  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  2  |          0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [48]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {48}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    48  |  R = R + (0 - buffer);  |      0  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m4.125s
user	0m7.355s
sys	0m0.928s

2023-01-11 00:26:23,637 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:26:32,070 INFO     Done. Execution time: 8.432816982269287 seconds
2023-01-11 00:26:32,070 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
      {
        buffer = buffer + 1;
        R = R + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
      {
        buffer = buffer + 1;
        R = R + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 0)` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0026-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0026-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.427s
user	0m16.174s
sys	0m2.025s

2023-01-11 00:26:32,070 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-11 00:26:32,070 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:27:08,299 INFO     Done. Execution time: 36.2285943031311 seconds
2023-01-11 00:27:08,299 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz8519506306718512262/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8519506306718512262/bin -o /tmp/qfuzz8519506306718512262/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8519506306718512262/bin
Found file /tmp/qfuzz8519506306718512262/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz8519506306718512262/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8519506306718512262/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8519506306718512262/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8519506306718512262/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8519506306718512262/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 45536 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m45.5k to 45.5k us (average: 45.5k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8519506306718512262/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.219s
user	0m51.169s
sys	0m4.388s

2023-01-11 00:27:08,299 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-11 00:27:08,299 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-11 00:27:08,301 INFO     Done. Execution time: 0.0015227794647216797 seconds
2023-01-11 00:27:08,301 INFO     Output: 
2023-01-11 00:27:08,301 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-11 00:27:10,506 INFO     Done. Execution time: 2.2049062252044678 seconds
2023-01-11 00:27:10,506 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.199s
user	0m3.697s
sys	0m0.230s

2023-01-11 00:27:10,507 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:27:11,734 INFO     Done. Execution time: 1.2271332740783691 seconds
2023-01-11 00:27:11,734 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.221s
user	0m1.957s
sys	0m0.126s

2023-01-11 00:27:11,734 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-11 00:27:11,734 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:27:47,781 INFO     Done. Execution time: 36.04714369773865 seconds
2023-01-11 00:27:47,781 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz8487217009524683580/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8487217009524683580/bin -o /tmp/qfuzz8487217009524683580/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8487217009524683580/bin
Found file /tmp/qfuzz8487217009524683580/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz8487217009524683580/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8487217009524683580/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8487217009524683580/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8487217009524683580/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8487217009524683580/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 79741 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m79.7k to 79.7k us (average: 79.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8487217009524683580/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
1; /tmp/qfuzz8487217009524683580/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8487217009524683580/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8487217009524683580/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(152, 77, 170, 7, 170, 125, 170, 58, 4, 170, 144, 11, 118, 62, 10, 12, 170, 170, 173, 99, 170, 17, 153, 70, 14, 170)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.041s
user	0m52.431s
sys	0m4.427s

2023-01-11 00:27:47,782 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-11 00:27:47,782 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-11 00:27:47,783 INFO     Done. Execution time: 0.0016217231750488281 seconds
2023-01-11 00:27:47,784 INFO     Output: 
2023-01-11 00:27:47,784 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-11 00:27:53,168 INFO     Done. Execution time: 5.384098052978516 seconds
2023-01-11 00:27:53,168 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |      2  |   0  |
    11  |                         int R = 0;  |         |  0  |     |      2  |   0  |
    12  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    15  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    29  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    44  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.376s
user	0m8.904s
sys	0m1.437s

2023-01-11 00:27:53,168 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:28:01,599 INFO     Done. Execution time: 8.430665254592896 seconds
2023-01-11 00:28:01,599 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0027-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0027-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.424s
user	0m16.855s
sys	0m2.470s

2023-01-11 00:28:01,599 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-11 00:28:01,599 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:28:38,404 INFO     Done. Execution time: 36.80411672592163 seconds
2023-01-11 00:28:38,404 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz1746722603077855813/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1746722603077855813/bin -o /tmp/qfuzz1746722603077855813/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1746722603077855813/bin
Found file /tmp/qfuzz1746722603077855813/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz1746722603077855813/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1746722603077855813/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1746722603077855813/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1746722603077855813/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1746722603077855813/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 70398 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m70.4k to 70.4k us (average: 70.4k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1746722603077855813/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
1; /tmp/qfuzz1746722603077855813/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1746722603077855813/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1746722603077855813/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(92)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.797s
user	0m54.133s
sys	0m4.266s

2023-01-11 00:28:38,404 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-11 00:28:38,404 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-11 00:28:38,406 INFO     Done. Execution time: 0.0015270709991455078 seconds
2023-01-11 00:28:38,406 INFO     Output: 
2023-01-11 00:28:38,406 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-11 00:28:43,917 INFO     Done. Execution time: 5.511361122131348 seconds
2023-01-11 00:28:43,917 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |     |    2  |
    11  |                         int R = 0;  |         |  0  |       0  |     |    2  |
    12  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    15  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    22  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    29  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    37  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    40  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    44  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    45  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.504s
user	0m9.621s
sys	0m1.372s

2023-01-11 00:28:43,918 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:28:52,364 INFO     Done. Execution time: 8.44672679901123 seconds
2023-01-11 00:28:52,365 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0028-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0028-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.441s
user	0m16.562s
sys	0m2.280s

2023-01-11 00:28:52,365 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-11 00:28:52,365 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:29:28,672 INFO     Done. Execution time: 36.30707931518555 seconds
2023-01-11 00:29:28,672 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz4713574883922855681/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4713574883922855681/bin -o /tmp/qfuzz4713574883922855681/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4713574883922855681/bin
Found file /tmp/qfuzz4713574883922855681/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz4713574883922855681/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4713574883922855681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4713574883922855681/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4713574883922855681/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4713574883922855681/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 22, exec speed = 47037 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m47.0k to 47.0k us (average: 47.0k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4713574883922855681/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [17.00]
0; /tmp/qfuzz4713574883922855681/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4713574883922855681/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4713574883922855681/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 5, 69, 5, 122, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.300s
user	0m51.934s
sys	0m4.178s

2023-01-11 00:29:28,672 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-11 00:29:28,672 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-11 00:29:28,674 INFO     Done. Execution time: 0.0012881755828857422 seconds
2023-01-11 00:29:28,674 INFO     Output: 
2023-01-11 00:29:28,674 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-11 00:29:31,527 INFO     Done. Execution time: 2.852618455886841 seconds
2023-01-11 00:29:31,527 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 22):
                                                  
 Index  |  Commands  |  Costs  |  i  |  pattern  |
--------------------------------------------------
    21  |   return;  |         |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.847s
user	0m5.514s
sys	0m0.230s

2023-01-11 00:29:31,527 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:29:33,155 INFO     Done. Execution time: 1.6283011436462402 seconds
2023-01-11 00:29:33,155 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java:5: error: cannot find symbol
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
                      ^
  symbol:   variable R
  location: class ParseToken
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java:5: error: cannot find symbol
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
                                                   ^
  symbol:   variable R
  location: class ParseToken
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java:6: error: cannot find symbol
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
                      ^
  symbol:   variable R
  location: class ParseToken
//root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java:6: error: cannot find symbol
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
                                             ^
  symbol:   variable R
  location: class ParseToken
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.621s
user	0m2.879s
sys	0m0.129s

2023-01-11 00:29:33,155 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-11 00:29:33,155 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:30:09,510 INFO     Done. Execution time: 36.354374408721924 seconds
2023-01-11 00:30:09,510 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz2523090917441441804/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2523090917441441804/bin -o /tmp/qfuzz2523090917441441804/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2523090917441441804/bin
Found file /tmp/qfuzz2523090917441441804/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz2523090917441441804/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2523090917441441804/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2523090917441441804/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2523090917441441804/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2523090917441441804/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 53670 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m53.7k to 53.7k us (average: 53.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2523090917441441804/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 2.00; [13.00,15.00,21.00]
0; /tmp/qfuzz2523090917441441804/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 2.00; [13.00,15.00,21.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2523090917441441804/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2523090917441441804/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.349s
user	0m48.789s
sys	0m6.017s

2023-01-11 00:30:09,510 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-11 00:30:09,510 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-11 00:30:09,512 INFO     Done. Execution time: 0.0014920234680175781 seconds
2023-01-11 00:30:09,512 INFO     Output: 
2023-01-11 00:30:09,512 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-11 00:30:11,883 INFO     Done. Execution time: 2.371058225631714 seconds
2023-01-11 00:30:11,884 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.364s
user	0m4.190s
sys	0m0.238s

2023-01-11 00:30:11,884 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:30:13,010 INFO     Done. Execution time: 1.1258800029754639 seconds
2023-01-11 00:30:13,010 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.120s
user	0m1.878s
sys	0m0.139s

2023-01-11 00:30:13,010 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-11 00:30:13,010 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:30:49,671 INFO     Done. Execution time: 36.661396741867065 seconds
2023-01-11 00:30:49,672 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz1258741017281330700/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1258741017281330700/bin -o /tmp/qfuzz1258741017281330700/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1258741017281330700/bin
Found file /tmp/qfuzz1258741017281330700/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz1258741017281330700/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1258741017281330700/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1258741017281330700/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1258741017281330700/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1258741017281330700/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 59006 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m59.0k to 59.0k us (average: 59.0k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1258741017281330700/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
0; /tmp/qfuzz1258741017281330700/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1258741017281330700/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1258741017281330700/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(182)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.655s
user	0m52.129s
sys	0m4.383s

2023-01-11 00:30:49,672 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-11 00:30:49,672 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-11 00:30:49,673 INFO     Done. Execution time: 0.001438140869140625 seconds
2023-01-11 00:30:49,674 INFO     Output: 
2023-01-11 00:30:49,674 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-11 00:30:55,717 INFO     Done. Execution time: 6.042828321456909 seconds
2023-01-11 00:30:55,717 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |   0  |       2  |
    11  |                         int R = 0;  |         |  0  |     |   0  |       2  |
    12  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    15  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    29  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    44  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m6.036s
user	0m10.475s
sys	0m1.710s

2023-01-11 00:30:55,717 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:31:04,487 INFO     Done. Execution time: 8.770055532455444 seconds
2023-01-11 00:31:04,487 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0030-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0030-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.764s
user	0m17.589s
sys	0m2.592s

2023-01-11 00:31:04,487 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-11 00:31:04,487 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:31:40,816 INFO     Done. Execution time: 36.32815504074097 seconds
2023-01-11 00:31:40,816 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz8805683116245433982/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8805683116245433982/bin -o /tmp/qfuzz8805683116245433982/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8805683116245433982/bin
Found file /tmp/qfuzz8805683116245433982/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz8805683116245433982/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8805683116245433982/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8805683116245433982/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8805683116245433982/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8805683116245433982/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 69292 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m69.3k to 69.3k us (average: 69.3k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8805683116245433982/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
0; /tmp/qfuzz8805683116245433982/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8805683116245433982/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8805683116245433982/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 178, 161, 100, 27, 23, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.322s
user	0m52.556s
sys	0m3.808s

2023-01-11 00:31:40,816 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-11 00:31:40,816 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-11 00:31:40,817 INFO     Done. Execution time: 0.0012705326080322266 seconds
2023-01-11 00:31:40,818 INFO     Output: 
2023-01-11 00:31:40,818 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-11 00:31:45,497 INFO     Done. Execution time: 4.678923845291138 seconds
2023-01-11 00:31:45,497 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |     |    2  |
    11  |                         int R = 0;  |         |  0  |       0  |     |    2  |
    12  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    15  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    22  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    29  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.672s
user	0m8.269s
sys	0m0.791s

2023-01-11 00:31:45,497 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:31:52,716 INFO     Done. Execution time: 7.218948125839233 seconds
2023-01-11 00:31:52,716 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0031-transparentAmortize-60s-mostPrecise/lang3-raw-0111-0031-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.211s
user	0m14.267s
sys	0m2.020s

2023-01-11 00:31:52,716 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-11 00:31:52,716 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:32:28,844 INFO     Done. Execution time: 36.12728786468506 seconds
2023-01-11 00:32:28,844 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz3632887393561955065/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3632887393561955065/bin -o /tmp/qfuzz3632887393561955065/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3632887393561955065/bin
Found file /tmp/qfuzz3632887393561955065/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz3632887393561955065/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3632887393561955065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3632887393561955065/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3632887393561955065/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3632887393561955065/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 79815 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m79.8k to 79.8k us (average: 79.8k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 3.00; [23.00,26.00]
1; /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [26.00]
2; /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 2; 15.00; [17.00,32.00]
2; /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 9.00; [17.00,26.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 101, 168, 135, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 121, 4, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3632887393561955065/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 161, 193, 135, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [101,168,135,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [121,4,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [161,193,135,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.120s
user	0m51.842s
sys	0m4.510s

2023-01-11 00:32:28,844 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-11 00:32:28,844 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-11 00:32:28,846 INFO     Done. Execution time: 0.0015425682067871094 seconds
2023-01-11 00:32:28,846 INFO     Output: 
2023-01-11 00:32:28,846 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-11 00:32:33,627 INFO     Done. Execution time: 4.780885696411133 seconds
2023-01-11 00:32:33,627 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [101,168,135,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [121,4,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [161,193,135,50])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 72):
                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------------
    13  |                         int R = 0;  |         |  0  |          |  [101,168,135,67,50]  |     |    2  |             |
    14  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [101,168,135,67,50]  |     |    2  |             |
    15  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [101,168,135,67,50]  |     |    2  |             |
    17  |                 int strDigits = 0;  |         |  0  |          |  [101,168,135,67,50]  |     |    2  |          0  |
    19  |                    int choice = 0;  |         |  0  |       0  |  [101,168,135,67,50]  |     |    2  |          0  |
    21  |                         int i = 0;  |         |  0  |       0  |  [101,168,135,67,50]  |  0  |    2  |          0  |
    27  |  choice = arrayRead(choices, i)...  |         |  0  |     101  |  [101,168,135,67,50]  |  0  |    2  |          0  |
    40  |                         i = i + 1;  |         |  0  |     101  |  [101,168,135,67,50]  |  1  |    2  |          0  |
    41  |              resetPlaceHolder_1();  |         |  0  |     101  |  [101,168,135,67,50]  |  1  |    2  |          0  |
    47  |  choice = arrayRead(choices, i)...  |         |  0  |     168  |  [101,168,135,67,50]  |  1  |    2  |          0  |
    60  |         strDigits = strDigits + 1;  |         |  0  |     168  |  [101,168,135,67,50]  |  1  |    2  |          1  |
    63  |                         R = R + 1;  |      1  |  1  |     168  |  [101,168,135,67,50]  |  1  |    2  |          1  |
    67  |                         i = i + 1;  |         |  1  |     168  |  [101,168,135,67,50]  |  2  |    2  |          1  |
    68  |              resetPlaceHolder_1();  |         |  1  |     168  |  [101,168,135,67,50]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [63]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [63]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [63]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [63]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {63}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    41  |  resetPlaceHolder_1();  |         |                            |
    63  |             R = R + 1;  |      1  |                         0  |
    68  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m4.774s
user	0m8.496s
sys	0m1.092s

2023-01-11 00:32:33,627 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:32:59,129 INFO     Done. Execution time: 25.50145173072815 seconds
2023-01-11 00:32:59,129 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun choices () Int)
(declare-fun str () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun R () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> choices 0))
(assert (> str 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 choices))) (= D0p 0))))
  (and (<= (+ R) (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 choices))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun str () Int    1)  (define-fun choices () Int    16)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    7))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `23.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0032-transparentAmortize-60s-mostPrecise/stringutils-raw-0111-0032-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m25.495s
user	0m47.505s
sys	0m4.102s

2023-01-11 00:32:59,129 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-11 00:32:59,129 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:33:35,553 INFO     Done. Execution time: 36.42360305786133 seconds
2023-01-11 00:33:35,553 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz7571736056292687586/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7571736056292687586/bin -o /tmp/qfuzz7571736056292687586/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7571736056292687586/bin
Found file /tmp/qfuzz7571736056292687586/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz7571736056292687586/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7571736056292687586/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7571736056292687586/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7571736056292687586/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7571736056292687586/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 41755 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m41.8k to 41.8k us (average: 41.8k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7571736056292687586/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
0; /tmp/qfuzz7571736056292687586/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7571736056292687586/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7571736056292687586/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [188,188,188,188,188], 188, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.416s
user	0m51.742s
sys	0m4.283s

2023-01-11 00:33:35,553 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-11 00:33:35,553 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-11 00:33:35,555 INFO     Done. Execution time: 0.0012402534484863281 seconds
2023-01-11 00:33:35,555 INFO     Output: 
2023-01-11 00:33:35,555 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-11 00:33:38,831 INFO     Done. Execution time: 3.2765603065490723 seconds
2023-01-11 00:33:38,832 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([188,188,188,188,188], 188, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 47):
                                                                                      
 Index  |  Commands  |  Costs  |          array          |  endIndex  |  startIndex  |
--------------------------------------------------------------------------------------
    46  |   return;  |         |  [188,188,188,188,188]  |         2  |         188  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m3.271s
user	0m6.340s
sys	0m0.313s

2023-01-11 00:33:38,832 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:33:40,547 INFO     Done. Execution time: 1.7153029441833496 seconds
2023-01-11 00:33:40,547 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:7: error: cannot find symbol
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
                      ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:7: error: cannot find symbol
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
                                                                 ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:8: error: cannot find symbol
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
                      ^
  symbol:   variable R
  location: class Join
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java:8: error: cannot find symbol
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
                                               ^
  symbol:   variable R
  location: class Join
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.710s
user	0m3.034s
sys	0m0.166s

2023-01-11 00:33:40,547 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-11 00:33:40,547 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:34:17,976 INFO     Done. Execution time: 37.428658962249756 seconds
2023-01-11 00:34:17,976 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz1896626390332100146/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1896626390332100146/bin -o /tmp/qfuzz1896626390332100146/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1896626390332100146/bin
Found file /tmp/qfuzz1896626390332100146/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz1896626390332100146/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1896626390332100146/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1896626390332100146/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1896626390332100146/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1896626390332100146/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 48, exec speed = 233191 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m48 to 48 bits (average: 48.00 bits)
[1;90m        Exec timing : [0m233k to 233k us (average: 233k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 63.00; [14.00,77.00,145.00,231.00,317.00,396.00]
3; /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 5; 5.00; [14.00,19.00,30.00,249.00,263.00]
5; /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 4; 3.00; [11.00,14.00,280.00,353.00]
17; /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 3.00; [11.00,14.00,140.00]
20; /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 6; 45.00; [14.00,79.00,225.00,303.00,351.00,396.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 119, 4, 4, 126, 39, 4, 126, 39)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(129)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1896626390332100146/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 107, 146, 170, 34, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,119,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [129]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,107,146,170,34]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m37.420s
user	0m30.376s
sys	0m16.835s

2023-01-11 00:34:17,976 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-11 00:34:17,977 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-11 00:34:17,978 INFO     Done. Execution time: 0.0012967586517333984 seconds
2023-01-11 00:34:17,978 INFO     Output: 
2023-01-11 00:34:17,978 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-11 00:34:28,339 INFO     Done. Execution time: 10.36034893989563 seconds
2023-01-11 00:34:28,339 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,119,4,4,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([129])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,107,146,170,34])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 97):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |      objects      |
-----------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |  [4,119,4,4,126]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [4,119,4,4,126]  |
    11  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [4,119,4,4,126]  |
    13  |                         int i = 0;  |         |    0  |         |  0  |  [4,119,4,4,126]  |
    15  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [4,119,4,4,126]  |
    18  |     chunk = arrayRead(objects, i);  |         |    0  |      4  |  0  |  [4,119,4,4,126]  |
    21  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  [4,119,4,4,126]  |
    25  |                         i = i + 1;  |         |    4  |      4  |  1  |  [4,119,4,4,126]  |
    31  |                         R = R + 1;  |      1  |    5  |      4  |  1  |  [4,119,4,4,126]  |
    34  |     chunk = arrayRead(objects, i);  |         |    5  |    119  |  1  |  [4,119,4,4,126]  |
    37  |                     R = R + chunk;  |    119  |  124  |    119  |  1  |  [4,119,4,4,126]  |
    41  |                         i = i + 1;  |         |  124  |    119  |  2  |  [4,119,4,4,126]  |
    42  |              resetPlaceHolder_1();  |         |  124  |    119  |  2  |  [4,119,4,4,126]  |
    48  |                         R = R + 1;  |      1  |  125  |    119  |  2  |  [4,119,4,4,126]  |
    51  |     chunk = arrayRead(objects, i);  |         |  125  |      4  |  2  |  [4,119,4,4,126]  |
    54  |                     R = R + chunk;  |      4  |  129  |      4  |  2  |  [4,119,4,4,126]  |
    58  |                         i = i + 1;  |         |  129  |      4  |  3  |  [4,119,4,4,126]  |
    59  |              resetPlaceHolder_1();  |         |  129  |      4  |  3  |  [4,119,4,4,126]  |
    65  |                         R = R + 1;  |      1  |  130  |      4  |  3  |  [4,119,4,4,126]  |
    68  |     chunk = arrayRead(objects, i);  |         |  130  |      4  |  3  |  [4,119,4,4,126]  |
    71  |                     R = R + chunk;  |      4  |  134  |      4  |  3  |  [4,119,4,4,126]  |
    75  |                         i = i + 1;  |         |  134  |      4  |  4  |  [4,119,4,4,126]  |
    76  |              resetPlaceHolder_1();  |         |  134  |      4  |  4  |  [4,119,4,4,126]  |
    82  |                         R = R + 1;  |      1  |  135  |      4  |  4  |  [4,119,4,4,126]  |
    85  |     chunk = arrayRead(objects, i);  |         |  135  |    126  |  4  |  [4,119,4,4,126]  |
    88  |                     R = R + chunk;  |    126  |  261  |    126  |  4  |  [4,119,4,4,126]  |
    92  |                         i = i + 1;  |         |  261  |    126  |  5  |  [4,119,4,4,126]  |
    93  |              resetPlaceHolder_1();  |         |  261  |    126  |  5  |  [4,119,4,4,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71} because there exists a longer and subsuming segment {37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {88} because there exists a longer and subsuming segment {21,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21} because there exists a longer and subsuming segment {21,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {31}, {48}, {65}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |      4  |                            |
    31  |             R = R + 1;  |      1  |                         0  |
    37  |         R = R + chunk;  |    119  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    54  |         R = R + chunk;  |      4  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         2  |
    71  |         R = R + chunk;  |      4  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         3  |
    88  |         R = R + chunk;  |    126  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,54} because there exists a longer and subsuming segment {37,54,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,71} because there exists a longer and subsuming segment {21,37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,88} because there exists a longer and subsuming segment {37,54,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,71} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,71} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,37} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71,88} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {37,54,71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |      4  |                            |
    31  |             R = R + 1;  |      1  |                            |
    37  |         R = R + chunk;  |    119  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |             R = R + 1;  |      1  |                            |
    54  |         R = R + chunk;  |      4  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    71  |         R = R + chunk;  |      4  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                            |
    88  |         R = R + chunk;  |    126  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31}, {48}, {65}, {82}
GroupID(1): {37,54,71}
GroupID(2): {21,88}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    21  |         R = R + chunk;  |      4  |                            |                            |                         0  |
    31  |             R = R + 1;  |      1  |                         0  |                            |                            |
    37  |         R = R + chunk;  |    119  |                            |                         0  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    48  |             R = R + 1;  |      1  |                         1  |                            |                            |
    54  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         2  |                            |                            |
    71  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    82  |             R = R + 1;  |      1  |                         3  |                            |                            |
    88  |         R = R + chunk;  |    126  |                            |                            |                         0  |
    93  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 59, 76)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
use R 1 -> R0 = R0 + 1;
use R chunk -> if ((i < 3) || (i == 3))
{
  R1 = R1 + chunk;
}
else
{
  R2 = R2 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m10.354s
user	0m18.591s
sys	0m3.387s

2023-01-11 00:34:28,339 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:34:59,981 INFO     Done. Execution time: 31.641632556915283 seconds
2023-01-11 00:34:59,981 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (objects + objects)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 objects)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun objects () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun R () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D2p (+ 0 (* 1 1 objects))) (= D2p 0)))
      (a!5 (or (<= D1p (+ 0 (* 1 1 objects))) (= D1p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1))) (= D0p 0))))
  (and (<= (+ R) (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       a!4
       (<= D1p 0)
       a!5
       (<= D0p (+ 0 (* 1 1)))
       a!6)))
(assert (let ((a!1 (or (<= D2 (+ 0 (* 1 1 objects))) (= D2 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 objects))) (= D1 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 objects)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (not (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    1)  (define-fun D1 () Int    3)  (define-fun D2 () Int    3)  (define-fun objects () Int    3)  (define-fun C2 () Int    0)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    7))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `29.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0034-transparentAmortize-60s-mostPrecise/stringutils-raw-0111-0034-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m31.636s
user	1m36.692s
sys	0m7.803s

2023-01-11 00:34:59,981 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-11 00:34:59,981 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:35:36,975 INFO     Done. Execution time: 36.99383616447449 seconds
2023-01-11 00:35:36,975 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz3216869373794411168/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3216869373794411168/bin -o /tmp/qfuzz3216869373794411168/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3216869373794411168/bin
Found file /tmp/qfuzz3216869373794411168/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz3216869373794411168/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3216869373794411168/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3216869373794411168/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3216869373794411168/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3216869373794411168/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 48, exec speed = 50182 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m48 to 48 bits (average: 48.00 bits)
[1;90m        Exec timing : [0m50.2k to 50.2k us (average: 50.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 33.00; [77.00,112.00,145.00,231.00,317.00,396.00]
2; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 6; 18.00; [77.00,191.00,319.00,337.00,374.00,396.00]
2; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 6; 15.00; [29.00,49.00,94.00,296.00,311.00,329.00]
3; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 6; 20.00; [25.00,45.00,109.00,133.00,316.00,396.00]
4; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 6; 40.00; [29.00,69.00,112.00,231.00,317.00,396.00]
5; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 6; 7.00; [77.00,145.00,224.00,231.00,317.00,396.00]
8; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 6; 41.00; [19.00,81.00,122.00,231.00,275.00,396.00]
15; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 6; 13.00; [64.00,77.00,112.00,145.00,159.00,317.00]
20; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 6; 43.00; [77.00,145.00,231.00,274.00,317.00,392.00]
27; /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta; 6; 48.00; [67.00,126.00,193.00,269.00,317.00,396.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 29, 153, 9, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 4, 132, 35, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 110, 33, 153, 67, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 91, 28, 153, 129, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 90, 33, 163, 154, 181, 163, 163, 163, 163, 163, 163, 181, 104, 163, 163, 101, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 159, 9, 19, 150, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 7, 17, 49, 61, 152, 82, 45, 49, 49, 80, 148, 131, 49, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 106)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3216869373794411168/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(21, 33, 153, 74, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,29,153,9], 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,4,132,35], 55
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [185,110,33,153,67], 131
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,91,28,153,129], 57
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,90,33,163,154], 181
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,159,9,19,150], 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,7,17,49,61], 152
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 106
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [21,33,153,74,67], 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.987s
user	0m52.390s
sys	0m4.767s

2023-01-11 00:35:36,975 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-11 00:35:36,975 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-11 00:35:36,978 INFO     Done. Execution time: 0.0019278526306152344 seconds
2023-01-11 00:35:36,978 INFO     Output: 
2023-01-11 00:35:36,978 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-11 00:35:45,994 INFO     Done. Execution time: 9.016229629516602 seconds
2023-01-11 00:35:45,994 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,29,153,9], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([185,110,33,153,67], 131)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,4,132,35], 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,91,28,153,129], 57)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,90,33,163,154], 181)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,159,9,19,150], 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,7,17,49,61], 152)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 106)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([21,33,153,74,67], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 97):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |  separator  |
----------------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |  [187,110,29,153,9]  |         50  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,110,29,153,9]  |         50  |
    11  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,110,29,153,9]  |         50  |
    13  |                         int i = 0;  |         |    0  |         |  0  |  [187,110,29,153,9]  |         50  |
    15  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,110,29,153,9]  |         50  |
    18  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,110,29,153,9]  |         50  |
    21  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,110,29,153,9]  |         50  |
    25  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,110,29,153,9]  |         50  |
    31  |                 R = R + separator;  |     50  |  237  |    187  |  1  |  [187,110,29,153,9]  |         50  |
    34  |     chunk = arrayRead(objects, i);  |         |  237  |    110  |  1  |  [187,110,29,153,9]  |         50  |
    37  |                     R = R + chunk;  |    110  |  347  |    110  |  1  |  [187,110,29,153,9]  |         50  |
    41  |                         i = i + 1;  |         |  347  |    110  |  2  |  [187,110,29,153,9]  |         50  |
    42  |              resetPlaceHolder_1();  |         |  347  |    110  |  2  |  [187,110,29,153,9]  |         50  |
    48  |                 R = R + separator;  |     50  |  397  |    110  |  2  |  [187,110,29,153,9]  |         50  |
    51  |     chunk = arrayRead(objects, i);  |         |  397  |     29  |  2  |  [187,110,29,153,9]  |         50  |
    54  |                     R = R + chunk;  |     29  |  426  |     29  |  2  |  [187,110,29,153,9]  |         50  |
    58  |                         i = i + 1;  |         |  426  |     29  |  3  |  [187,110,29,153,9]  |         50  |
    59  |              resetPlaceHolder_1();  |         |  426  |     29  |  3  |  [187,110,29,153,9]  |         50  |
    65  |                 R = R + separator;  |     50  |  476  |     29  |  3  |  [187,110,29,153,9]  |         50  |
    68  |     chunk = arrayRead(objects, i);  |         |  476  |    153  |  3  |  [187,110,29,153,9]  |         50  |
    71  |                     R = R + chunk;  |    153  |  629  |    153  |  3  |  [187,110,29,153,9]  |         50  |
    75  |                         i = i + 1;  |         |  629  |    153  |  4  |  [187,110,29,153,9]  |         50  |
    76  |              resetPlaceHolder_1();  |         |  629  |    153  |  4  |  [187,110,29,153,9]  |         50  |
    82  |                 R = R + separator;  |     50  |  679  |    153  |  4  |  [187,110,29,153,9]  |         50  |
    85  |     chunk = arrayRead(objects, i);  |         |  679  |      9  |  4  |  [187,110,29,153,9]  |         50  |
    88  |                     R = R + chunk;  |      9  |  688  |      9  |  4  |  [187,110,29,153,9]  |         50  |
    92  |                         i = i + 1;  |         |  688  |      9  |  5  |  [187,110,29,153,9]  |         50  |
    93  |              resetPlaceHolder_1();  |         |  688  |      9  |  5  |  [187,110,29,153,9]  |         50  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71} because there exists a longer and subsuming segment {71,82} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {88} because there exists a longer and subsuming segment {65,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21} because there exists a longer and subsuming segment {21,48} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {31}, {48}, {65}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |
    31  |     R = R + separator;  |     50  |                         0  |
    37  |         R = R + chunk;  |    110  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |     R = R + separator;  |     50  |                         1  |
    54  |         R = R + chunk;  |     29  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |     R = R + separator;  |     50  |                         2  |
    71  |         R = R + chunk;  |    153  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |     R = R + separator;  |     50  |                         3  |
    88  |         R = R + chunk;  |      9  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,71} because there exists a longer and subsuming segment {21,37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,71} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,71} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,37} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31}, {48}, {65}, {82}
GroupID(1): {21,37,54,71,88}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |                         0  |
    31  |     R = R + separator;  |     50  |                         0  |                            |
    37  |         R = R + chunk;  |    110  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |     R = R + separator;  |     50  |                         1  |                            |
    54  |         R = R + chunk;  |     29  |                            |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |     R = R + separator;  |     50  |                         2  |                            |
    71  |         R = R + chunk;  |    153  |                            |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    82  |     R = R + separator;  |     50  |                         3  |                            |
    88  |         R = R + chunk;  |      9  |                            |                         0  |
    93  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 59, 76)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m9.008s
user	0m16.415s
sys	0m2.821s

2023-01-11 00:35:45,994 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:35:54,185 INFO     Done. Execution time: 8.19093656539917 seconds
2023-01-11 00:35:54,186 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun R () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= (+ R) (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun C1 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1 () Int    0)  (define-fun D0 () Int    6)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    6))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0035-transparentAmortize-60s-mostPrecise/stringutils-raw-0111-0035-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.185s
user	0m15.304s
sys	0m1.800s

2023-01-11 00:35:54,186 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-11 00:35:54,186 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:36:30,500 INFO     Done. Execution time: 36.31389284133911 seconds
2023-01-11 00:36:30,500 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz9066183548188048167/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9066183548188048167/bin -o /tmp/qfuzz9066183548188048167/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9066183548188048167/bin
Found file /tmp/qfuzz9066183548188048167/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz9066183548188048167/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9066183548188048167/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9066183548188048167/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9066183548188048167/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9066183548188048167/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 121034 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov,+partition,+delta; 3; 77.00; [62.00,139.00,252.00]
2; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 89.00; [123.00,212.00,332.00]
3; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 17.00; [57.00,74.00,248.00]
5; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 3; 96.00; [104.00,200.00,399.00]
10; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 3; 105.00; [134.00,294.00,399.00]
12; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 3; 44.00; [40.00,84.00,353.00]
13; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 3; 131.00; [18.00,287.00,418.00]
18; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 3; 7.00; [18.00,28.00,35.00]
18; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta; 3; 169.00; [28.00,203.00,372.00]
19; /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4; 3; 85.00; [84.00,314.00,399.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov,+partition,+delta
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 52, 117, 117, 132, 4, 27, 117, 117, 117, 117, 104, 139, 162, 111, 74, 65, 117, 117, 114, 117, 117, 117, 160, 70, 132, 117, 117, 117, 117, 123, 105, 133, 184, 87, 111, 96, 117, 117, 153, 117, 117, 117, 117, 124, 117, 117, 117, 177, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 143, 157, 143, 143, 143, 102, 166, 102, 166, 31, 107)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 43, 53, 50, 12, 96, 5, 10, 40, 8, 110, 33, 145, 106, 138, 186, 20, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 104, 58, 57, 87, 70, 4, 143, 128, 161, 44, 153, 50, 162, 109, 40, 158)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(131, 4, 200, 75, 75, 137, 5, 13, 75, 55, 75, 116, 88, 75, 135, 75, 5, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 86, 5, 22, 157, 138, 182, 89, 10, 182, 100, 10, 182)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 54, 115, 187, 34, 70, 33, 164, 48, 55, 70, 33, 16, 18, 5, 43, 170, 188, 16, 54, 114, 73, 57, 14, 170, 153, 82, 26, 192, 170, 48, 16, 54, 111, 4, 115, 184, 133, 67, 124, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(164, 87, 33, 12, 69, 85, 16, 30, 54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 178, 5, 5, 5, 5, 5, 121, 161, 14, 5, 5, 5, 5, 5, 5, 63, 5, 45, 4, 62, 5, 5, 5, 62, 62, 5, 160, 5, 63, 5, 5, 5, 5, 5, 5, 5, 5, 5, 14, 5, 5, 5, 5, 63, 101, 195, 5, 5, 5, 62, 62, 5, 5, 5, 5, 5, 5, 119, 52, 21, 4, 125, 94, 5, 94, 5, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9066183548188048167/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 169, 56, 172, 153, 106, 50, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,52,117,117,132], 4, 27, 117
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,143,157,143,143], 143, 102, 166
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,43,53,50], 12, 96, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,104,58,57,87], 70, 4, 143
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [131,4,200,75,75], 137, 5, 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,86,5,22,157], 138, 182, 89
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [16,54,115,187,34], 70, 33, 164
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [164,87,33,12,69], 85, 16, 30
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,178,5,5,5], 5, 5, 121
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,169,56], 172, 153, 106
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.307s
user	0m51.633s
sys	0m4.760s

2023-01-11 00:36:30,500 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-11 00:36:30,500 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-11 00:36:30,502 INFO     Done. Execution time: 0.0017213821411132812 seconds
2023-01-11 00:36:30,502 INFO     Output: 
2023-01-11 00:36:30,502 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-11 00:36:37,470 INFO     Done. Execution time: 6.967860221862793 seconds
2023-01-11 00:36:37,470 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57,52,117,117,132], 4, 27, 117)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,143,157,143,143], 143, 102, 166)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,43,53,50], 12, 96, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,104,58,57,87], 70, 4, 143)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([131,4,200,75,75], 137, 5, 13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,86,5,22,157], 138, 182, 89)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([16,54,115,187,34], 70, 33, 164)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([164,87,33,12,69], 85, 16, 30)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,178,5,5,5], 5, 5, 121)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,169,56], 172, 153, 106)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 93):
                                                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text          |
--------------------------------------------------------------------------------------------------------------------------------------------------
    33  |                         int R = 0;  |         |    0  |         |     |  117  |           27  |             4  |  [57,52,117,117,132]  |
    34  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  117  |           27  |             4  |  [57,52,117,117,132]  |
    35  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  117  |           27  |             4  |  [57,52,117,117,132]  |
    37  |                     int chunk = 0;  |         |    0  |      0  |     |  117  |           27  |             4  |  [57,52,117,117,132]  |
    39  |                         int i = 0;  |         |    0  |      0  |  0  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    47  |        chunk = arrayRead(text, i);  |         |    0  |     57  |  0  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    50  |                     R = R + chunk;  |     57  |   57  |     57  |  0  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    53  |               R = R + replacement;  |     27  |   84  |     57  |  0  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    58  |  chunk = arrayRead(text, (i + 1...  |         |   84  |     52  |  0  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    62  |                         i = i + 2;  |         |   84  |     52  |  2  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    63  |              resetPlaceHolder_1();  |         |   84  |     52  |  2  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    71  |        chunk = arrayRead(text, i);  |         |   84  |    117  |  2  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    74  |                     R = R + chunk;  |    117  |  201  |    117  |  2  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    77  |               R = R + replacement;  |     27  |  228  |    117  |  2  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    82  |  chunk = arrayRead(text, (i + 1...  |         |  228  |    117  |  2  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    86  |                         i = i + 2;  |         |  228  |    117  |  4  |  117  |           27  |             4  |  [57,52,117,117,132]  |
    87  |              resetPlaceHolder_1();  |         |  228  |    117  |  4  |  117  |           27  |             4  |  [57,52,117,117,132]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [50, 53, 74, 77]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50} because there exists a longer and subsuming segment {50,74} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {53}, {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |         R = R + chunk;  |     57  |                            |
    53  |   R = R + replacement;  |     27  |                         0  |
    63  |  resetPlaceHolder_1();  |         |                            |
    74  |         R = R + chunk;  |    117  |                            |
    77  |   R = R + replacement;  |     27  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 74]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 74]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [50, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {53}, {77}
GroupID(1): {50,74}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |         R = R + chunk;  |     57  |                            |                         0  |
    53  |   R = R + replacement;  |     27  |                         0  |                            |
    63  |  resetPlaceHolder_1();  |         |                            |                            |
    74  |         R = R + chunk;  |    117  |                            |                         0  |
    77  |   R = R + replacement;  |     27  |                         1  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(63)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.961s
user	0m12.444s
sys	0m2.133s

2023-01-11 00:36:37,471 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:38:09,760 INFO     Done. Execution time: 92.28979754447937 seconds
2023-01-11 00:38:09,761 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `90.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0036-transparentAmortize-60s-mostPrecise/stringutils-raw-0111-0036-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m32.284s
user	3m26.838s
sys	0m19.058s

2023-01-11 00:38:09,761 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-11 00:38:09,761 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:38:45,852 INFO     Done. Execution time: 36.09071969985962 seconds
2023-01-11 00:38:45,852 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz6287773243654915663/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6287773243654915663/bin -o /tmp/qfuzz6287773243654915663/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6287773243654915663/bin
Found file /tmp/qfuzz6287773243654915663/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz6287773243654915663/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6287773243654915663/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6287773243654915663/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6287773243654915663/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6287773243654915663/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 48880 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m48.9k to 48.9k us (average: 48.9k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6287773243654915663/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.085s
user	0m52.181s
sys	0m4.287s

2023-01-11 00:38:45,852 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-11 00:38:45,852 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-11 00:38:45,853 INFO     Done. Execution time: 0.0012993812561035156 seconds
2023-01-11 00:38:45,853 INFO     Output: 
2023-01-11 00:38:45,853 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-11 00:38:47,980 INFO     Done. Execution time: 2.1263701915740967 seconds
2023-01-11 00:38:47,980 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.121s
user	0m3.673s
sys	0m0.203s

2023-01-11 00:38:47,980 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:38:49,098 INFO     Done. Execution time: 1.1175291538238525 seconds
2023-01-11 00:38:49,098 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.112s
user	0m1.774s
sys	0m0.123s

2023-01-11 00:38:49,098 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-11 00:38:49,098 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:39:25,533 INFO     Done. Execution time: 36.43518590927124 seconds
2023-01-11 00:39:25,533 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz4778450153997211852/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4778450153997211852/bin -o /tmp/qfuzz4778450153997211852/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4778450153997211852/bin
Found file /tmp/qfuzz4778450153997211852/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz4778450153997211852/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4778450153997211852/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4778450153997211852/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4778450153997211852/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4778450153997211852/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 66196 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m66.2k to 66.2k us (average: 66.2k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]
1; /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [39.00]
8; /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8; 1; 0.00; [175.00]
13; /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:8; 1; 0.00; [307.00]
17; /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000005,src:000000+000002,op:splice,rep:8; 1; 0.00; [393.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8
/tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:8
/tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000005,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(103, 197, 66, 5, 21, 180, 125, 4, 122, 164, 96, 178, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 33, 182, 4, 4, 4, 24, 68, 170, 32, 63, 4, 70, 114, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(72, 110, 9, 4, 4, 4, 4, 131, 180, 53, 200, 100, 24, 68, 170, 14, 63, 40, 4, 4, 4, 4, 24, 68, 170, 32, 190, 180, 125, 200, 81, 38, 70, 114, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000004,src:000000+000003,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(138, 56, 9, 4, 4, 4, 4, 131, 180, 53, 200, 100, 24, 68, 170, 14, 63, 40, 4, 4, 4, 61, 24, 44, 144, 170, 31, 191, 66, 42, 25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4778450153997211852/fuzzer-out/afl/queue/id:000005,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(181, 33, 119, 171, 63, 4, 4, 131, 4, 4, 131, 4, 4, 63, 81, 4, 11, 131, 4, 5, 200, 4, 5, 200)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [103,197,66,5,21], 180, 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,33,182,4,4], 4, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [72,110,9,4,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [138,56,9,4,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [181,33,119,171,63], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.429s
user	0m52.385s
sys	0m4.424s

2023-01-11 00:39:25,534 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-11 00:39:25,534 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-11 00:39:25,536 INFO     Done. Execution time: 0.0016968250274658203 seconds
2023-01-11 00:39:25,536 INFO     Output: 
2023-01-11 00:39:25,536 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-11 00:39:28,737 INFO     Done. Execution time: 3.2006895542144775 seconds
2023-01-11 00:39:28,737 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([103,197,66,5,21], 180, 125)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([72,110,9,4,4], 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,33,182,4,4], 4, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([138,56,9,4,4], 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([181,33,119,171,63], 4, 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 27):
                                                                              
 Index  |  Commands  |  Costs  |  isSeparator  |  max  |         str         |
------------------------------------------------------------------------------
    26  |   return;  |         |          180  |  125  |  [103,197,66,5,21]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m3.192s
user	0m6.237s
sys	0m0.295s

2023-01-11 00:39:28,737 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:39:30,525 INFO     Done. Execution time: 1.787837266921997 seconds
2023-01-11 00:39:30,525 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:7: error: cannot find symbol
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
                      ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:7: error: cannot find symbol
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
                                               ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:8: error: cannot find symbol
    mostPreciseBound((R < str) || (R == str));
                      ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:8: error: cannot find symbol
    mostPreciseBound((R < str) || (R == str));
                                   ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
4 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.782s
user	0m3.123s
sys	0m0.198s

2023-01-11 00:39:30,525 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-11 00:39:30,525 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:40:06,821 INFO     Done. Execution time: 36.295828342437744 seconds
2023-01-11 00:40:06,821 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz9073893309702958271/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9073893309702958271/bin -o /tmp/qfuzz9073893309702958271/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9073893309702958271/bin
Found file /tmp/qfuzz9073893309702958271/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz9073893309702958271/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9073893309702958271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9073893309702958271/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9073893309702958271/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9073893309702958271/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 36678 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m36.7k to 36.7k us (average: 36.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9073893309702958271/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.289s
user	0m52.348s
sys	0m4.062s

2023-01-11 00:40:06,821 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-11 00:40:06,821 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-11 00:40:06,823 INFO     Done. Execution time: 0.001306772232055664 seconds
2023-01-11 00:40:06,823 INFO     Output: 
2023-01-11 00:40:06,823 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-11 00:40:09,345 INFO     Done. Execution time: 2.5216145515441895 seconds
2023-01-11 00:40:09,345 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.514s
user	0m4.400s
sys	0m0.261s

2023-01-11 00:40:09,345 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:40:10,560 INFO     Done. Execution time: 1.2151706218719482 seconds
2023-01-11 00:40:10,561 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.209s
user	0m1.858s
sys	0m0.154s

2023-01-11 00:40:10,561 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-11 00:40:10,561 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:40:47,355 INFO     Done. Execution time: 36.793750286102295 seconds
2023-01-11 00:40:47,355 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz2833184965144114521/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2833184965144114521/bin -o /tmp/qfuzz2833184965144114521/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2833184965144114521/bin
Found file /tmp/qfuzz2833184965144114521/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz2833184965144114521/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2833184965144114521/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2833184965144114521/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2833184965144114521/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2833184965144114521/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 72783 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m72.8k to 72.8k us (average: 72.8k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2833184965144114521/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.786s
user	0m52.488s
sys	0m4.500s

2023-01-11 00:40:47,355 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-11 00:40:47,355 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-11 00:40:47,357 INFO     Done. Execution time: 0.001749277114868164 seconds
2023-01-11 00:40:47,357 INFO     Output: 
2023-01-11 00:40:47,357 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-11 00:40:49,678 INFO     Done. Execution time: 2.3211686611175537 seconds
2023-01-11 00:40:49,678 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.314s
user	0m4.329s
sys	0m0.216s

2023-01-11 00:40:49,678 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:40:50,839 INFO     Done. Execution time: 1.1601808071136475 seconds
2023-01-11 00:40:50,839 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.153s
user	0m1.850s
sys	0m0.160s

2023-01-11 00:40:50,839 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-11 00:40:50,839 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:41:26,941 INFO     Done. Execution time: 36.101998805999756 seconds
2023-01-11 00:41:26,941 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz1595586442335069903/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1595586442335069903/bin -o /tmp/qfuzz1595586442335069903/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1595586442335069903/bin
Found file /tmp/qfuzz1595586442335069903/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz1595586442335069903/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1595586442335069903/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1595586442335069903/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1595586442335069903/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1595586442335069903/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 10, exec speed = 44941 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m44.9k to 44.9k us (average: 44.9k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 31.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 32.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 33.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 34.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 35.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 36.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 37.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 38.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 39.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 40.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 41.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 42.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 43.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 44.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 45.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 46.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 47.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 48.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 49.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 50.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 51.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 52.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 53.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 54.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 55.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 56.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 57.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 58.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 59.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 60.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 61.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 62.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 63.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 64.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 65.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 66.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 67.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 68.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 69.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 70.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 71.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 72.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 73.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 74.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 75.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 76.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 77.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 78.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 79.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 80.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 81.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 82.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 83.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 84.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 85.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 86.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 87.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 88.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 89.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 90.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 91.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 92.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 93.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 94.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 95.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 96.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 97.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 98.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 99.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 100.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 101.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 102.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 103.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 104.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 105.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 106.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 107.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 108.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 109.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 110.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 111.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 112.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 113.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 114.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 115.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 116.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 117.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 118.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 119.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 120.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 121.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 122.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 123.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 124.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 125.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 126.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 127.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 128.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 129.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 130.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 131.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 132.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 133.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 134.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 135.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 136.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 137.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 138.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 139.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 140.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 141.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 142.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 143.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 144.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 145.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 146.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 147.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 148.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 149.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 150.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 151.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 152.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 153.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 154.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 155.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 156.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 157.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 158.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 159.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 160.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 161.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 162.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 163.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 164.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 165.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 166.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 167.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 168.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 169.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 170.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 171.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 172.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 173.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 174.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 175.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 176.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 177.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 178.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 179.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 180.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 181.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 182.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 183.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 184.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 185.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 186.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 187.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 188.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 189.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 190.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 191.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 192.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 193.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 194.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 195.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 196.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 197.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 198.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 199.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 200.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 201.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 202.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 203.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 204.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 205.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 206.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 207.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 208.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 209.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 210.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 211.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 212.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 213.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 214.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 215.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 216.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 217.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 218.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 219.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 220.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 221.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 222.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 223.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 224.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 225.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 226.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 227.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 228.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 229.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 230.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 231.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 232.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 233.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 234.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 235.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 236.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 237.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 238.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 239.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 240.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 241.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 242.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 243.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 244.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 245.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 246.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 247.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 248.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 249.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 250.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 251.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 252.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 253.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 254.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 255.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 256.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 257.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 258.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 259.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 260.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 261.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 262.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 263.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 264.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 265.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 266.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 267.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 268.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 269.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 270.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 271.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 272.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 273.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 274.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 275.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 276.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 277.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 278.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 279.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 280.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 281.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 282.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 283.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 284.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 285.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 286.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 287.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 288.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 289.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 290.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 291.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 292.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 293.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 294.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 295.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 296.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 297.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 298.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 299.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 300.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 301.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 302.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 303.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 304.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 305.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 306.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 307.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 308.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 309.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 310.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 311.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 312.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 313.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 314.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 315.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 316.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 317.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 318.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 319.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 320.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 321.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 322.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 323.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 324.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 325.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 326.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 327.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 328.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 329.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 330.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 331.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 332.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 333.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 334.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 335.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 336.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 337.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 338.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 339.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 340.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 341.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 342.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 343.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 344.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 345.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 346.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 347.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 348.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 349.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 350.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 351.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 352.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 353.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 354.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 355.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 356.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 357.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 358.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 359.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 360.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 361.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 362.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 363.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 364.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 365.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 366.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 367.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 368.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 369.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 370.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 371.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 372.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 373.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 374.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 375.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 376.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 377.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 378.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 379.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 380.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 381.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 382.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 383.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 384.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 385.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 386.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 387.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 388.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 389.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 390.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 391.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 392.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 393.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 394.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 395.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 396.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 397.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 398.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 399.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 400.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 401.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 402.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 403.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 404.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 405.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 406.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 407.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 408.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 409.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 410.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 411.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 412.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 413.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 414.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 415.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 416.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 417.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 418.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 419.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 420.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 421.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 422.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 423.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 424.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 425.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 426.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 427.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 428.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 429.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 430.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 431.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 432.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 433.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 434.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 435.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 436.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 437.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 438.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 439.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 440.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 441.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 442.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 443.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 444.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 445.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 446.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 447.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 448.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 449.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 450.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 451.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 452.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 453.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 454.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 455.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 456.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 457.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 458.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 459.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 460.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 461.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 462.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 463.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 464.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 465.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 466.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 467.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 468.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 469.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 470.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 471.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 472.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 473.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 474.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 475.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 476.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 477.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 478.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 479.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 480.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 481.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 482.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 483.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 484.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 485.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 486.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 487.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 488.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 489.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 490.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 491.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 492.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 493.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 494.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 495.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 496.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 497.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 498.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 499.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 500.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 501.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 502.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 503.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 504.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 505.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 506.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 507.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 508.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 509.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 510.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 511.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 512.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 513.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 514.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 515.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 516.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 517.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 518.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 519.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 520.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 521.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 522.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 523.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 524.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 525.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 526.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 527.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 528.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 529.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 530.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 531.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 532.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 533.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 534.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 535.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 536.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 537.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 538.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 539.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 540.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 541.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 542.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 543.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 544.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 545.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 546.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 547.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 548.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 549.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 550.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 551.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 552.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 553.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 554.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 555.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 556.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 557.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 558.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 559.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 560.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 561.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 562.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 563.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 564.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 565.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 566.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 567.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 568.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 569.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 570.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 571.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 572.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 573.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 574.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 575.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 576.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 577.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 578.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 579.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 580.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 581.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 582.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 583.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 584.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 585.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 586.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 587.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 588.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 589.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 590.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 591.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 592.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 593.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 594.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 595.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 596.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 597.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 598.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 599.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 600.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 601.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 602.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 603.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 604.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 605.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 606.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 607.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 608.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 609.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 610.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 611.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 612.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 613.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 614.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 615.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 616.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 617.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 618.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 619.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 620.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 621.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 622.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 623.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 624.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 625.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 626.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 627.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 628.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 629.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 630.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 631.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 632.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 633.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 634.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 635.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 636.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 637.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 638.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 639.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 640.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 641.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 642.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 643.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 644.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 645.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 646.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 647.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 648.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 649.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 650.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 651.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 652.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 653.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 654.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 655.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 656.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 657.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 658.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 659.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 660.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 661.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 662.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 663.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 664.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 665.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 666.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 667.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 668.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 669.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 670.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 671.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 672.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 673.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 674.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 675.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 676.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 677.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 678.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 679.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 680.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 681.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 682.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 683.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 684.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 685.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 686.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 687.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 688.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 689.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 690.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 691.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 692.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 693.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 694.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 695.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 696.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 697.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 698.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 699.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 700.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 701.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 702.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 703.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 704.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 705.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 706.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 707.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 708.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 709.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 710.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 711.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 712.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 713.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 714.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 715.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 716.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 717.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 718.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 719.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 720.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 721.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 722.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 723.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 724.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 725.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 726.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 727.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 728.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 729.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 730.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 731.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 732.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 733.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 734.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 735.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 736.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 737.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 738.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 739.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 740.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 741.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 742.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 743.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 744.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 745.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 746.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 747.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 748.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 749.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 750.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 751.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 752.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 753.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 754.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 755.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 756.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 757.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 758.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 759.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 760.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 761.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 762.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 763.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 764.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 765.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 766.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 767.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 768.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 769.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 770.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 771.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 772.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 773.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 774.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 775.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 776.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 777.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 778.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 779.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 780.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 781.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 782.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 783.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 784.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 785.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 786.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 787.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 788.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 789.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 790.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 791.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 792.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 793.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 794.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 795.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 796.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 797.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 798.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 799.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 800.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 801.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 802.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 803.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 804.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 805.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 806.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 807.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 808.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 809.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 810.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 811.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 812.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 813.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 814.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 815.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 816.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 817.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 818.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 819.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 820.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 821.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 822.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 823.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 824.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 825.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 826.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 827.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 828.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 829.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 830.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 831.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 832.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 833.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 834.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 835.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 836.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 837.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 838.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 839.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 840.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 841.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 842.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 843.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 844.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 845.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 846.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 847.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 848.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 849.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 850.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1595586442335069903/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.095s
user	0m8.687s
sys	0m2.557s

2023-01-11 00:41:26,942 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-11 00:41:26,942 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-11 00:41:26,943 INFO     Done. Execution time: 0.0011768341064453125 seconds
2023-01-11 00:41:26,943 INFO     Output: 
2023-01-11 00:41:26,943 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-11 00:41:28,959 INFO     Done. Execution time: 2.0160651206970215 seconds
2023-01-11 00:41:28,960 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.010s
user	0m3.565s
sys	0m0.200s

2023-01-11 00:41:28,960 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:41:29,912 INFO     Done. Execution time: 0.9517068862915039 seconds
2023-01-11 00:41:29,912 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.946s
user	0m1.507s
sys	0m0.120s

2023-01-11 00:41:29,912 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-11 00:41:29,912 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:42:06,194 INFO     Done. Execution time: 36.28243684768677 seconds
2023-01-11 00:42:06,195 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz6069608488282768094/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6069608488282768094/bin -o /tmp/qfuzz6069608488282768094/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6069608488282768094/bin
Found file /tmp/qfuzz6069608488282768094/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz6069608488282768094/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6069608488282768094/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6069608488282768094/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6069608488282768094/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6069608488282768094/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 45, exec speed = 63686 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m45 to 45 bits (average: 45.00 bits)
[1;90m        Exec timing : [0m63.7k to 63.7k us (average: 63.7k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 68.00; [84.00,152.00,397.00]
1; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 3; 84.00; [58.00,142.00,329.00]
1; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 3; 166.00; [26.00,192.00,383.00]
2; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 2; 5.00; [134.00,139.00]
3; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 3; 23.00; [131.00,154.00,264.00]
3; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2; 3; 118.00; [34.00,152.00,329.00]
11; /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 3; 33.00; [144.00,375.00,408.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
/tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 4, 62, 4, 20, 4, 62, 63, 4, 160, 4, 63, 4, 21, 74, 126, 4, 20, 128, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(180, 8, 4, 87, 87, 4, 75, 186, 48, 186, 48, 48, 48, 131, 48, 46, 22, 9)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(54, 82, 123, 186, 68, 106, 112)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 67, 8, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6069608488282768094/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(176, 164, 195, 5, 63, 146, 20, 193, 117, 145, 164, 195, 5, 59, 82)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,4,62,4,20], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [180,8,4,87,87], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [58,58,58,58,58], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [54,82,123,186,68], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,67,8,153,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [176,164,195,5,63], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.277s
user	0m51.581s
sys	0m4.153s

2023-01-11 00:42:06,195 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-11 00:42:06,195 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-11 00:42:06,196 INFO     Done. Execution time: 0.0012619495391845703 seconds
2023-01-11 00:42:06,196 INFO     Output: 
2023-01-11 00:42:06,196 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-11 00:42:11,766 INFO     Done. Execution time: 5.569285869598389 seconds
2023-01-11 00:42:11,766 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,4,62,4,20], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([180,8,4,87,87], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([54,82,123,186,68], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([58,58,58,58,58], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,67,8,153,67], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([176,164,195,5,63], 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 86):
                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |     template      |
----------------------------------------------------------------------------------------------------------------------------
    17  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [153,4,62,4,20]  |
    18  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [153,4,62,4,20]  |
    19  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [153,4,62,4,20]  |
    21  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [153,4,62,4,20]  |
    23  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [153,4,62,4,20]  |
    25  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [153,4,62,4,20]  |
    28  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    153  |  0  |          0  |  [153,4,62,4,20]  |
    31  |                     R = R + chunk;  |    153  |  153  |     2  |    153  |  0  |          0  |  [153,4,62,4,20]  |
    35  |                         i = i + 1;  |         |  153  |     2  |    153  |  1  |          0  |  [153,4,62,4,20]  |
    43  |  separator = arrayRead(template...  |         |  153  |     2  |    153  |  1  |          4  |  [153,4,62,4,20]  |
    48  |  chunk = arrayRead(template, (i...  |         |  153  |     2  |     62  |  1  |          4  |  [153,4,62,4,20]  |
    51  |                     R = R + chunk;  |     62  |  215  |     2  |     62  |  1  |          4  |  [153,4,62,4,20]  |
    55  |                         i = i + 2;  |         |  215  |     2  |     62  |  3  |          4  |  [153,4,62,4,20]  |
    56  |              resetPlaceHolder_1();  |         |  215  |     2  |     62  |  3  |          4  |  [153,4,62,4,20]  |
    64  |  separator = arrayRead(template...  |         |  215  |     2  |     62  |  3  |          4  |  [153,4,62,4,20]  |
    69  |  chunk = arrayRead(template, (i...  |         |  215  |     2  |     20  |  3  |          4  |  [153,4,62,4,20]  |
    72  |                     R = R + chunk;  |     20  |  235  |     2  |     20  |  3  |          4  |  [153,4,62,4,20]  |
    76  |                         i = i + 2;  |         |  235  |     2  |     20  |  5  |          4  |  [153,4,62,4,20]  |
    77  |              resetPlaceHolder_1();  |         |  235  |     2  |     20  |  5  |          4  |  [153,4,62,4,20]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {51} because there exists a longer and subsuming segment {31,51} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {72} because there exists a longer and subsuming segment {31,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31} because there exists a longer and subsuming segment {31,72} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31,72} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31,51} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {51,72} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31,51,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    31  |         R = R + chunk;  |    153  |                         0  |
    51  |         R = R + chunk;  |     62  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    72  |         R = R + chunk;  |     20  |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m5.563s
user	0m12.119s
sys	0m1.202s

2023-01-11 00:42:11,766 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:42:31,128 INFO     Done. Execution time: 19.36171245574951 seconds
2023-01-11 00:42:31,128 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryTemplate = 0;
    int lastIndexOfTemplate = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * template) + (8 * args)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((template + args) + 2) + (2 * args))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((template + args) + 2) + (2 * args))));
    if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int separator = 0;
    int i = 0;
    {
      temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
      chunk = temporaryTemplate - lastIndexOfTemplate;
      lastIndexOfTemplate = temporaryTemplate;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < template)
    {
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        separator = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        chunk = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
    if (i < args)
    {
      R = R + 1;
      R = R + 1;
      i = i + 1;
      while (i < args)
      {
        R = R + 1;
        R = R + 1;
        i = i + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LenientFormat  {
  void execute(int template, int args)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryTemplate = 0;
    int lastIndexOfTemplate = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * template) + (8 * args)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((template + args) + 2) + (2 * args))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((template + args) + 2) + (2 * args))));
    if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int separator = 0;
    int i = 0;
    {
      temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
      chunk = temporaryTemplate - lastIndexOfTemplate;
      lastIndexOfTemplate = temporaryTemplate;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < template)
    {
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        separator = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        chunk = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
    if (i < args)
    {
      R = R + 1;
      R = R + 1;
      i = i + 1;
      while (i < args)
      {
        R = R + 1;
        R = R + 1;
        i = i + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ template args 2 (* 2 args))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ template args 2 (* 2 args)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ template args 2 (* 2 args))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ template args 2 (* 2 args)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 template)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ template args 2 (* 2 args))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ template args 2 (* 2 args)))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`)
INFO  brbo.BrboMain - Time consumption: `17.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0042-transparentAmortize-60s-mostPrecise/guava-raw-0111-0042-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m19.356s
user	0m33.703s
sys	0m4.474s

2023-01-11 00:42:31,128 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-11 00:42:31,128 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:43:08,019 INFO     Done. Execution time: 36.89072275161743 seconds
2023-01-11 00:43:08,019 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz9221020352782844428/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9221020352782844428/bin -o /tmp/qfuzz9221020352782844428/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9221020352782844428/bin
Found file /tmp/qfuzz9221020352782844428/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz9221020352782844428/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9221020352782844428/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9221020352782844428/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9221020352782844428/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9221020352782844428/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 23, exec speed = 53272 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m53.3k to 53.3k us (average: 53.3k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [389.00]
0; /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [387.00]
4; /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8; 1; 0.00; [121.00]
8; /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:4; 1; 0.00; [35.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8
/tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(186, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53, 117, 138, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9221020352782844428/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 60, 27, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 186, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 53, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 10, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.883s
user	0m54.492s
sys	0m3.783s

2023-01-11 00:43:08,019 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-11 00:43:08,019 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-11 00:43:08,021 INFO     Done. Execution time: 0.0015556812286376953 seconds
2023-01-11 00:43:08,021 INFO     Output: 
2023-01-11 00:43:08,021 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-11 00:43:12,610 INFO     Done. Execution time: 4.588521718978882 seconds
2023-01-11 00:43:12,610 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(186, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(53, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(10, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |   i   |  minLength  |  sb   |  string  |
----------------------------------------------------------------------------------------------------------
    17  |                        int sb = 0;  |         |       |       |          2  |    0  |     186  |
    19  |                         int R = 0;  |         |    0  |       |          2  |    0  |     186  |
    20  |  // mostPreciseBound(R <= minLe...  |         |    0  |       |          2  |    0  |     186  |
    21  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       |          2  |    0  |     186  |
    25  |                  sb = sb + string;  |         |    0  |       |          2  |  186  |     186  |
    28  |                    R = R + string;  |    186  |  186  |       |          2  |  186  |     186  |
    30  |                    int i = string;  |         |  186  |  186  |          2  |  186  |     186  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [28]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    28  |  R = R + string;  |    186  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.582s
user	0m7.353s
sys	0m0.887s

2023-01-11 00:43:12,610 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:43:25,456 INFO     Done. Execution time: 12.845426797866821 seconds
2023-01-11 00:43:25,456 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadEnd  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < minLength) || ((0 + (D0 + (D0p * (C0 - 1)))) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 string)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun string () Int)
(declare-fun minLength () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun R () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> string 0))
(assert (> minLength 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 string))) (= D0p 0))))
  (and (<= (+ R) (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 string))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C19 0)
     (>= C3 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    6)  (define-fun minLength () Int    2)  (define-fun string () Int    16)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C6 () Int    0)  (define-fun R () Int    6))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) minLength))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) minLength)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`)
INFO  brbo.BrboMain - Time consumption: `10.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0111-0043-transparentAmortize-60s-mostPrecise/guava-raw-0111-0043-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.840s
user	0m22.356s
sys	0m3.596s

2023-01-11 00:43:25,456 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-11 00:43:25,456 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-11 00:44:01,547 INFO     Done. Execution time: 36.090954303741455 seconds
2023-01-11 00:44:01,547 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz8474141641052400065/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8474141641052400065/bin -o /tmp/qfuzz8474141641052400065/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8474141641052400065/bin
Found file /tmp/qfuzz8474141641052400065/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz8474141641052400065/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8474141641052400065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8474141641052400065/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8474141641052400065/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8474141641052400065/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #1.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 7, exec speed = 54362 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m54.4k to 54.4k us (average: 54.4k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8474141641052400065/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.085s
user	0m51.786s
sys	0m4.235s

2023-01-11 00:44:01,547 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-11 00:44:01,547 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-11 00:44:01,549 INFO     Done. Execution time: 0.0014684200286865234 seconds
2023-01-11 00:44:01,549 INFO     Output: 
2023-01-11 00:44:01,549 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-11 00:44:04,130 INFO     Done. Execution time: 2.580395221710205 seconds
2023-01-11 00:44:04,130 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.574s
user	0m4.521s
sys	0m0.207s

2023-01-11 00:44:04,130 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-11 00:44:05,507 INFO     Done. Execution time: 1.3761794567108154 seconds
2023-01-11 00:44:05,507 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.370s
user	0m2.056s
sys	0m0.129s

2023-01-11 00:44:05,507 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    36.01114249229431,
    4.240441560745239,
    8.418010711669922
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    36.27278995513916,
    10.257410049438477,
    62.80716681480408
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    36.08535552024841,
    9.56269097328186,
    376.2368152141571
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    36.32152771949768,
    5.587793588638306,
    9.048482656478882
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    36.56041097640991,
    5.650383710861206,
    16.95660924911499
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    36.3243408203125,
    5.792497396469116,
    8.281108140945435
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    36.69800901412964,
    29.2268009185791,
    12.023303270339966
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.7528502941131592,
    1.8022360801696777,
    1.1493043899536133
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    36.14900231361389,
    2.0429558753967285,
    1.0654380321502686
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    36.171313762664795,
    2.8922290802001953,
    1.3723702430725098
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    36.93435883522034,
    6.012028932571411,
    9.332629203796387
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    36.860310316085815,
    6.8066017627716064,
    8.077842950820923
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    36.211236000061035,
    12.47627329826355,
    373.55852603912354
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    36.03487038612366,
    6.122288703918457,
    8.621389627456665
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    36.25572681427002,
    10.126764297485352,
    13.786967039108276
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    36.422736167907715,
    8.718044519424438,
    8.681110620498657
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    36.61204218864441,
    4.130795240402222,
    8.432816982269287
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    36.2285943031311,
    2.2049062252044678,
    1.2271332740783691
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    36.04714369773865,
    5.384098052978516,
    8.430665254592896
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    36.80411672592163,
    5.511361122131348,
    8.44672679901123
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    36.30707931518555,
    2.852618455886841,
    1.6283011436462402
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    36.354374408721924,
    2.371058225631714,
    1.1258800029754639
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    36.661396741867065,
    6.042828321456909,
    8.770055532455444
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    36.32815504074097,
    4.678923845291138,
    7.218948125839233
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    36.12728786468506,
    4.780885696411133,
    25.50145173072815
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    36.42360305786133,
    3.2765603065490723,
    1.7153029441833496
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    37.428658962249756,
    10.36034893989563,
    31.641632556915283
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    36.99383616447449,
    9.016229629516602,
    8.19093656539917
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    36.31389284133911,
    6.967860221862793,
    92.28979754447937
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    36.09071969985962,
    2.1263701915740967,
    1.1175291538238525
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    36.43518590927124,
    3.2006895542144775,
    1.787837266921997
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    36.295828342437744,
    2.5216145515441895,
    1.2151706218719482
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    36.793750286102295,
    2.3211686611175537,
    1.1601808071136475
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    36.101998805999756,
    2.0160651206970215,
    0.9517068862915039
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    36.28243684768677,
    5.569285869598389,
    19.36171245574951
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    36.89072275161743,
    4.588521718978882,
    12.845426797866821
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    36.090954303741455,
    2.580395221710205,
    1.3761794567108154
  ]
}
2023-01-11 00:44:05,508 INFO     Total time elapsed: 2696.350251674652 seconds
2023-01-11 00:44:05,508 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "unknown"
}
2023-01-11 00:44:05,508 INFO     Number of verified programs: {
  "stac": 2,
  "lang3": 10,
  "stringutils": 1,
  "guava": 1
}
2023-01-11 00:44:05,508 INFO     Number of not verified programs: {
  "stac": 2,
  "lang3": 4,
  "stringutils": 3,
  "guava": 1
}
2023-01-11 00:44:05,508 INFO     Number of unknown programs: {
  "lang3": 6,
  "stringutils": 6,
  "guava": 1
}



This run uses a cost approximation of r + r* * (r# - 1), instead of r* * r#.
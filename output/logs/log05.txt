Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz4546527975492416781/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4546527975492416781/bin -o /tmp/qfuzz4546527975492416781/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4546527975492416781/bin
Found file /tmp/qfuzz4546527975492416781/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz4546527975492416781/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4546527975492416781/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4546527975492416781/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4546527975492416781/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4546527975492416781/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 44, exec speed = 115318 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 68.00; [84.00,152.00,397.00]
2; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 289.00; [18.00,307.00]
3; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 3; 73.00; [204.00,324.00,397.00]
5; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 3; 108.00; [44.00,152.00,403.00]
7; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 2; 367.00; [18.00,385.00]
12; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 3; 116.00; [84.00,200.00,355.00]
14; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta; 3; 117.00; [84.00,239.00,356.00]
19; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 3; 68.00; [84.00,152.00,321.00]
20; /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta; 3; 124.00; [132.00,256.00,397.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 153, 19, 93, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 31, 13, 153, 67, 110)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(166, 122, 33, 153, 91, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(108, 110, 33, 149, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 148, 43, 60, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 18, 119, 161, 57, 71, 37, 144, 22, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(142)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4546527975492416781/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(149, 139, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,153,19,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,31,13,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [166,122,33,153,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [108,110,33,149,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,18,119,161,57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [142]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [149,139,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.057s
user	0m13.886s
sys	0m0.972s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,153,19,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([190,31,13,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([166,122,33,153,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([108,110,33,149,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,18,119,161,57])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([142])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([70])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([149,139,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,153,19,93]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,153,19,93]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,153,19,93]  |
    13  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,153,19,93]  |
    15  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,153,19,93]  |
    17  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,153,19,93]  |
    20  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,153,19,93]  |
    23  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,153,19,93]  |
    27  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,153,19,93]  |
    35  |          tag = arrayRead(text, i);  |         |  187  |    187  |  1  |  110  |  [187,110,153,19,93]  |
    40  |  chunk = arrayRead(text, (i + 1...  |         |  187  |    153  |  1  |  110  |  [187,110,153,19,93]  |
    43  |                     R = R + chunk;  |    153  |  340  |    153  |  1  |  110  |  [187,110,153,19,93]  |
    47  |                         i = i + 2;  |         |  340  |    153  |  3  |  110  |  [187,110,153,19,93]  |
    48  |              resetPlaceHolder_1();  |         |  340  |    153  |  3  |  110  |  [187,110,153,19,93]  |
    56  |          tag = arrayRead(text, i);  |         |  340  |    153  |  3  |   19  |  [187,110,153,19,93]  |
    61  |  chunk = arrayRead(text, (i + 1...  |         |  340  |     93  |  3  |   19  |  [187,110,153,19,93]  |
    64  |                     R = R + chunk;  |     93  |  433  |     93  |  3  |   19  |  [187,110,153,19,93]  |
    68  |                         i = i + 2;  |         |  433  |     93  |  5  |   19  |  [187,110,153,19,93]  |
    69  |              resetPlaceHolder_1();  |         |  433  |     93  |  5  |   19  |  [187,110,153,19,93]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {43} because there exists a longer and subsuming segment {43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,64} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {43,64} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,43} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {23,43,64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    23  |         R = R + chunk;  |    187  |                         0  |
    43  |         R = R + chunk;  |    153  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    64  |         R = R + chunk;  |     93  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java.actual	2023-01-10 16:59:30.214593769 -0700
@@ -1,7 +1,7 @@
 abstract class TemplateEngine {
   void execute(int text) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;
@@ -44,7 +44,7 @@
       }
       D0 = D0 + chunk;
       i = i + 2;
-      // resetPlaceHolder_1();
+      // reset R0
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m4.525s
user	0m9.316s
sys	0m1.320s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1659-transparentAmortize-60s-mostPrecise/stac-raw-0110-1659-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.788s
user	0m16.040s
sys	0m2.220s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz4968802035624190960/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4968802035624190960/bin -o /tmp/qfuzz4968802035624190960/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4968802035624190960/bin
Found file /tmp/qfuzz4968802035624190960/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz4968802035624190960/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4968802035624190960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4968802035624190960/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4968802035624190960/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4968802035624190960/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 119366 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta; 5; 13.00; [21.00,34.00,173.00,280.00,400.00]
7; /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 5; 6.00; [67.00,73.00,80.00,128.00,274.00]
8; /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 5; 13.00; [26.00,40.00,87.00,387.00,400.00]
10; /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 4; 5.00; [193.00,198.00,206.00,215.00]
11; /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 5; 4.00; [26.00,323.00,333.00,342.00,346.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
/tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 191, 4, 131, 127, 80, 12, 29)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 128, 128, 128, 55, 128, 30, 4, 70, 63, 128)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 90, 11, 52, 4, 159, 37, 170, 5, 33, 50, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 90, 90, 90, 90, 90, 101, 90, 90, 90, 90, 90, 90, 90, 140, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4968802035624190960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 4, 4, 194, 162, 162, 155, 4, 4, 4, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,191,4,131], 2, 80
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,128,128,128,55], 2, 30
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,90,11,52,4], 2, 37
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [90,90,90,90,90], 2, 101
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,4,4,194,162], 2, 155
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.827s
user	0m16.259s
sys	0m1.170s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([4,4,191,4,131], 2, 80)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([27,128,128,128,55], 2, 30)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,90,11,52,4], 2, 37)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([90,90,90,90,90], 2, 101)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([160,4,4,194,162], 2, 155)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 179):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |       text        |
------------------------------------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |    0  |         |     |     |         80  |       |           2  |  [4,4,191,4,131]  |
    26  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |         80  |       |           2  |  [4,4,191,4,131]  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |         80  |       |           2  |  [4,4,191,4,131]  |
    29  |                         int i = 0;  |         |    0  |         |  0  |     |         80  |       |           2  |  [4,4,191,4,131]  |
    31  |                         int j = 0;  |         |    0  |         |  0  |  0  |         80  |       |           2  |  [4,4,191,4,131]  |
    33  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |         80  |       |           2  |  [4,4,191,4,131]  |
    35  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |         80  |    0  |           2  |  [4,4,191,4,131]  |
    40  |                             j = 0;  |         |    0  |      0  |  0  |  0  |         80  |    0  |           2  |  [4,4,191,4,131]  |
    43  |        chunk = arrayRead(text, j);  |         |    0  |      4  |  0  |  0  |         80  |    0  |           2  |  [4,4,191,4,131]  |
    46  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  0  |         80  |    0  |           2  |  [4,4,191,4,131]  |
    50  |                         j = j + 1;  |         |    4  |      4  |  0  |  1  |         80  |    0  |           2  |  [4,4,191,4,131]  |
    58  |          tag = arrayRead(text, j);  |         |    4  |      4  |  0  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    63  |  chunk = arrayRead(text, (j + 1...  |         |    4  |    191  |  0  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    66  |                     R = R + chunk;  |    191  |  195  |    191  |  0  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    70  |                         j = j + 2;  |         |  195  |    191  |  0  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    71  |              resetPlaceHolder_2();  |         |  195  |    191  |  0  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    79  |          tag = arrayRead(text, j);  |         |  195  |    191  |  0  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    84  |  chunk = arrayRead(text, (j + 1...  |         |  195  |    131  |  0  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    87  |                     R = R + chunk;  |    131  |  326  |    131  |  0  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    91  |                         j = j + 2;  |         |  326  |    131  |  0  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
    92  |              resetPlaceHolder_2();  |         |  326  |    131  |  0  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   101  |                         i = i + 1;  |         |  326  |    131  |  1  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   104  |                 R = R + separator;  |     80  |  406  |    131  |  1  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   105  |              resetPlaceHolder_1();  |         |  406  |    131  |  1  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   110  |                             j = 0;  |         |  406  |    131  |  1  |  0  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   113  |        chunk = arrayRead(text, j);  |         |  406  |      4  |  1  |  0  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   116  |                     R = R + chunk;  |      4  |  410  |      4  |  1  |  0  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   120  |                         j = j + 1;  |         |  410  |      4  |  1  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   128  |          tag = arrayRead(text, j);  |         |  410  |      4  |  1  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   133  |  chunk = arrayRead(text, (j + 1...  |         |  410  |    191  |  1  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   136  |                     R = R + chunk;  |    191  |  601  |    191  |  1  |  1  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   140  |                         j = j + 2;  |         |  601  |    191  |  1  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   141  |              resetPlaceHolder_2();  |         |  601  |    191  |  1  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   149  |          tag = arrayRead(text, j);  |         |  601  |    191  |  1  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   154  |  chunk = arrayRead(text, (j + 1...  |         |  601  |    131  |  1  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   157  |                     R = R + chunk;  |    131  |  732  |    131  |  1  |  3  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   161  |                         j = j + 2;  |         |  732  |    131  |  1  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   162  |              resetPlaceHolder_2();  |         |  732  |    131  |  1  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   171  |                         i = i + 1;  |         |  732  |    131  |  2  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   174  |                 R = R + separator;  |     80  |  812  |    131  |  2  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
   175  |              resetPlaceHolder_1();  |         |  812  |    131  |  2  |  5  |         80  |    4  |           2  |  [4,4,191,4,131]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66} because there exists a longer and subsuming segment {66,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {157} because there exists a longer and subsuming segment {46,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116} because there exists a longer and subsuming segment {66,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {136} because there exists a longer and subsuming segment {116,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46} because there exists a longer and subsuming segment {46,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87} because there exists a longer and subsuming segment {87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {104}, {174} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      4  |                            |
    66  |         R = R + chunk;  |    191  |                            |
    71  |  resetPlaceHolder_2();  |         |                            |
    87  |         R = R + chunk;  |    131  |                            |
    92  |  resetPlaceHolder_2();  |         |                            |
   104  |     R = R + separator;  |     80  |                         0  |
   105  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |      4  |                            |
   136  |         R = R + chunk;  |    191  |                            |
   141  |  resetPlaceHolder_2();  |         |                            |
   157  |         R = R + chunk;  |    131  |                            |
   162  |  resetPlaceHolder_2();  |         |                            |
   174  |     R = R + separator;  |     80  |                         1  |
   175  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,157} because there exists a longer and subsuming segment {46,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,157} because there exists a longer and subsuming segment {66,116,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,136} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,116} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,136} because there exists a longer and subsuming segment {66,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116,157} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,116} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,66} because there exists a longer and subsuming segment {46,66,87} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,87} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,87} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {136,157} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,157} because there exists a longer and subsuming segment {66,87,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,136} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,116} because there exists a longer and subsuming segment {46,66,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116,136} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {116,136,157}, {46,66,87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |      4  |                         0  |
    66  |         R = R + chunk;  |    191  |                         0  |
    71  |  resetPlaceHolder_2();  |         |                            |
    87  |         R = R + chunk;  |    131  |                         0  |
    92  |  resetPlaceHolder_2();  |         |                            |
   104  |     R = R + separator;  |     80  |                            |
   105  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |      4  |                         1  |
   136  |         R = R + chunk;  |    191  |                         1  |
   141  |  resetPlaceHolder_2();  |         |                            |
   157  |         R = R + chunk;  |    131  |                         1  |
   162  |  resetPlaceHolder_2();  |         |                            |
   174  |     R = R + separator;  |     80  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}, {174}
GroupID(1): {116,136,157}, {46,66,87}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |      4  |                            |                         0  |
    66  |         R = R + chunk;  |    191  |                            |                         0  |
    71  |  resetPlaceHolder_2();  |         |                            |                            |
    87  |         R = R + chunk;  |    131  |                            |                         0  |
    92  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |     R = R + separator;  |     80  |                         0  |                            |
   105  |  resetPlaceHolder_1();  |         |                            |                            |
   116  |         R = R + chunk;  |      4  |                            |                         1  |
   136  |         R = R + chunk;  |    191  |                            |                         1  |
   141  |  resetPlaceHolder_2();  |         |                            |                            |
   157  |         R = R + chunk;  |    131  |                            |                         1  |
   162  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |     R = R + separator;  |     80  |                         1  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(105)
GroupID(1): Set(105)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m8.946s
user	0m19.005s
sys	0m3.475s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((text * templateds) + (separator * templateds))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((text * templateds) + (separator * templateds))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `74.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1700-transparentAmortize-60s-mostPrecise/stac-raw-0110-1700-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m16.308s
user	3m17.079s
sys	0m14.943s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7464526483698211959/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7464526483698211959/bin -o /tmp/qfuzz7464526483698211959/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7464526483698211959/bin
Found file /tmp/qfuzz7464526483698211959/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7464526483698211959/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7464526483698211959/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7464526483698211959/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7464526483698211959/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7464526483698211959/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 119830 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
7; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 4; 4.00; [160.00,165.00,169.50,182.00]
8; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta; 6; 13.00; [126.00,240.00,294.00,367.00,387.00,400.00]
10; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 6; 5.00; [79.00,314.00,360.00,387.00,392.00,400.00]
12; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 6; 13.00; [161.00,174.00,192.00,205.00,338.00,378.00]
20; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 6; 8.00; [16.00,67.00,78.00,86.00,287.00,300.00]
27; /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 5; 5.00; [209.00,222.00,232.00,237.00,242.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 76, 76, 76, 76, 64, 76, 76, 196, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 191, 111, 86, 138, 92, 177, 59, 66, 164)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 41, 171, 16, 187, 51, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74, 15, 87, 84, 160, 45, 96, 185, 139, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 16, 34, 4, 30, 4, 27, 4, 199, 43, 104)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7464526483698211959/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(98, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,76,76,76,76], 2, 76, 76
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,191,111,86,138], 2, 177, 59
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,41,171,16,187], 2, 33, 153
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [74,15,87,84,160], 2, 96, 185
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,16,34,4,30], 2, 27, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [98,112,112,112,112], 2, 112, 112
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.995s
user	0m14.492s
sys	0m0.952s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([78,76,76,76,76], 2, 76, 76)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,191,111,86,138], 2, 177, 59)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,41,171,16,187], 2, 33, 153)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([74,15,87,84,160], 2, 96, 185)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([137,16,34,4,30], 2, 27, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([98,112,112,112,112], 2, 112, 112)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 199):
                                                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |        text        |  ts  |
-------------------------------------------------------------------------------------------------------------------------------------------
    33  |                         int R = 0;  |         |    0  |         |     |     |   76  |   76  |       |  [78,76,76,76,76]  |   2  |
    34  |  // mostPreciseBound(R <= ts * ...  |         |    0  |         |     |     |   76  |   76  |       |  [78,76,76,76,76]  |   2  |
    35  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |   76  |   76  |       |  [78,76,76,76,76]  |   2  |
    37  |                         int i = 0;  |         |    0  |         |  0  |     |   76  |   76  |       |  [78,76,76,76,76]  |   2  |
    39  |                         int j = 0;  |         |    0  |         |  0  |  0  |   76  |   76  |       |  [78,76,76,76,76]  |   2  |
    41  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |   76  |   76  |       |  [78,76,76,76,76]  |   2  |
    43  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |   76  |   76  |    0  |  [78,76,76,76,76]  |   2  |
    48  |                             j = 0;  |         |    0  |      0  |  0  |  0  |   76  |   76  |    0  |  [78,76,76,76,76]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |    0  |     78  |  0  |  0  |   76  |   76  |    0  |  [78,76,76,76,76]  |   2  |
    54  |                     R = R + chunk;  |     78  |   78  |     78  |  0  |  0  |   76  |   76  |    0  |  [78,76,76,76,76]  |   2  |
    58  |                         j = j + 1;  |         |   78  |     78  |  0  |  1  |   76  |   76  |    0  |  [78,76,76,76,76]  |   2  |
    66  |          tag = arrayRead(text, j);  |         |   78  |     78  |  0  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    71  |  chunk = arrayRead(text, (j + 1...  |         |   78  |     76  |  0  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    74  |                     R = R + chunk;  |     76  |  154  |     76  |  0  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    77  |                       R = R + rep;  |     76  |  230  |     76  |  0  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    81  |                         j = j + 2;  |         |  230  |     76  |  0  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    82  |              resetPlaceHolder_2();  |         |  230  |     76  |  0  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    90  |          tag = arrayRead(text, j);  |         |  230  |     76  |  0  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    95  |  chunk = arrayRead(text, (j + 1...  |         |  230  |     76  |  0  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
    98  |                     R = R + chunk;  |     76  |  306  |     76  |  0  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   101  |                       R = R + rep;  |     76  |  382  |     76  |  0  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   105  |                         j = j + 2;  |         |  382  |     76  |  0  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   106  |              resetPlaceHolder_2();  |         |  382  |     76  |  0  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   115  |                         i = i + 1;  |         |  382  |     76  |  1  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   118  |                       R = R + sep;  |     76  |  458  |     76  |  1  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   119  |              resetPlaceHolder_1();  |         |  458  |     76  |  1  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   124  |                             j = 0;  |         |  458  |     76  |  1  |  0  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   127  |        chunk = arrayRead(text, j);  |         |  458  |     78  |  1  |  0  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   130  |                     R = R + chunk;  |     78  |  536  |     78  |  1  |  0  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   134  |                         j = j + 1;  |         |  536  |     78  |  1  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   142  |          tag = arrayRead(text, j);  |         |  536  |     78  |  1  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   147  |  chunk = arrayRead(text, (j + 1...  |         |  536  |     76  |  1  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   150  |                     R = R + chunk;  |     76  |  612  |     76  |  1  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   153  |                       R = R + rep;  |     76  |  688  |     76  |  1  |  1  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   157  |                         j = j + 2;  |         |  688  |     76  |  1  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   158  |              resetPlaceHolder_2();  |         |  688  |     76  |  1  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   166  |          tag = arrayRead(text, j);  |         |  688  |     76  |  1  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   171  |  chunk = arrayRead(text, (j + 1...  |         |  688  |     76  |  1  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   174  |                     R = R + chunk;  |     76  |  764  |     76  |  1  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   177  |                       R = R + rep;  |     76  |  840  |     76  |  1  |  3  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   181  |                         j = j + 2;  |         |  840  |     76  |  1  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   182  |              resetPlaceHolder_2();  |         |  840  |     76  |  1  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   191  |                         i = i + 1;  |         |  840  |     76  |  2  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   194  |                       R = R + sep;  |     76  |  916  |     76  |  2  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
   195  |              resetPlaceHolder_1();  |         |  916  |     76  |  2  |  5  |   76  |   76  |   76  |  [78,76,76,76,76]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {130} because there exists a longer and subsuming segment {98,130} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {54,101} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {101}, {118}, {150}, {153}, {174}, {177}, {194}, {74}, {77}, {98} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |
    74  |         R = R + chunk;  |     76  |                         0  |
    77  |           R = R + rep;  |     76  |                         1  |
    82  |  resetPlaceHolder_2();  |         |                            |
    98  |         R = R + chunk;  |     76  |                         2  |
   101  |           R = R + rep;  |     76  |                         3  |
   106  |  resetPlaceHolder_2();  |         |                            |
   118  |           R = R + sep;  |     76  |                         4  |
   119  |  resetPlaceHolder_1();  |         |                            |
   130  |         R = R + chunk;  |     78  |                            |
   150  |         R = R + chunk;  |     76  |                         5  |
   153  |           R = R + rep;  |     76  |                         6  |
   158  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     76  |                         7  |
   177  |           R = R + rep;  |     76  |                         8  |
   182  |  resetPlaceHolder_2();  |         |                            |
   194  |           R = R + sep;  |     76  |                         9  |
   195  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [54, 130]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [54, 130]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [54, 130]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {101}, {118}, {150}, {153}, {174}, {177}, {194}, {74}, {77}, {98}
GroupID(1): {54,130}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [75, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [78, 97])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [99, 100])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [102, 117])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [151, 152])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [154, 173])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [175, 176])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [178, 193])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |     78  |                            |                         0  |
    74  |         R = R + chunk;  |     76  |                         0  |                            |
    77  |           R = R + rep;  |     76  |                         1  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |
    98  |         R = R + chunk;  |     76  |                         2  |                            |
   101  |           R = R + rep;  |     76  |                         3  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |
   118  |           R = R + sep;  |     76  |                         4  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   130  |         R = R + chunk;  |     78  |                            |                         0  |
   150  |         R = R + chunk;  |     76  |                         5  |                            |
   153  |           R = R + rep;  |     76  |                         6  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |         R = R + chunk;  |     76  |                         7  |                            |
   177  |           R = R + rep;  |     76  |                         8  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |
   194  |           R = R + sep;  |     76  |                         9  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(119)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R sep -> R0 = R0 + sep;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R rep -> R0 = R0 + rep;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java	2023-01-09 23:24:04.852768446 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java.actual	2023-01-10 17:02:21.724888175 -0700
@@ -49,14 +49,7 @@
           chunk = temporaryText - lastIndexOfText;
           lastIndexOfText = temporaryText;
         }
-        if ((j < 2) || (j == 2))
-        {
-          D1 = D1 + chunk;
-        }
-        else
-        {
-          D0 = D0 + chunk;
-        }
+        D0 = D0 + chunk;
         D0 = D0 + rep;
         j = j + 2;
         // reset R1
@@ -64,9 +57,7 @@
       }
       i = i + 1;
       D0 = D0 + sep;
-      D1p = D1;
-      D1 = 0;
-      C1 = C1 + 1;
+      // reset R1
       D0p = D0;
       D0 = 0;
       C0 = C0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m6.607s
user	0m15.770s
sys	0m2.640s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0p * C0)) + (D1p * C1)) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D0 = D0 + rep;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0p * C0)) + (D1p * C1)) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D0 = D0 + rep;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1)) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1)) (* ts (+ text (* text rep) sep)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1)) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1)) (* ts (+ text (* text rep) sep)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1)) (* ts (+ text (* text rep) sep))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1)) (* ts (+ text (* text rep) sep)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `127.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1702-transparentAmortize-60s-mostPrecise/stac-raw-0110-1702-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m9.225s
user	4m50.052s
sys	0m20.313s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz2741828563063259385/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2741828563063259385/bin -o /tmp/qfuzz2741828563063259385/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2741828563063259385/bin
Found file /tmp/qfuzz2741828563063259385/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz2741828563063259385/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2741828563063259385/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2741828563063259385/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2741828563063259385/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2741828563063259385/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 42, exec speed = 123712 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 68.00; [81.00,149.00,235.00,321.00,397.00]
2; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 386.00; [15.00,401.00]
4; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 5; 4.00; [49.00,81.00,235.00,317.00,321.00]
5; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 5; 46.00; [85.00,151.00,229.00,275.00,389.00]
7; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 5; 8.00; [81.00,235.00,243.00,385.00,397.00]
20; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 5; 76.00; [35.00,149.00,235.00,321.00,397.00]
25; /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 5; 14.00; [81.00,127.00,321.00,335.00,397.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 10, 153, 67, 129)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 110, 33, 151, 153, 67, 55, 67, 200)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 35, 187, 107, 68, 170, 93, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 114, 185, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2741828563063259385/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 56, 33, 153, 160, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,10,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13,110,33,151,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,35,187,107,68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,114,185]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,56,33,153,160]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.973s
user	0m14.198s
sys	0m1.144s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,10,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([13,110,33,151,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([126,35,187,107,68])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,33,114,185])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,56,33,153,160])
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
java.lang.IndexOutOfBoundsException: 0
	at scala.collection.LinearSeqOptimized.apply(LinearSeqOptimized.scala:67)
	at scala.collection.LinearSeqOptimized.apply$(LinearSeqOptimized.scala:65)
	at scala.collection.immutable.List.apply(List.scala:91)
	at brbo.backend2.interpreter.Interpreter.evaluateExpr(Interpreter.scala:337)
	at brbo.backend2.interpreter.Interpreter.evaluateAssignment(Interpreter.scala:412)
	at brbo.backend2.interpreter.Interpreter.evaluateCommand(Interpreter.scala:112)
	at brbo.backend2.interpreter.Interpreter.evaluateAst(Interpreter.scala:47)
	at brbo.backend2.interpreter.Interpreter.evaluateAst(Interpreter.scala:58)
	at brbo.backend2.interpreter.Interpreter.evaluateFunction(Interpreter.scala:40)
	at brbo.backend2.interpreter.Interpreter.execute(Interpreter.scala:24)
	at brbo.backend2.interpreter.Interpreter$.$anonfun$generateTraces$2(Interpreter.scala:822)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659)
	at scala.util.Success.$anonfun$map$1(Try.scala:255)
	at scala.util.Success.map(Try.scala:213)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)

real	0m2.169s
user	0m3.878s
sys	0m0.237s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1705-transparentAmortize-60s-mostPrecise/stac-raw-0110-1705-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.186s
user	0m18.606s
sys	0m2.520s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz6503824223594939363/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6503824223594939363/bin -o /tmp/qfuzz6503824223594939363/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6503824223594939363/bin
Found file /tmp/qfuzz6503824223594939363/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz6503824223594939363/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6503824223594939363/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6503824223594939363/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6503824223594939363/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6503824223594939363/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 41, exec speed = 115533 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [11.00,17.00,385.00]
2; /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 3; 6.00; [11.00,17.00,339.00]
3; /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 6.00; [11.00,17.00,273.00]
12; /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 6.00; [11.00,17.00,211.00]
14; /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 3; 6.00; [11.00,17.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(164, 171, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(131, 169)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(100, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6503824223594939363/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 199, 112, 154, 23, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 164, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 131, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 100, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 23, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.889s
user	0m15.275s
sys	0m1.095s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(164, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(131, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(100, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(23, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 56):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
    17  |                   int builder = 0;  |         |       |        0  |     |  164  |      2  |
    19  |                         int R = 0;  |         |    0  |        0  |     |  164  |      2  |
    20  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  164  |      2  |
    21  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  164  |      2  |
    25  |             builder = builder + 1;  |         |    0  |        1  |     |  164  |      2  |
    28  |                         R = R + 1;  |      1  |    1  |        1  |     |  164  |      2  |
    30  |                         int i = 1;  |         |    1  |        1  |  1  |  164  |      2  |
    37  |           builder = builder + sep;  |         |    1  |      165  |  1  |  164  |      2  |
    40  |                       R = R + sep;  |    164  |  165  |      165  |  1  |  164  |      2  |
    44  |             builder = builder + 1;  |         |  165  |      166  |  1  |  164  |      2  |
    47  |                         R = R + 1;  |      1  |  166  |      166  |  1  |  164  |      2  |
    51  |                         i = i + 1;  |         |  166  |      166  |  2  |  164  |      2  |
    52  |              resetPlaceHolder_1();  |         |  166  |      166  |  2  |  164  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [28, 40, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {28}, {47} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |
    40  |           R = R + sep;  |    164  |                            |
    47  |             R = R + 1;  |      1  |                         1  |
    52  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28}, {47}
GroupID(1): {40}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |                            |
    40  |           R = R + sep;  |    164  |                            |                         0  |
    47  |             R = R + 1;  |      1  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [29, 46])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |                            |
    40  |           R = R + sep;  |    164  |                            |                         0  |
    47  |             R = R + 1;  |      1  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java.actual	2023-01-10 17:05:59.081328364 -0700
@@ -1,7 +1,7 @@
 abstract class AppendAllTo {
   void execute(int sep, int types) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
     int D0 = 0;
@@ -23,19 +23,16 @@
     // mostPreciseBound(R <= types * sep + types + 1)
     // lessPreciseBound(R <= MAX * types * types + MAX * sep * sep + MAX * types * sep + MAX * types + MAX * sep + MAX)
     builder = builder + 1;
-    D1 = D1 + 1;
+    D0 = D0 + 1;
     int i = 1;
     while (i < types)
     {
       builder = builder + sep;
-      D0 = D0 + sep;
+      D1 = D1 + sep;
       builder = builder + 1;
-      D1 = D1 + 1;
+      D0 = D0 + 1;
       i = i + 1;
-      // reset R1
-      D0p = D0;
-      D0 = 0;
-      C0 = C0 + 1;
+      // resetPlaceHolder_1();
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.870s
user	0m11.769s
sys	0m1.921s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((types * sep) + types) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((types * sep) + types) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `14.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1706-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1706-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.775s
user	0m43.717s
sys	0m6.707s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz6607106148057758437/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6607106148057758437/bin -o /tmp/qfuzz6607106148057758437/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6607106148057758437/bin
Found file /tmp/qfuzz6607106148057758437/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz6607106148057758437/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6607106148057758437/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6607106148057758437/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6607106148057758437/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6607106148057758437/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 35, exec speed = 113195 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m35 to 35 bits (average: 35.00 bits)
[1;90m        Exec timing : [0m113k to 113k us (average: 113k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6607106148057758437/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [11.00,14.00,20.00]
1; /tmp/qfuzz6607106148057758437/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 3; 3.00; [11.00,14.00,20.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6607106148057758437/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6607106148057758437/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(114)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.901s
user	0m14.441s
sys	0m1.072s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 74):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |      2  |       0  |     |
    11  |                         int R = 0;  |         |  0  |      2  |       0  |     |
    12  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    13  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    15  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    31  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    34  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    38  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    39  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    55  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    58  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    62  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    65  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    69  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    70  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [34, 58, 65]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {34}, {58}, {65} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}, {58}, {65}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [59, 64])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java	2023-01-09 16:50:04.381805580 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java.actual	2023-01-10 17:06:57.482633796 -0700
@@ -1,7 +1,7 @@
 abstract class AppendDetail {
   void execute(int array) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.703s
user	0m11.482s
sys	0m1.722s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 + (8 * array))) || ((0 + (D0p * C0)) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0p * C0)) < (1 + array)) || ((0 + (D0p * C0)) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 + (8 * array))) || ((0 + (D0p * C0)) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0p * C0)) < (1 + array)) || ((0 + (D0p * C0)) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ 1 array)) (= (+ 0 (* D0p C0)) (+ 1 array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ 1 array)) (= (+ 0 (* D0p C0)) (+ 1 array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ 1 array)) (= (+ 0 (* D0p C0)) (+ 1 array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1706-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1706-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.601s
user	0m18.477s
sys	0m2.806s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz3485322345226208674/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3485322345226208674/bin -o /tmp/qfuzz3485322345226208674/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3485322345226208674/bin
Found file /tmp/qfuzz3485322345226208674/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz3485322345226208674/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3485322345226208674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3485322345226208674/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3485322345226208674/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3485322345226208674/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 43, exec speed = 143063 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m143k to 143k us (average: 143k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 2.00; [12.00,14.00,22.00,31.00]
2; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 4; 2.00; [12.00,14.00,22.00,31.00]
3; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
4; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 4; 2.00; [12.00,14.00,20.00,31.00]
5; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
6; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 2.00; [12.00,14.00,22.00,31.00]
8; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+partition,+delta; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
9; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
10; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
11; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4; 4; 2.00; [12.00,14.00,22.00,31.00]
13; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
14; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64; 4; 2.00; [12.00,14.00,22.00,31.00]
15; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
16; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
17; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
19; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
20; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 4; 2.00; [12.00,14.00,22.00,31.00]
22; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:8; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
23; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,22.00,31.00]
24; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,22.00,31.00]
25; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4; 4; 2.00; [12.00,14.00,22.00,31.00]
27; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
28; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,22.00,31.00]
29; /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,20.00,31.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:8
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16
/tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132, 117, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 4, 70, 20, 135, 27, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 107, 50, 170, 100, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25, 58, 69, 58, 49, 200, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 63, 4, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(197, 112, 33, 153, 68, 110)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 4, 51, 84, 162, 76, 76, 76, 51, 84, 162, 76, 76, 76, 76, 76, 76, 76, 76, 76, 41, 76, 76, 76, 52, 142, 141, 69, 122, 5, 144, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(117, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 143, 160, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(146, 123, 160, 147, 181, 88, 198, 7, 24, 179, 187, 187, 187, 68, 187, 187, 61, 187, 187, 187, 101, 85)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(119, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 5, 143, 14, 149, 143, 5, 5, 5, 5, 5, 5, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 52, 5, 65, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 30, 83, 154, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(123, 114, 59, 199, 77, 152)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3485322345226208674/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [132,117,132]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,4,70,20,135]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,107,50,170,100]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [25,58,69,58,49]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,63,4,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [197,112,33,153,68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63,4,51,84,162]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [13]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [117,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,143,160,79]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [146,123,160,147,181]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [119,119]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,5,143,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,52,5,65,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,30,83,154,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [123,114,59,199,77]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.056s
user	0m16.268s
sys	0m1.621s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([132,117,132])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([15,4,70,20,135])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,107,50,170,100])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([25,58,69,58,49])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,63,4,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([197,112,33,153,68])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([63,4,51,84,162])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([13])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([117,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([15,143,160,79])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([146,123,160,147,181])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([119,119])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([5,5,5,143,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([4,52,5,65,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,30,83,154,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([123,114,59,199,77])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([6])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 23 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 4267):
                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |     sorted      |
-----------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [132,117,132]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [132,117,132]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [132,117,132]  |
    13  |                     int entry = 0;  |         |    0  |      0  |     |       |  [132,117,132]  |
    15  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [132,117,132]  |
    21  |      entry = arrayRead(sorted, i);  |         |    0  |    132  |  0  |       |  [132,117,132]  |
    23  |                         int j = 0;  |         |    0  |    132  |  0  |    0  |  [132,117,132]  |
    29  |                         R = R + 2;  |      2  |    2  |    132  |  0  |    0  |  [132,117,132]  |
    33  |                         j = j + 1;  |         |    2  |    132  |  0  |    1  |  [132,117,132]  |
    34  |              resetPlaceHolder_2();  |         |    2  |    132  |  0  |    1  |  [132,117,132]  |
    40  |                         R = R + 2;  |      2  |    4  |    132  |  0  |    1  |  [132,117,132]  |
    44  |                         j = j + 1;  |         |    4  |    132  |  0  |    2  |  [132,117,132]  |
    45  |              resetPlaceHolder_2();  |         |    4  |    132  |  0  |    2  |  [132,117,132]  |
    51  |                         R = R + 2;  |      2  |    6  |    132  |  0  |    2  |  [132,117,132]  |
    55  |                         j = j + 1;  |         |    6  |    132  |  0  |    3  |  [132,117,132]  |
    56  |              resetPlaceHolder_2();  |         |    6  |    132  |  0  |    3  |  [132,117,132]  |
    62  |                         R = R + 2;  |      2  |    8  |    132  |  0  |    3  |  [132,117,132]  |
    66  |                         j = j + 1;  |         |    8  |    132  |  0  |    4  |  [132,117,132]  |
    67  |              resetPlaceHolder_2();  |         |    8  |    132  |  0  |    4  |  [132,117,132]  |
    73  |                         R = R + 2;  |      2  |   10  |    132  |  0  |    4  |  [132,117,132]  |
    77  |                         j = j + 1;  |         |   10  |    132  |  0  |    5  |  [132,117,132]  |
    78  |              resetPlaceHolder_2();  |         |   10  |    132  |  0  |    5  |  [132,117,132]  |
    84  |                         R = R + 2;  |      2  |   12  |    132  |  0  |    5  |  [132,117,132]  |
    88  |                         j = j + 1;  |         |   12  |    132  |  0  |    6  |  [132,117,132]  |
    89  |              resetPlaceHolder_2();  |         |   12  |    132  |  0  |    6  |  [132,117,132]  |
    95  |                         R = R + 2;  |      2  |   14  |    132  |  0  |    6  |  [132,117,132]  |
    99  |                         j = j + 1;  |         |   14  |    132  |  0  |    7  |  [132,117,132]  |
   100  |              resetPlaceHolder_2();  |         |   14  |    132  |  0  |    7  |  [132,117,132]  |
   106  |                         R = R + 2;  |      2  |   16  |    132  |  0  |    7  |  [132,117,132]  |
   110  |                         j = j + 1;  |         |   16  |    132  |  0  |    8  |  [132,117,132]  |
   111  |              resetPlaceHolder_2();  |         |   16  |    132  |  0  |    8  |  [132,117,132]  |
   117  |                         R = R + 2;  |      2  |   18  |    132  |  0  |    8  |  [132,117,132]  |
   121  |                         j = j + 1;  |         |   18  |    132  |  0  |    9  |  [132,117,132]  |
   122  |              resetPlaceHolder_2();  |         |   18  |    132  |  0  |    9  |  [132,117,132]  |
   128  |                         R = R + 2;  |      2  |   20  |    132  |  0  |    9  |  [132,117,132]  |
   132  |                         j = j + 1;  |         |   20  |    132  |  0  |   10  |  [132,117,132]  |
   133  |              resetPlaceHolder_2();  |         |   20  |    132  |  0  |   10  |  [132,117,132]  |
   139  |                         R = R + 2;  |      2  |   22  |    132  |  0  |   10  |  [132,117,132]  |
   143  |                         j = j + 1;  |         |   22  |    132  |  0  |   11  |  [132,117,132]  |
   144  |              resetPlaceHolder_2();  |         |   22  |    132  |  0  |   11  |  [132,117,132]  |
   150  |                         R = R + 2;  |      2  |   24  |    132  |  0  |   11  |  [132,117,132]  |
   154  |                         j = j + 1;  |         |   24  |    132  |  0  |   12  |  [132,117,132]  |
   155  |              resetPlaceHolder_2();  |         |   24  |    132  |  0  |   12  |  [132,117,132]  |
   161  |                         R = R + 2;  |      2  |   26  |    132  |  0  |   12  |  [132,117,132]  |
   165  |                         j = j + 1;  |         |   26  |    132  |  0  |   13  |  [132,117,132]  |
   166  |              resetPlaceHolder_2();  |         |   26  |    132  |  0  |   13  |  [132,117,132]  |
   172  |                         R = R + 2;  |      2  |   28  |    132  |  0  |   13  |  [132,117,132]  |
   176  |                         j = j + 1;  |         |   28  |    132  |  0  |   14  |  [132,117,132]  |
   177  |              resetPlaceHolder_2();  |         |   28  |    132  |  0  |   14  |  [132,117,132]  |
   183  |                         R = R + 2;  |      2  |   30  |    132  |  0  |   14  |  [132,117,132]  |
   187  |                         j = j + 1;  |         |   30  |    132  |  0  |   15  |  [132,117,132]  |
   188  |              resetPlaceHolder_2();  |         |   30  |    132  |  0  |   15  |  [132,117,132]  |
   194  |                         R = R + 2;  |      2  |   32  |    132  |  0  |   15  |  [132,117,132]  |
   198  |                         j = j + 1;  |         |   32  |    132  |  0  |   16  |  [132,117,132]  |
   199  |              resetPlaceHolder_2();  |         |   32  |    132  |  0  |   16  |  [132,117,132]  |
   205  |                         R = R + 2;  |      2  |   34  |    132  |  0  |   16  |  [132,117,132]  |
   209  |                         j = j + 1;  |         |   34  |    132  |  0  |   17  |  [132,117,132]  |
   210  |              resetPlaceHolder_2();  |         |   34  |    132  |  0  |   17  |  [132,117,132]  |
   216  |                         R = R + 2;  |      2  |   36  |    132  |  0  |   17  |  [132,117,132]  |
   220  |                         j = j + 1;  |         |   36  |    132  |  0  |   18  |  [132,117,132]  |
   221  |              resetPlaceHolder_2();  |         |   36  |    132  |  0  |   18  |  [132,117,132]  |
   227  |                         R = R + 2;  |      2  |   38  |    132  |  0  |   18  |  [132,117,132]  |
   231  |                         j = j + 1;  |         |   38  |    132  |  0  |   19  |  [132,117,132]  |
   232  |              resetPlaceHolder_2();  |         |   38  |    132  |  0  |   19  |  [132,117,132]  |
   238  |                         R = R + 2;  |      2  |   40  |    132  |  0  |   19  |  [132,117,132]  |
   242  |                         j = j + 1;  |         |   40  |    132  |  0  |   20  |  [132,117,132]  |
   243  |              resetPlaceHolder_2();  |         |   40  |    132  |  0  |   20  |  [132,117,132]  |
   249  |                         R = R + 2;  |      2  |   42  |    132  |  0  |   20  |  [132,117,132]  |
   253  |                         j = j + 1;  |         |   42  |    132  |  0  |   21  |  [132,117,132]  |
   254  |              resetPlaceHolder_2();  |         |   42  |    132  |  0  |   21  |  [132,117,132]  |
   260  |                         R = R + 2;  |      2  |   44  |    132  |  0  |   21  |  [132,117,132]  |
   264  |                         j = j + 1;  |         |   44  |    132  |  0  |   22  |  [132,117,132]  |
   265  |              resetPlaceHolder_2();  |         |   44  |    132  |  0  |   22  |  [132,117,132]  |
   271  |                         R = R + 2;  |      2  |   46  |    132  |  0  |   22  |  [132,117,132]  |
   275  |                         j = j + 1;  |         |   46  |    132  |  0  |   23  |  [132,117,132]  |
   276  |              resetPlaceHolder_2();  |         |   46  |    132  |  0  |   23  |  [132,117,132]  |
   282  |                         R = R + 2;  |      2  |   48  |    132  |  0  |   23  |  [132,117,132]  |
   286  |                         j = j + 1;  |         |   48  |    132  |  0  |   24  |  [132,117,132]  |
   287  |              resetPlaceHolder_2();  |         |   48  |    132  |  0  |   24  |  [132,117,132]  |
   293  |                         R = R + 2;  |      2  |   50  |    132  |  0  |   24  |  [132,117,132]  |
   297  |                         j = j + 1;  |         |   50  |    132  |  0  |   25  |  [132,117,132]  |
   298  |              resetPlaceHolder_2();  |         |   50  |    132  |  0  |   25  |  [132,117,132]  |
   304  |                         R = R + 2;  |      2  |   52  |    132  |  0  |   25  |  [132,117,132]  |
   308  |                         j = j + 1;  |         |   52  |    132  |  0  |   26  |  [132,117,132]  |
   309  |              resetPlaceHolder_2();  |         |   52  |    132  |  0  |   26  |  [132,117,132]  |
   315  |                         R = R + 2;  |      2  |   54  |    132  |  0  |   26  |  [132,117,132]  |
   319  |                         j = j + 1;  |         |   54  |    132  |  0  |   27  |  [132,117,132]  |
   320  |              resetPlaceHolder_2();  |         |   54  |    132  |  0  |   27  |  [132,117,132]  |
   326  |                         R = R + 2;  |      2  |   56  |    132  |  0  |   27  |  [132,117,132]  |
   330  |                         j = j + 1;  |         |   56  |    132  |  0  |   28  |  [132,117,132]  |
   331  |              resetPlaceHolder_2();  |         |   56  |    132  |  0  |   28  |  [132,117,132]  |
   337  |                         R = R + 2;  |      2  |   58  |    132  |  0  |   28  |  [132,117,132]  |
   341  |                         j = j + 1;  |         |   58  |    132  |  0  |   29  |  [132,117,132]  |
   342  |              resetPlaceHolder_2();  |         |   58  |    132  |  0  |   29  |  [132,117,132]  |
   348  |                         R = R + 2;  |      2  |   60  |    132  |  0  |   29  |  [132,117,132]  |
   352  |                         j = j + 1;  |         |   60  |    132  |  0  |   30  |  [132,117,132]  |
   353  |              resetPlaceHolder_2();  |         |   60  |    132  |  0  |   30  |  [132,117,132]  |
   359  |                         R = R + 2;  |      2  |   62  |    132  |  0  |   30  |  [132,117,132]  |
   363  |                         j = j + 1;  |         |   62  |    132  |  0  |   31  |  [132,117,132]  |
   364  |              resetPlaceHolder_2();  |         |   62  |    132  |  0  |   31  |  [132,117,132]  |
   370  |                         R = R + 2;  |      2  |   64  |    132  |  0  |   31  |  [132,117,132]  |
   374  |                         j = j + 1;  |         |   64  |    132  |  0  |   32  |  [132,117,132]  |
   375  |              resetPlaceHolder_2();  |         |   64  |    132  |  0  |   32  |  [132,117,132]  |
   381  |                         R = R + 2;  |      2  |   66  |    132  |  0  |   32  |  [132,117,132]  |
   385  |                         j = j + 1;  |         |   66  |    132  |  0  |   33  |  [132,117,132]  |
   386  |              resetPlaceHolder_2();  |         |   66  |    132  |  0  |   33  |  [132,117,132]  |
   392  |                         R = R + 2;  |      2  |   68  |    132  |  0  |   33  |  [132,117,132]  |
   396  |                         j = j + 1;  |         |   68  |    132  |  0  |   34  |  [132,117,132]  |
   397  |              resetPlaceHolder_2();  |         |   68  |    132  |  0  |   34  |  [132,117,132]  |
   403  |                         R = R + 2;  |      2  |   70  |    132  |  0  |   34  |  [132,117,132]  |
   407  |                         j = j + 1;  |         |   70  |    132  |  0  |   35  |  [132,117,132]  |
   408  |              resetPlaceHolder_2();  |         |   70  |    132  |  0  |   35  |  [132,117,132]  |
   414  |                         R = R + 2;  |      2  |   72  |    132  |  0  |   35  |  [132,117,132]  |
   418  |                         j = j + 1;  |         |   72  |    132  |  0  |   36  |  [132,117,132]  |
   419  |              resetPlaceHolder_2();  |         |   72  |    132  |  0  |   36  |  [132,117,132]  |
   425  |                         R = R + 2;  |      2  |   74  |    132  |  0  |   36  |  [132,117,132]  |
   429  |                         j = j + 1;  |         |   74  |    132  |  0  |   37  |  [132,117,132]  |
   430  |              resetPlaceHolder_2();  |         |   74  |    132  |  0  |   37  |  [132,117,132]  |
   436  |                         R = R + 2;  |      2  |   76  |    132  |  0  |   37  |  [132,117,132]  |
   440  |                         j = j + 1;  |         |   76  |    132  |  0  |   38  |  [132,117,132]  |
   441  |              resetPlaceHolder_2();  |         |   76  |    132  |  0  |   38  |  [132,117,132]  |
   447  |                         R = R + 2;  |      2  |   78  |    132  |  0  |   38  |  [132,117,132]  |
   451  |                         j = j + 1;  |         |   78  |    132  |  0  |   39  |  [132,117,132]  |
   452  |              resetPlaceHolder_2();  |         |   78  |    132  |  0  |   39  |  [132,117,132]  |
   458  |                         R = R + 2;  |      2  |   80  |    132  |  0  |   39  |  [132,117,132]  |
   462  |                         j = j + 1;  |         |   80  |    132  |  0  |   40  |  [132,117,132]  |
   463  |              resetPlaceHolder_2();  |         |   80  |    132  |  0  |   40  |  [132,117,132]  |
   469  |                         R = R + 2;  |      2  |   82  |    132  |  0  |   40  |  [132,117,132]  |
   473  |                         j = j + 1;  |         |   82  |    132  |  0  |   41  |  [132,117,132]  |
   474  |              resetPlaceHolder_2();  |         |   82  |    132  |  0  |   41  |  [132,117,132]  |
   480  |                         R = R + 2;  |      2  |   84  |    132  |  0  |   41  |  [132,117,132]  |
   484  |                         j = j + 1;  |         |   84  |    132  |  0  |   42  |  [132,117,132]  |
   485  |              resetPlaceHolder_2();  |         |   84  |    132  |  0  |   42  |  [132,117,132]  |
   491  |                         R = R + 2;  |      2  |   86  |    132  |  0  |   42  |  [132,117,132]  |
   495  |                         j = j + 1;  |         |   86  |    132  |  0  |   43  |  [132,117,132]  |
   496  |              resetPlaceHolder_2();  |         |   86  |    132  |  0  |   43  |  [132,117,132]  |
   502  |                         R = R + 2;  |      2  |   88  |    132  |  0  |   43  |  [132,117,132]  |
   506  |                         j = j + 1;  |         |   88  |    132  |  0  |   44  |  [132,117,132]  |
   507  |              resetPlaceHolder_2();  |         |   88  |    132  |  0  |   44  |  [132,117,132]  |
   513  |                         R = R + 2;  |      2  |   90  |    132  |  0  |   44  |  [132,117,132]  |
   517  |                         j = j + 1;  |         |   90  |    132  |  0  |   45  |  [132,117,132]  |
   518  |              resetPlaceHolder_2();  |         |   90  |    132  |  0  |   45  |  [132,117,132]  |
   524  |                         R = R + 2;  |      2  |   92  |    132  |  0  |   45  |  [132,117,132]  |
   528  |                         j = j + 1;  |         |   92  |    132  |  0  |   46  |  [132,117,132]  |
   529  |              resetPlaceHolder_2();  |         |   92  |    132  |  0  |   46  |  [132,117,132]  |
   535  |                         R = R + 2;  |      2  |   94  |    132  |  0  |   46  |  [132,117,132]  |
   539  |                         j = j + 1;  |         |   94  |    132  |  0  |   47  |  [132,117,132]  |
   540  |              resetPlaceHolder_2();  |         |   94  |    132  |  0  |   47  |  [132,117,132]  |
   546  |                         R = R + 2;  |      2  |   96  |    132  |  0  |   47  |  [132,117,132]  |
   550  |                         j = j + 1;  |         |   96  |    132  |  0  |   48  |  [132,117,132]  |
   551  |              resetPlaceHolder_2();  |         |   96  |    132  |  0  |   48  |  [132,117,132]  |
   557  |                         R = R + 2;  |      2  |   98  |    132  |  0  |   48  |  [132,117,132]  |
   561  |                         j = j + 1;  |         |   98  |    132  |  0  |   49  |  [132,117,132]  |
   562  |              resetPlaceHolder_2();  |         |   98  |    132  |  0  |   49  |  [132,117,132]  |
   568  |                         R = R + 2;  |      2  |  100  |    132  |  0  |   49  |  [132,117,132]  |
   572  |                         j = j + 1;  |         |  100  |    132  |  0  |   50  |  [132,117,132]  |
   573  |              resetPlaceHolder_2();  |         |  100  |    132  |  0  |   50  |  [132,117,132]  |
   579  |                         R = R + 2;  |      2  |  102  |    132  |  0  |   50  |  [132,117,132]  |
   583  |                         j = j + 1;  |         |  102  |    132  |  0  |   51  |  [132,117,132]  |
   584  |              resetPlaceHolder_2();  |         |  102  |    132  |  0  |   51  |  [132,117,132]  |
   590  |                         R = R + 2;  |      2  |  104  |    132  |  0  |   51  |  [132,117,132]  |
   594  |                         j = j + 1;  |         |  104  |    132  |  0  |   52  |  [132,117,132]  |
   595  |              resetPlaceHolder_2();  |         |  104  |    132  |  0  |   52  |  [132,117,132]  |
   601  |                         R = R + 2;  |      2  |  106  |    132  |  0  |   52  |  [132,117,132]  |
   605  |                         j = j + 1;  |         |  106  |    132  |  0  |   53  |  [132,117,132]  |
   606  |              resetPlaceHolder_2();  |         |  106  |    132  |  0  |   53  |  [132,117,132]  |
   612  |                         R = R + 2;  |      2  |  108  |    132  |  0  |   53  |  [132,117,132]  |
   616  |                         j = j + 1;  |         |  108  |    132  |  0  |   54  |  [132,117,132]  |
   617  |              resetPlaceHolder_2();  |         |  108  |    132  |  0  |   54  |  [132,117,132]  |
   623  |                         R = R + 2;  |      2  |  110  |    132  |  0  |   54  |  [132,117,132]  |
   627  |                         j = j + 1;  |         |  110  |    132  |  0  |   55  |  [132,117,132]  |
   628  |              resetPlaceHolder_2();  |         |  110  |    132  |  0  |   55  |  [132,117,132]  |
   634  |                         R = R + 2;  |      2  |  112  |    132  |  0  |   55  |  [132,117,132]  |
   638  |                         j = j + 1;  |         |  112  |    132  |  0  |   56  |  [132,117,132]  |
   639  |              resetPlaceHolder_2();  |         |  112  |    132  |  0  |   56  |  [132,117,132]  |
   645  |                         R = R + 2;  |      2  |  114  |    132  |  0  |   56  |  [132,117,132]  |
   649  |                         j = j + 1;  |         |  114  |    132  |  0  |   57  |  [132,117,132]  |
   650  |              resetPlaceHolder_2();  |         |  114  |    132  |  0  |   57  |  [132,117,132]  |
   656  |                         R = R + 2;  |      2  |  116  |    132  |  0  |   57  |  [132,117,132]  |
   660  |                         j = j + 1;  |         |  116  |    132  |  0  |   58  |  [132,117,132]  |
   661  |              resetPlaceHolder_2();  |         |  116  |    132  |  0  |   58  |  [132,117,132]  |
   667  |                         R = R + 2;  |      2  |  118  |    132  |  0  |   58  |  [132,117,132]  |
   671  |                         j = j + 1;  |         |  118  |    132  |  0  |   59  |  [132,117,132]  |
   672  |              resetPlaceHolder_2();  |         |  118  |    132  |  0  |   59  |  [132,117,132]  |
   678  |                         R = R + 2;  |      2  |  120  |    132  |  0  |   59  |  [132,117,132]  |
   682  |                         j = j + 1;  |         |  120  |    132  |  0  |   60  |  [132,117,132]  |
   683  |              resetPlaceHolder_2();  |         |  120  |    132  |  0  |   60  |  [132,117,132]  |
   689  |                         R = R + 2;  |      2  |  122  |    132  |  0  |   60  |  [132,117,132]  |
   693  |                         j = j + 1;  |         |  122  |    132  |  0  |   61  |  [132,117,132]  |
   694  |              resetPlaceHolder_2();  |         |  122  |    132  |  0  |   61  |  [132,117,132]  |
   700  |                         R = R + 2;  |      2  |  124  |    132  |  0  |   61  |  [132,117,132]  |
   704  |                         j = j + 1;  |         |  124  |    132  |  0  |   62  |  [132,117,132]  |
   705  |              resetPlaceHolder_2();  |         |  124  |    132  |  0  |   62  |  [132,117,132]  |
   711  |                         R = R + 2;  |      2  |  126  |    132  |  0  |   62  |  [132,117,132]  |
   715  |                         j = j + 1;  |         |  126  |    132  |  0  |   63  |  [132,117,132]  |
   716  |              resetPlaceHolder_2();  |         |  126  |    132  |  0  |   63  |  [132,117,132]  |
   722  |                         R = R + 2;  |      2  |  128  |    132  |  0  |   63  |  [132,117,132]  |
   726  |                         j = j + 1;  |         |  128  |    132  |  0  |   64  |  [132,117,132]  |
   727  |              resetPlaceHolder_2();  |         |  128  |    132  |  0  |   64  |  [132,117,132]  |
   733  |                         R = R + 2;  |      2  |  130  |    132  |  0  |   64  |  [132,117,132]  |
   737  |                         j = j + 1;  |         |  130  |    132  |  0  |   65  |  [132,117,132]  |
   738  |              resetPlaceHolder_2();  |         |  130  |    132  |  0  |   65  |  [132,117,132]  |
   744  |                         R = R + 2;  |      2  |  132  |    132  |  0  |   65  |  [132,117,132]  |
   748  |                         j = j + 1;  |         |  132  |    132  |  0  |   66  |  [132,117,132]  |
   749  |              resetPlaceHolder_2();  |         |  132  |    132  |  0  |   66  |  [132,117,132]  |
   755  |                         R = R + 2;  |      2  |  134  |    132  |  0  |   66  |  [132,117,132]  |
   759  |                         j = j + 1;  |         |  134  |    132  |  0  |   67  |  [132,117,132]  |
   760  |              resetPlaceHolder_2();  |         |  134  |    132  |  0  |   67  |  [132,117,132]  |
   766  |                         R = R + 2;  |      2  |  136  |    132  |  0  |   67  |  [132,117,132]  |
   770  |                         j = j + 1;  |         |  136  |    132  |  0  |   68  |  [132,117,132]  |
   771  |              resetPlaceHolder_2();  |         |  136  |    132  |  0  |   68  |  [132,117,132]  |
   777  |                         R = R + 2;  |      2  |  138  |    132  |  0  |   68  |  [132,117,132]  |
   781  |                         j = j + 1;  |         |  138  |    132  |  0  |   69  |  [132,117,132]  |
   782  |              resetPlaceHolder_2();  |         |  138  |    132  |  0  |   69  |  [132,117,132]  |
   788  |                         R = R + 2;  |      2  |  140  |    132  |  0  |   69  |  [132,117,132]  |
   792  |                         j = j + 1;  |         |  140  |    132  |  0  |   70  |  [132,117,132]  |
   793  |              resetPlaceHolder_2();  |         |  140  |    132  |  0  |   70  |  [132,117,132]  |
   799  |                         R = R + 2;  |      2  |  142  |    132  |  0  |   70  |  [132,117,132]  |
   803  |                         j = j + 1;  |         |  142  |    132  |  0  |   71  |  [132,117,132]  |
   804  |              resetPlaceHolder_2();  |         |  142  |    132  |  0  |   71  |  [132,117,132]  |
   810  |                         R = R + 2;  |      2  |  144  |    132  |  0  |   71  |  [132,117,132]  |
   814  |                         j = j + 1;  |         |  144  |    132  |  0  |   72  |  [132,117,132]  |
   815  |              resetPlaceHolder_2();  |         |  144  |    132  |  0  |   72  |  [132,117,132]  |
   821  |                         R = R + 2;  |      2  |  146  |    132  |  0  |   72  |  [132,117,132]  |
   825  |                         j = j + 1;  |         |  146  |    132  |  0  |   73  |  [132,117,132]  |
   826  |              resetPlaceHolder_2();  |         |  146  |    132  |  0  |   73  |  [132,117,132]  |
   832  |                         R = R + 2;  |      2  |  148  |    132  |  0  |   73  |  [132,117,132]  |
   836  |                         j = j + 1;  |         |  148  |    132  |  0  |   74  |  [132,117,132]  |
   837  |              resetPlaceHolder_2();  |         |  148  |    132  |  0  |   74  |  [132,117,132]  |
   843  |                         R = R + 2;  |      2  |  150  |    132  |  0  |   74  |  [132,117,132]  |
   847  |                         j = j + 1;  |         |  150  |    132  |  0  |   75  |  [132,117,132]  |
   848  |              resetPlaceHolder_2();  |         |  150  |    132  |  0  |   75  |  [132,117,132]  |
   854  |                         R = R + 2;  |      2  |  152  |    132  |  0  |   75  |  [132,117,132]  |
   858  |                         j = j + 1;  |         |  152  |    132  |  0  |   76  |  [132,117,132]  |
   859  |              resetPlaceHolder_2();  |         |  152  |    132  |  0  |   76  |  [132,117,132]  |
   865  |                         R = R + 2;  |      2  |  154  |    132  |  0  |   76  |  [132,117,132]  |
   869  |                         j = j + 1;  |         |  154  |    132  |  0  |   77  |  [132,117,132]  |
   870  |              resetPlaceHolder_2();  |         |  154  |    132  |  0  |   77  |  [132,117,132]  |
   876  |                         R = R + 2;  |      2  |  156  |    132  |  0  |   77  |  [132,117,132]  |
   880  |                         j = j + 1;  |         |  156  |    132  |  0  |   78  |  [132,117,132]  |
   881  |              resetPlaceHolder_2();  |         |  156  |    132  |  0  |   78  |  [132,117,132]  |
   887  |                         R = R + 2;  |      2  |  158  |    132  |  0  |   78  |  [132,117,132]  |
   891  |                         j = j + 1;  |         |  158  |    132  |  0  |   79  |  [132,117,132]  |
   892  |              resetPlaceHolder_2();  |         |  158  |    132  |  0  |   79  |  [132,117,132]  |
   898  |                         R = R + 2;  |      2  |  160  |    132  |  0  |   79  |  [132,117,132]  |
   902  |                         j = j + 1;  |         |  160  |    132  |  0  |   80  |  [132,117,132]  |
   903  |              resetPlaceHolder_2();  |         |  160  |    132  |  0  |   80  |  [132,117,132]  |
   909  |                         R = R + 2;  |      2  |  162  |    132  |  0  |   80  |  [132,117,132]  |
   913  |                         j = j + 1;  |         |  162  |    132  |  0  |   81  |  [132,117,132]  |
   914  |              resetPlaceHolder_2();  |         |  162  |    132  |  0  |   81  |  [132,117,132]  |
   920  |                         R = R + 2;  |      2  |  164  |    132  |  0  |   81  |  [132,117,132]  |
   924  |                         j = j + 1;  |         |  164  |    132  |  0  |   82  |  [132,117,132]  |
   925  |              resetPlaceHolder_2();  |         |  164  |    132  |  0  |   82  |  [132,117,132]  |
   931  |                         R = R + 2;  |      2  |  166  |    132  |  0  |   82  |  [132,117,132]  |
   935  |                         j = j + 1;  |         |  166  |    132  |  0  |   83  |  [132,117,132]  |
   936  |              resetPlaceHolder_2();  |         |  166  |    132  |  0  |   83  |  [132,117,132]  |
   942  |                         R = R + 2;  |      2  |  168  |    132  |  0  |   83  |  [132,117,132]  |
   946  |                         j = j + 1;  |         |  168  |    132  |  0  |   84  |  [132,117,132]  |
   947  |              resetPlaceHolder_2();  |         |  168  |    132  |  0  |   84  |  [132,117,132]  |
   953  |                         R = R + 2;  |      2  |  170  |    132  |  0  |   84  |  [132,117,132]  |
   957  |                         j = j + 1;  |         |  170  |    132  |  0  |   85  |  [132,117,132]  |
   958  |              resetPlaceHolder_2();  |         |  170  |    132  |  0  |   85  |  [132,117,132]  |
   964  |                         R = R + 2;  |      2  |  172  |    132  |  0  |   85  |  [132,117,132]  |
   968  |                         j = j + 1;  |         |  172  |    132  |  0  |   86  |  [132,117,132]  |
   969  |              resetPlaceHolder_2();  |         |  172  |    132  |  0  |   86  |  [132,117,132]  |
   975  |                         R = R + 2;  |      2  |  174  |    132  |  0  |   86  |  [132,117,132]  |
   979  |                         j = j + 1;  |         |  174  |    132  |  0  |   87  |  [132,117,132]  |
   980  |              resetPlaceHolder_2();  |         |  174  |    132  |  0  |   87  |  [132,117,132]  |
   986  |                         R = R + 2;  |      2  |  176  |    132  |  0  |   87  |  [132,117,132]  |
   990  |                         j = j + 1;  |         |  176  |    132  |  0  |   88  |  [132,117,132]  |
   991  |              resetPlaceHolder_2();  |         |  176  |    132  |  0  |   88  |  [132,117,132]  |
   997  |                         R = R + 2;  |      2  |  178  |    132  |  0  |   88  |  [132,117,132]  |
  1001  |                         j = j + 1;  |         |  178  |    132  |  0  |   89  |  [132,117,132]  |
  1002  |              resetPlaceHolder_2();  |         |  178  |    132  |  0  |   89  |  [132,117,132]  |
  1008  |                         R = R + 2;  |      2  |  180  |    132  |  0  |   89  |  [132,117,132]  |
  1012  |                         j = j + 1;  |         |  180  |    132  |  0  |   90  |  [132,117,132]  |
  1013  |              resetPlaceHolder_2();  |         |  180  |    132  |  0  |   90  |  [132,117,132]  |
  1019  |                         R = R + 2;  |      2  |  182  |    132  |  0  |   90  |  [132,117,132]  |
  1023  |                         j = j + 1;  |         |  182  |    132  |  0  |   91  |  [132,117,132]  |
  1024  |              resetPlaceHolder_2();  |         |  182  |    132  |  0  |   91  |  [132,117,132]  |
  1030  |                         R = R + 2;  |      2  |  184  |    132  |  0  |   91  |  [132,117,132]  |
  1034  |                         j = j + 1;  |         |  184  |    132  |  0  |   92  |  [132,117,132]  |
  1035  |              resetPlaceHolder_2();  |         |  184  |    132  |  0  |   92  |  [132,117,132]  |
  1041  |                         R = R + 2;  |      2  |  186  |    132  |  0  |   92  |  [132,117,132]  |
  1045  |                         j = j + 1;  |         |  186  |    132  |  0  |   93  |  [132,117,132]  |
  1046  |              resetPlaceHolder_2();  |         |  186  |    132  |  0  |   93  |  [132,117,132]  |
  1052  |                         R = R + 2;  |      2  |  188  |    132  |  0  |   93  |  [132,117,132]  |
  1056  |                         j = j + 1;  |         |  188  |    132  |  0  |   94  |  [132,117,132]  |
  1057  |              resetPlaceHolder_2();  |         |  188  |    132  |  0  |   94  |  [132,117,132]  |
  1063  |                         R = R + 2;  |      2  |  190  |    132  |  0  |   94  |  [132,117,132]  |
  1067  |                         j = j + 1;  |         |  190  |    132  |  0  |   95  |  [132,117,132]  |
  1068  |              resetPlaceHolder_2();  |         |  190  |    132  |  0  |   95  |  [132,117,132]  |
  1074  |                         R = R + 2;  |      2  |  192  |    132  |  0  |   95  |  [132,117,132]  |
  1078  |                         j = j + 1;  |         |  192  |    132  |  0  |   96  |  [132,117,132]  |
  1079  |              resetPlaceHolder_2();  |         |  192  |    132  |  0  |   96  |  [132,117,132]  |
  1085  |                         R = R + 2;  |      2  |  194  |    132  |  0  |   96  |  [132,117,132]  |
  1089  |                         j = j + 1;  |         |  194  |    132  |  0  |   97  |  [132,117,132]  |
  1090  |              resetPlaceHolder_2();  |         |  194  |    132  |  0  |   97  |  [132,117,132]  |
  1096  |                         R = R + 2;  |      2  |  196  |    132  |  0  |   97  |  [132,117,132]  |
  1100  |                         j = j + 1;  |         |  196  |    132  |  0  |   98  |  [132,117,132]  |
  1101  |              resetPlaceHolder_2();  |         |  196  |    132  |  0  |   98  |  [132,117,132]  |
  1107  |                         R = R + 2;  |      2  |  198  |    132  |  0  |   98  |  [132,117,132]  |
  1111  |                         j = j + 1;  |         |  198  |    132  |  0  |   99  |  [132,117,132]  |
  1112  |              resetPlaceHolder_2();  |         |  198  |    132  |  0  |   99  |  [132,117,132]  |
  1118  |                         R = R + 2;  |      2  |  200  |    132  |  0  |   99  |  [132,117,132]  |
  1122  |                         j = j + 1;  |         |  200  |    132  |  0  |  100  |  [132,117,132]  |
  1123  |              resetPlaceHolder_2();  |         |  200  |    132  |  0  |  100  |  [132,117,132]  |
  1129  |                         R = R + 2;  |      2  |  202  |    132  |  0  |  100  |  [132,117,132]  |
  1133  |                         j = j + 1;  |         |  202  |    132  |  0  |  101  |  [132,117,132]  |
  1134  |              resetPlaceHolder_2();  |         |  202  |    132  |  0  |  101  |  [132,117,132]  |
  1140  |                         R = R + 2;  |      2  |  204  |    132  |  0  |  101  |  [132,117,132]  |
  1144  |                         j = j + 1;  |         |  204  |    132  |  0  |  102  |  [132,117,132]  |
  1145  |              resetPlaceHolder_2();  |         |  204  |    132  |  0  |  102  |  [132,117,132]  |
  1151  |                         R = R + 2;  |      2  |  206  |    132  |  0  |  102  |  [132,117,132]  |
  1155  |                         j = j + 1;  |         |  206  |    132  |  0  |  103  |  [132,117,132]  |
  1156  |              resetPlaceHolder_2();  |         |  206  |    132  |  0  |  103  |  [132,117,132]  |
  1162  |                         R = R + 2;  |      2  |  208  |    132  |  0  |  103  |  [132,117,132]  |
  1166  |                         j = j + 1;  |         |  208  |    132  |  0  |  104  |  [132,117,132]  |
  1167  |              resetPlaceHolder_2();  |         |  208  |    132  |  0  |  104  |  [132,117,132]  |
  1173  |                         R = R + 2;  |      2  |  210  |    132  |  0  |  104  |  [132,117,132]  |
  1177  |                         j = j + 1;  |         |  210  |    132  |  0  |  105  |  [132,117,132]  |
  1178  |              resetPlaceHolder_2();  |         |  210  |    132  |  0  |  105  |  [132,117,132]  |
  1184  |                         R = R + 2;  |      2  |  212  |    132  |  0  |  105  |  [132,117,132]  |
  1188  |                         j = j + 1;  |         |  212  |    132  |  0  |  106  |  [132,117,132]  |
  1189  |              resetPlaceHolder_2();  |         |  212  |    132  |  0  |  106  |  [132,117,132]  |
  1195  |                         R = R + 2;  |      2  |  214  |    132  |  0  |  106  |  [132,117,132]  |
  1199  |                         j = j + 1;  |         |  214  |    132  |  0  |  107  |  [132,117,132]  |
  1200  |              resetPlaceHolder_2();  |         |  214  |    132  |  0  |  107  |  [132,117,132]  |
  1206  |                         R = R + 2;  |      2  |  216  |    132  |  0  |  107  |  [132,117,132]  |
  1210  |                         j = j + 1;  |         |  216  |    132  |  0  |  108  |  [132,117,132]  |
  1211  |              resetPlaceHolder_2();  |         |  216  |    132  |  0  |  108  |  [132,117,132]  |
  1217  |                         R = R + 2;  |      2  |  218  |    132  |  0  |  108  |  [132,117,132]  |
  1221  |                         j = j + 1;  |         |  218  |    132  |  0  |  109  |  [132,117,132]  |
  1222  |              resetPlaceHolder_2();  |         |  218  |    132  |  0  |  109  |  [132,117,132]  |
  1228  |                         R = R + 2;  |      2  |  220  |    132  |  0  |  109  |  [132,117,132]  |
  1232  |                         j = j + 1;  |         |  220  |    132  |  0  |  110  |  [132,117,132]  |
  1233  |              resetPlaceHolder_2();  |         |  220  |    132  |  0  |  110  |  [132,117,132]  |
  1239  |                         R = R + 2;  |      2  |  222  |    132  |  0  |  110  |  [132,117,132]  |
  1243  |                         j = j + 1;  |         |  222  |    132  |  0  |  111  |  [132,117,132]  |
  1244  |              resetPlaceHolder_2();  |         |  222  |    132  |  0  |  111  |  [132,117,132]  |
  1250  |                         R = R + 2;  |      2  |  224  |    132  |  0  |  111  |  [132,117,132]  |
  1254  |                         j = j + 1;  |         |  224  |    132  |  0  |  112  |  [132,117,132]  |
  1255  |              resetPlaceHolder_2();  |         |  224  |    132  |  0  |  112  |  [132,117,132]  |
  1261  |                         R = R + 2;  |      2  |  226  |    132  |  0  |  112  |  [132,117,132]  |
  1265  |                         j = j + 1;  |         |  226  |    132  |  0  |  113  |  [132,117,132]  |
  1266  |              resetPlaceHolder_2();  |         |  226  |    132  |  0  |  113  |  [132,117,132]  |
  1272  |                         R = R + 2;  |      2  |  228  |    132  |  0  |  113  |  [132,117,132]  |
  1276  |                         j = j + 1;  |         |  228  |    132  |  0  |  114  |  [132,117,132]  |
  1277  |              resetPlaceHolder_2();  |         |  228  |    132  |  0  |  114  |  [132,117,132]  |
  1283  |                         R = R + 2;  |      2  |  230  |    132  |  0  |  114  |  [132,117,132]  |
  1287  |                         j = j + 1;  |         |  230  |    132  |  0  |  115  |  [132,117,132]  |
  1288  |              resetPlaceHolder_2();  |         |  230  |    132  |  0  |  115  |  [132,117,132]  |
  1294  |                         R = R + 2;  |      2  |  232  |    132  |  0  |  115  |  [132,117,132]  |
  1298  |                         j = j + 1;  |         |  232  |    132  |  0  |  116  |  [132,117,132]  |
  1299  |              resetPlaceHolder_2();  |         |  232  |    132  |  0  |  116  |  [132,117,132]  |
  1305  |                         R = R + 2;  |      2  |  234  |    132  |  0  |  116  |  [132,117,132]  |
  1309  |                         j = j + 1;  |         |  234  |    132  |  0  |  117  |  [132,117,132]  |
  1310  |              resetPlaceHolder_2();  |         |  234  |    132  |  0  |  117  |  [132,117,132]  |
  1316  |                         R = R + 2;  |      2  |  236  |    132  |  0  |  117  |  [132,117,132]  |
  1320  |                         j = j + 1;  |         |  236  |    132  |  0  |  118  |  [132,117,132]  |
  1321  |              resetPlaceHolder_2();  |         |  236  |    132  |  0  |  118  |  [132,117,132]  |
  1327  |                         R = R + 2;  |      2  |  238  |    132  |  0  |  118  |  [132,117,132]  |
  1331  |                         j = j + 1;  |         |  238  |    132  |  0  |  119  |  [132,117,132]  |
  1332  |              resetPlaceHolder_2();  |         |  238  |    132  |  0  |  119  |  [132,117,132]  |
  1338  |                         R = R + 2;  |      2  |  240  |    132  |  0  |  119  |  [132,117,132]  |
  1342  |                         j = j + 1;  |         |  240  |    132  |  0  |  120  |  [132,117,132]  |
  1343  |              resetPlaceHolder_2();  |         |  240  |    132  |  0  |  120  |  [132,117,132]  |
  1349  |                         R = R + 2;  |      2  |  242  |    132  |  0  |  120  |  [132,117,132]  |
  1353  |                         j = j + 1;  |         |  242  |    132  |  0  |  121  |  [132,117,132]  |
  1354  |              resetPlaceHolder_2();  |         |  242  |    132  |  0  |  121  |  [132,117,132]  |
  1360  |                         R = R + 2;  |      2  |  244  |    132  |  0  |  121  |  [132,117,132]  |
  1364  |                         j = j + 1;  |         |  244  |    132  |  0  |  122  |  [132,117,132]  |
  1365  |              resetPlaceHolder_2();  |         |  244  |    132  |  0  |  122  |  [132,117,132]  |
  1371  |                         R = R + 2;  |      2  |  246  |    132  |  0  |  122  |  [132,117,132]  |
  1375  |                         j = j + 1;  |         |  246  |    132  |  0  |  123  |  [132,117,132]  |
  1376  |              resetPlaceHolder_2();  |         |  246  |    132  |  0  |  123  |  [132,117,132]  |
  1382  |                         R = R + 2;  |      2  |  248  |    132  |  0  |  123  |  [132,117,132]  |
  1386  |                         j = j + 1;  |         |  248  |    132  |  0  |  124  |  [132,117,132]  |
  1387  |              resetPlaceHolder_2();  |         |  248  |    132  |  0  |  124  |  [132,117,132]  |
  1393  |                         R = R + 2;  |      2  |  250  |    132  |  0  |  124  |  [132,117,132]  |
  1397  |                         j = j + 1;  |         |  250  |    132  |  0  |  125  |  [132,117,132]  |
  1398  |              resetPlaceHolder_2();  |         |  250  |    132  |  0  |  125  |  [132,117,132]  |
  1404  |                         R = R + 2;  |      2  |  252  |    132  |  0  |  125  |  [132,117,132]  |
  1408  |                         j = j + 1;  |         |  252  |    132  |  0  |  126  |  [132,117,132]  |
  1409  |              resetPlaceHolder_2();  |         |  252  |    132  |  0  |  126  |  [132,117,132]  |
  1415  |                         R = R + 2;  |      2  |  254  |    132  |  0  |  126  |  [132,117,132]  |
  1419  |                         j = j + 1;  |         |  254  |    132  |  0  |  127  |  [132,117,132]  |
  1420  |              resetPlaceHolder_2();  |         |  254  |    132  |  0  |  127  |  [132,117,132]  |
  1426  |                         R = R + 2;  |      2  |  256  |    132  |  0  |  127  |  [132,117,132]  |
  1430  |                         j = j + 1;  |         |  256  |    132  |  0  |  128  |  [132,117,132]  |
  1431  |              resetPlaceHolder_2();  |         |  256  |    132  |  0  |  128  |  [132,117,132]  |
  1437  |                         R = R + 2;  |      2  |  258  |    132  |  0  |  128  |  [132,117,132]  |
  1441  |                         j = j + 1;  |         |  258  |    132  |  0  |  129  |  [132,117,132]  |
  1442  |              resetPlaceHolder_2();  |         |  258  |    132  |  0  |  129  |  [132,117,132]  |
  1448  |                         R = R + 2;  |      2  |  260  |    132  |  0  |  129  |  [132,117,132]  |
  1452  |                         j = j + 1;  |         |  260  |    132  |  0  |  130  |  [132,117,132]  |
  1453  |              resetPlaceHolder_2();  |         |  260  |    132  |  0  |  130  |  [132,117,132]  |
  1459  |                         R = R + 2;  |      2  |  262  |    132  |  0  |  130  |  [132,117,132]  |
  1463  |                         j = j + 1;  |         |  262  |    132  |  0  |  131  |  [132,117,132]  |
  1464  |              resetPlaceHolder_2();  |         |  262  |    132  |  0  |  131  |  [132,117,132]  |
  1470  |                         R = R + 2;  |      2  |  264  |    132  |  0  |  131  |  [132,117,132]  |
  1474  |                         j = j + 1;  |         |  264  |    132  |  0  |  132  |  [132,117,132]  |
  1475  |              resetPlaceHolder_2();  |         |  264  |    132  |  0  |  132  |  [132,117,132]  |
  1481  |                         R = R + 1;  |      1  |  265  |    132  |  0  |  132  |  [132,117,132]  |
  1485  |                         i = i + 1;  |         |  265  |    132  |  1  |  132  |  [132,117,132]  |
  1486  |              resetPlaceHolder_1();  |         |  265  |    132  |  1  |  132  |  [132,117,132]  |
  1492  |      entry = arrayRead(sorted, i);  |         |  265  |    117  |  1  |  132  |  [132,117,132]  |
  1494  |                         int j = 0;  |         |  265  |    117  |  1  |    0  |  [132,117,132]  |
  1500  |                         R = R + 2;  |      2  |  267  |    117  |  1  |    0  |  [132,117,132]  |
  1504  |                         j = j + 1;  |         |  267  |    117  |  1  |    1  |  [132,117,132]  |
  1505  |              resetPlaceHolder_2();  |         |  267  |    117  |  1  |    1  |  [132,117,132]  |
  1511  |                         R = R + 2;  |      2  |  269  |    117  |  1  |    1  |  [132,117,132]  |
  1515  |                         j = j + 1;  |         |  269  |    117  |  1  |    2  |  [132,117,132]  |
  1516  |              resetPlaceHolder_2();  |         |  269  |    117  |  1  |    2  |  [132,117,132]  |
  1522  |                         R = R + 2;  |      2  |  271  |    117  |  1  |    2  |  [132,117,132]  |
  1526  |                         j = j + 1;  |         |  271  |    117  |  1  |    3  |  [132,117,132]  |
  1527  |              resetPlaceHolder_2();  |         |  271  |    117  |  1  |    3  |  [132,117,132]  |
  1533  |                         R = R + 2;  |      2  |  273  |    117  |  1  |    3  |  [132,117,132]  |
  1537  |                         j = j + 1;  |         |  273  |    117  |  1  |    4  |  [132,117,132]  |
  1538  |              resetPlaceHolder_2();  |         |  273  |    117  |  1  |    4  |  [132,117,132]  |
  1544  |                         R = R + 2;  |      2  |  275  |    117  |  1  |    4  |  [132,117,132]  |
  1548  |                         j = j + 1;  |         |  275  |    117  |  1  |    5  |  [132,117,132]  |
  1549  |              resetPlaceHolder_2();  |         |  275  |    117  |  1  |    5  |  [132,117,132]  |
  1555  |                         R = R + 2;  |      2  |  277  |    117  |  1  |    5  |  [132,117,132]  |
  1559  |                         j = j + 1;  |         |  277  |    117  |  1  |    6  |  [132,117,132]  |
  1560  |              resetPlaceHolder_2();  |         |  277  |    117  |  1  |    6  |  [132,117,132]  |
  1566  |                         R = R + 2;  |      2  |  279  |    117  |  1  |    6  |  [132,117,132]  |
  1570  |                         j = j + 1;  |         |  279  |    117  |  1  |    7  |  [132,117,132]  |
  1571  |              resetPlaceHolder_2();  |         |  279  |    117  |  1  |    7  |  [132,117,132]  |
  1577  |                         R = R + 2;  |      2  |  281  |    117  |  1  |    7  |  [132,117,132]  |
  1581  |                         j = j + 1;  |         |  281  |    117  |  1  |    8  |  [132,117,132]  |
  1582  |              resetPlaceHolder_2();  |         |  281  |    117  |  1  |    8  |  [132,117,132]  |
  1588  |                         R = R + 2;  |      2  |  283  |    117  |  1  |    8  |  [132,117,132]  |
  1592  |                         j = j + 1;  |         |  283  |    117  |  1  |    9  |  [132,117,132]  |
  1593  |              resetPlaceHolder_2();  |         |  283  |    117  |  1  |    9  |  [132,117,132]  |
  1599  |                         R = R + 2;  |      2  |  285  |    117  |  1  |    9  |  [132,117,132]  |
  1603  |                         j = j + 1;  |         |  285  |    117  |  1  |   10  |  [132,117,132]  |
  1604  |              resetPlaceHolder_2();  |         |  285  |    117  |  1  |   10  |  [132,117,132]  |
  1610  |                         R = R + 2;  |      2  |  287  |    117  |  1  |   10  |  [132,117,132]  |
  1614  |                         j = j + 1;  |         |  287  |    117  |  1  |   11  |  [132,117,132]  |
  1615  |              resetPlaceHolder_2();  |         |  287  |    117  |  1  |   11  |  [132,117,132]  |
  1621  |                         R = R + 2;  |      2  |  289  |    117  |  1  |   11  |  [132,117,132]  |
  1625  |                         j = j + 1;  |         |  289  |    117  |  1  |   12  |  [132,117,132]  |
  1626  |              resetPlaceHolder_2();  |         |  289  |    117  |  1  |   12  |  [132,117,132]  |
  1632  |                         R = R + 2;  |      2  |  291  |    117  |  1  |   12  |  [132,117,132]  |
  1636  |                         j = j + 1;  |         |  291  |    117  |  1  |   13  |  [132,117,132]  |
  1637  |              resetPlaceHolder_2();  |         |  291  |    117  |  1  |   13  |  [132,117,132]  |
  1643  |                         R = R + 2;  |      2  |  293  |    117  |  1  |   13  |  [132,117,132]  |
  1647  |                         j = j + 1;  |         |  293  |    117  |  1  |   14  |  [132,117,132]  |
  1648  |              resetPlaceHolder_2();  |         |  293  |    117  |  1  |   14  |  [132,117,132]  |
  1654  |                         R = R + 2;  |      2  |  295  |    117  |  1  |   14  |  [132,117,132]  |
  1658  |                         j = j + 1;  |         |  295  |    117  |  1  |   15  |  [132,117,132]  |
  1659  |              resetPlaceHolder_2();  |         |  295  |    117  |  1  |   15  |  [132,117,132]  |
  1665  |                         R = R + 2;  |      2  |  297  |    117  |  1  |   15  |  [132,117,132]  |
  1669  |                         j = j + 1;  |         |  297  |    117  |  1  |   16  |  [132,117,132]  |
  1670  |              resetPlaceHolder_2();  |         |  297  |    117  |  1  |   16  |  [132,117,132]  |
  1676  |                         R = R + 2;  |      2  |  299  |    117  |  1  |   16  |  [132,117,132]  |
  1680  |                         j = j + 1;  |         |  299  |    117  |  1  |   17  |  [132,117,132]  |
  1681  |              resetPlaceHolder_2();  |         |  299  |    117  |  1  |   17  |  [132,117,132]  |
  1687  |                         R = R + 2;  |      2  |  301  |    117  |  1  |   17  |  [132,117,132]  |
  1691  |                         j = j + 1;  |         |  301  |    117  |  1  |   18  |  [132,117,132]  |
  1692  |              resetPlaceHolder_2();  |         |  301  |    117  |  1  |   18  |  [132,117,132]  |
  1698  |                         R = R + 2;  |      2  |  303  |    117  |  1  |   18  |  [132,117,132]  |
  1702  |                         j = j + 1;  |         |  303  |    117  |  1  |   19  |  [132,117,132]  |
  1703  |              resetPlaceHolder_2();  |         |  303  |    117  |  1  |   19  |  [132,117,132]  |
  1709  |                         R = R + 2;  |      2  |  305  |    117  |  1  |   19  |  [132,117,132]  |
  1713  |                         j = j + 1;  |         |  305  |    117  |  1  |   20  |  [132,117,132]  |
  1714  |              resetPlaceHolder_2();  |         |  305  |    117  |  1  |   20  |  [132,117,132]  |
  1720  |                         R = R + 2;  |      2  |  307  |    117  |  1  |   20  |  [132,117,132]  |
  1724  |                         j = j + 1;  |         |  307  |    117  |  1  |   21  |  [132,117,132]  |
  1725  |              resetPlaceHolder_2();  |         |  307  |    117  |  1  |   21  |  [132,117,132]  |
  1731  |                         R = R + 2;  |      2  |  309  |    117  |  1  |   21  |  [132,117,132]  |
  1735  |                         j = j + 1;  |         |  309  |    117  |  1  |   22  |  [132,117,132]  |
  1736  |              resetPlaceHolder_2();  |         |  309  |    117  |  1  |   22  |  [132,117,132]  |
  1742  |                         R = R + 2;  |      2  |  311  |    117  |  1  |   22  |  [132,117,132]  |
  1746  |                         j = j + 1;  |         |  311  |    117  |  1  |   23  |  [132,117,132]  |
  1747  |              resetPlaceHolder_2();  |         |  311  |    117  |  1  |   23  |  [132,117,132]  |
  1753  |                         R = R + 2;  |      2  |  313  |    117  |  1  |   23  |  [132,117,132]  |
  1757  |                         j = j + 1;  |         |  313  |    117  |  1  |   24  |  [132,117,132]  |
  1758  |              resetPlaceHolder_2();  |         |  313  |    117  |  1  |   24  |  [132,117,132]  |
  1764  |                         R = R + 2;  |      2  |  315  |    117  |  1  |   24  |  [132,117,132]  |
  1768  |                         j = j + 1;  |         |  315  |    117  |  1  |   25  |  [132,117,132]  |
  1769  |              resetPlaceHolder_2();  |         |  315  |    117  |  1  |   25  |  [132,117,132]  |
  1775  |                         R = R + 2;  |      2  |  317  |    117  |  1  |   25  |  [132,117,132]  |
  1779  |                         j = j + 1;  |         |  317  |    117  |  1  |   26  |  [132,117,132]  |
  1780  |              resetPlaceHolder_2();  |         |  317  |    117  |  1  |   26  |  [132,117,132]  |
  1786  |                         R = R + 2;  |      2  |  319  |    117  |  1  |   26  |  [132,117,132]  |
  1790  |                         j = j + 1;  |         |  319  |    117  |  1  |   27  |  [132,117,132]  |
  1791  |              resetPlaceHolder_2();  |         |  319  |    117  |  1  |   27  |  [132,117,132]  |
  1797  |                         R = R + 2;  |      2  |  321  |    117  |  1  |   27  |  [132,117,132]  |
  1801  |                         j = j + 1;  |         |  321  |    117  |  1  |   28  |  [132,117,132]  |
  1802  |              resetPlaceHolder_2();  |         |  321  |    117  |  1  |   28  |  [132,117,132]  |
  1808  |                         R = R + 2;  |      2  |  323  |    117  |  1  |   28  |  [132,117,132]  |
  1812  |                         j = j + 1;  |         |  323  |    117  |  1  |   29  |  [132,117,132]  |
  1813  |              resetPlaceHolder_2();  |         |  323  |    117  |  1  |   29  |  [132,117,132]  |
  1819  |                         R = R + 2;  |      2  |  325  |    117  |  1  |   29  |  [132,117,132]  |
  1823  |                         j = j + 1;  |         |  325  |    117  |  1  |   30  |  [132,117,132]  |
  1824  |              resetPlaceHolder_2();  |         |  325  |    117  |  1  |   30  |  [132,117,132]  |
  1830  |                         R = R + 2;  |      2  |  327  |    117  |  1  |   30  |  [132,117,132]  |
  1834  |                         j = j + 1;  |         |  327  |    117  |  1  |   31  |  [132,117,132]  |
  1835  |              resetPlaceHolder_2();  |         |  327  |    117  |  1  |   31  |  [132,117,132]  |
  1841  |                         R = R + 2;  |      2  |  329  |    117  |  1  |   31  |  [132,117,132]  |
  1845  |                         j = j + 1;  |         |  329  |    117  |  1  |   32  |  [132,117,132]  |
  1846  |              resetPlaceHolder_2();  |         |  329  |    117  |  1  |   32  |  [132,117,132]  |
  1852  |                         R = R + 2;  |      2  |  331  |    117  |  1  |   32  |  [132,117,132]  |
  1856  |                         j = j + 1;  |         |  331  |    117  |  1  |   33  |  [132,117,132]  |
  1857  |              resetPlaceHolder_2();  |         |  331  |    117  |  1  |   33  |  [132,117,132]  |
  1863  |                         R = R + 2;  |      2  |  333  |    117  |  1  |   33  |  [132,117,132]  |
  1867  |                         j = j + 1;  |         |  333  |    117  |  1  |   34  |  [132,117,132]  |
  1868  |              resetPlaceHolder_2();  |         |  333  |    117  |  1  |   34  |  [132,117,132]  |
  1874  |                         R = R + 2;  |      2  |  335  |    117  |  1  |   34  |  [132,117,132]  |
  1878  |                         j = j + 1;  |         |  335  |    117  |  1  |   35  |  [132,117,132]  |
  1879  |              resetPlaceHolder_2();  |         |  335  |    117  |  1  |   35  |  [132,117,132]  |
  1885  |                         R = R + 2;  |      2  |  337  |    117  |  1  |   35  |  [132,117,132]  |
  1889  |                         j = j + 1;  |         |  337  |    117  |  1  |   36  |  [132,117,132]  |
  1890  |              resetPlaceHolder_2();  |         |  337  |    117  |  1  |   36  |  [132,117,132]  |
  1896  |                         R = R + 2;  |      2  |  339  |    117  |  1  |   36  |  [132,117,132]  |
  1900  |                         j = j + 1;  |         |  339  |    117  |  1  |   37  |  [132,117,132]  |
  1901  |              resetPlaceHolder_2();  |         |  339  |    117  |  1  |   37  |  [132,117,132]  |
  1907  |                         R = R + 2;  |      2  |  341  |    117  |  1  |   37  |  [132,117,132]  |
  1911  |                         j = j + 1;  |         |  341  |    117  |  1  |   38  |  [132,117,132]  |
  1912  |              resetPlaceHolder_2();  |         |  341  |    117  |  1  |   38  |  [132,117,132]  |
  1918  |                         R = R + 2;  |      2  |  343  |    117  |  1  |   38  |  [132,117,132]  |
  1922  |                         j = j + 1;  |         |  343  |    117  |  1  |   39  |  [132,117,132]  |
  1923  |              resetPlaceHolder_2();  |         |  343  |    117  |  1  |   39  |  [132,117,132]  |
  1929  |                         R = R + 2;  |      2  |  345  |    117  |  1  |   39  |  [132,117,132]  |
  1933  |                         j = j + 1;  |         |  345  |    117  |  1  |   40  |  [132,117,132]  |
  1934  |              resetPlaceHolder_2();  |         |  345  |    117  |  1  |   40  |  [132,117,132]  |
  1940  |                         R = R + 2;  |      2  |  347  |    117  |  1  |   40  |  [132,117,132]  |
  1944  |                         j = j + 1;  |         |  347  |    117  |  1  |   41  |  [132,117,132]  |
  1945  |              resetPlaceHolder_2();  |         |  347  |    117  |  1  |   41  |  [132,117,132]  |
  1951  |                         R = R + 2;  |      2  |  349  |    117  |  1  |   41  |  [132,117,132]  |
  1955  |                         j = j + 1;  |         |  349  |    117  |  1  |   42  |  [132,117,132]  |
  1956  |              resetPlaceHolder_2();  |         |  349  |    117  |  1  |   42  |  [132,117,132]  |
  1962  |                         R = R + 2;  |      2  |  351  |    117  |  1  |   42  |  [132,117,132]  |
  1966  |                         j = j + 1;  |         |  351  |    117  |  1  |   43  |  [132,117,132]  |
  1967  |              resetPlaceHolder_2();  |         |  351  |    117  |  1  |   43  |  [132,117,132]  |
  1973  |                         R = R + 2;  |      2  |  353  |    117  |  1  |   43  |  [132,117,132]  |
  1977  |                         j = j + 1;  |         |  353  |    117  |  1  |   44  |  [132,117,132]  |
  1978  |              resetPlaceHolder_2();  |         |  353  |    117  |  1  |   44  |  [132,117,132]  |
  1984  |                         R = R + 2;  |      2  |  355  |    117  |  1  |   44  |  [132,117,132]  |
  1988  |                         j = j + 1;  |         |  355  |    117  |  1  |   45  |  [132,117,132]  |
  1989  |              resetPlaceHolder_2();  |         |  355  |    117  |  1  |   45  |  [132,117,132]  |
  1995  |                         R = R + 2;  |      2  |  357  |    117  |  1  |   45  |  [132,117,132]  |
  1999  |                         j = j + 1;  |         |  357  |    117  |  1  |   46  |  [132,117,132]  |
  2000  |              resetPlaceHolder_2();  |         |  357  |    117  |  1  |   46  |  [132,117,132]  |
  2006  |                         R = R + 2;  |      2  |  359  |    117  |  1  |   46  |  [132,117,132]  |
  2010  |                         j = j + 1;  |         |  359  |    117  |  1  |   47  |  [132,117,132]  |
  2011  |              resetPlaceHolder_2();  |         |  359  |    117  |  1  |   47  |  [132,117,132]  |
  2017  |                         R = R + 2;  |      2  |  361  |    117  |  1  |   47  |  [132,117,132]  |
  2021  |                         j = j + 1;  |         |  361  |    117  |  1  |   48  |  [132,117,132]  |
  2022  |              resetPlaceHolder_2();  |         |  361  |    117  |  1  |   48  |  [132,117,132]  |
  2028  |                         R = R + 2;  |      2  |  363  |    117  |  1  |   48  |  [132,117,132]  |
  2032  |                         j = j + 1;  |         |  363  |    117  |  1  |   49  |  [132,117,132]  |
  2033  |              resetPlaceHolder_2();  |         |  363  |    117  |  1  |   49  |  [132,117,132]  |
  2039  |                         R = R + 2;  |      2  |  365  |    117  |  1  |   49  |  [132,117,132]  |
  2043  |                         j = j + 1;  |         |  365  |    117  |  1  |   50  |  [132,117,132]  |
  2044  |              resetPlaceHolder_2();  |         |  365  |    117  |  1  |   50  |  [132,117,132]  |
  2050  |                         R = R + 2;  |      2  |  367  |    117  |  1  |   50  |  [132,117,132]  |
  2054  |                         j = j + 1;  |         |  367  |    117  |  1  |   51  |  [132,117,132]  |
  2055  |              resetPlaceHolder_2();  |         |  367  |    117  |  1  |   51  |  [132,117,132]  |
  2061  |                         R = R + 2;  |      2  |  369  |    117  |  1  |   51  |  [132,117,132]  |
  2065  |                         j = j + 1;  |         |  369  |    117  |  1  |   52  |  [132,117,132]  |
  2066  |              resetPlaceHolder_2();  |         |  369  |    117  |  1  |   52  |  [132,117,132]  |
  2072  |                         R = R + 2;  |      2  |  371  |    117  |  1  |   52  |  [132,117,132]  |
  2076  |                         j = j + 1;  |         |  371  |    117  |  1  |   53  |  [132,117,132]  |
  2077  |              resetPlaceHolder_2();  |         |  371  |    117  |  1  |   53  |  [132,117,132]  |
  2083  |                         R = R + 2;  |      2  |  373  |    117  |  1  |   53  |  [132,117,132]  |
  2087  |                         j = j + 1;  |         |  373  |    117  |  1  |   54  |  [132,117,132]  |
  2088  |              resetPlaceHolder_2();  |         |  373  |    117  |  1  |   54  |  [132,117,132]  |
  2094  |                         R = R + 2;  |      2  |  375  |    117  |  1  |   54  |  [132,117,132]  |
  2098  |                         j = j + 1;  |         |  375  |    117  |  1  |   55  |  [132,117,132]  |
  2099  |              resetPlaceHolder_2();  |         |  375  |    117  |  1  |   55  |  [132,117,132]  |
  2105  |                         R = R + 2;  |      2  |  377  |    117  |  1  |   55  |  [132,117,132]  |
  2109  |                         j = j + 1;  |         |  377  |    117  |  1  |   56  |  [132,117,132]  |
  2110  |              resetPlaceHolder_2();  |         |  377  |    117  |  1  |   56  |  [132,117,132]  |
  2116  |                         R = R + 2;  |      2  |  379  |    117  |  1  |   56  |  [132,117,132]  |
  2120  |                         j = j + 1;  |         |  379  |    117  |  1  |   57  |  [132,117,132]  |
  2121  |              resetPlaceHolder_2();  |         |  379  |    117  |  1  |   57  |  [132,117,132]  |
  2127  |                         R = R + 2;  |      2  |  381  |    117  |  1  |   57  |  [132,117,132]  |
  2131  |                         j = j + 1;  |         |  381  |    117  |  1  |   58  |  [132,117,132]  |
  2132  |              resetPlaceHolder_2();  |         |  381  |    117  |  1  |   58  |  [132,117,132]  |
  2138  |                         R = R + 2;  |      2  |  383  |    117  |  1  |   58  |  [132,117,132]  |
  2142  |                         j = j + 1;  |         |  383  |    117  |  1  |   59  |  [132,117,132]  |
  2143  |              resetPlaceHolder_2();  |         |  383  |    117  |  1  |   59  |  [132,117,132]  |
  2149  |                         R = R + 2;  |      2  |  385  |    117  |  1  |   59  |  [132,117,132]  |
  2153  |                         j = j + 1;  |         |  385  |    117  |  1  |   60  |  [132,117,132]  |
  2154  |              resetPlaceHolder_2();  |         |  385  |    117  |  1  |   60  |  [132,117,132]  |
  2160  |                         R = R + 2;  |      2  |  387  |    117  |  1  |   60  |  [132,117,132]  |
  2164  |                         j = j + 1;  |         |  387  |    117  |  1  |   61  |  [132,117,132]  |
  2165  |              resetPlaceHolder_2();  |         |  387  |    117  |  1  |   61  |  [132,117,132]  |
  2171  |                         R = R + 2;  |      2  |  389  |    117  |  1  |   61  |  [132,117,132]  |
  2175  |                         j = j + 1;  |         |  389  |    117  |  1  |   62  |  [132,117,132]  |
  2176  |              resetPlaceHolder_2();  |         |  389  |    117  |  1  |   62  |  [132,117,132]  |
  2182  |                         R = R + 2;  |      2  |  391  |    117  |  1  |   62  |  [132,117,132]  |
  2186  |                         j = j + 1;  |         |  391  |    117  |  1  |   63  |  [132,117,132]  |
  2187  |              resetPlaceHolder_2();  |         |  391  |    117  |  1  |   63  |  [132,117,132]  |
  2193  |                         R = R + 2;  |      2  |  393  |    117  |  1  |   63  |  [132,117,132]  |
  2197  |                         j = j + 1;  |         |  393  |    117  |  1  |   64  |  [132,117,132]  |
  2198  |              resetPlaceHolder_2();  |         |  393  |    117  |  1  |   64  |  [132,117,132]  |
  2204  |                         R = R + 2;  |      2  |  395  |    117  |  1  |   64  |  [132,117,132]  |
  2208  |                         j = j + 1;  |         |  395  |    117  |  1  |   65  |  [132,117,132]  |
  2209  |              resetPlaceHolder_2();  |         |  395  |    117  |  1  |   65  |  [132,117,132]  |
  2215  |                         R = R + 2;  |      2  |  397  |    117  |  1  |   65  |  [132,117,132]  |
  2219  |                         j = j + 1;  |         |  397  |    117  |  1  |   66  |  [132,117,132]  |
  2220  |              resetPlaceHolder_2();  |         |  397  |    117  |  1  |   66  |  [132,117,132]  |
  2226  |                         R = R + 2;  |      2  |  399  |    117  |  1  |   66  |  [132,117,132]  |
  2230  |                         j = j + 1;  |         |  399  |    117  |  1  |   67  |  [132,117,132]  |
  2231  |              resetPlaceHolder_2();  |         |  399  |    117  |  1  |   67  |  [132,117,132]  |
  2237  |                         R = R + 2;  |      2  |  401  |    117  |  1  |   67  |  [132,117,132]  |
  2241  |                         j = j + 1;  |         |  401  |    117  |  1  |   68  |  [132,117,132]  |
  2242  |              resetPlaceHolder_2();  |         |  401  |    117  |  1  |   68  |  [132,117,132]  |
  2248  |                         R = R + 2;  |      2  |  403  |    117  |  1  |   68  |  [132,117,132]  |
  2252  |                         j = j + 1;  |         |  403  |    117  |  1  |   69  |  [132,117,132]  |
  2253  |              resetPlaceHolder_2();  |         |  403  |    117  |  1  |   69  |  [132,117,132]  |
  2259  |                         R = R + 2;  |      2  |  405  |    117  |  1  |   69  |  [132,117,132]  |
  2263  |                         j = j + 1;  |         |  405  |    117  |  1  |   70  |  [132,117,132]  |
  2264  |              resetPlaceHolder_2();  |         |  405  |    117  |  1  |   70  |  [132,117,132]  |
  2270  |                         R = R + 2;  |      2  |  407  |    117  |  1  |   70  |  [132,117,132]  |
  2274  |                         j = j + 1;  |         |  407  |    117  |  1  |   71  |  [132,117,132]  |
  2275  |              resetPlaceHolder_2();  |         |  407  |    117  |  1  |   71  |  [132,117,132]  |
  2281  |                         R = R + 2;  |      2  |  409  |    117  |  1  |   71  |  [132,117,132]  |
  2285  |                         j = j + 1;  |         |  409  |    117  |  1  |   72  |  [132,117,132]  |
  2286  |              resetPlaceHolder_2();  |         |  409  |    117  |  1  |   72  |  [132,117,132]  |
  2292  |                         R = R + 2;  |      2  |  411  |    117  |  1  |   72  |  [132,117,132]  |
  2296  |                         j = j + 1;  |         |  411  |    117  |  1  |   73  |  [132,117,132]  |
  2297  |              resetPlaceHolder_2();  |         |  411  |    117  |  1  |   73  |  [132,117,132]  |
  2303  |                         R = R + 2;  |      2  |  413  |    117  |  1  |   73  |  [132,117,132]  |
  2307  |                         j = j + 1;  |         |  413  |    117  |  1  |   74  |  [132,117,132]  |
  2308  |              resetPlaceHolder_2();  |         |  413  |    117  |  1  |   74  |  [132,117,132]  |
  2314  |                         R = R + 2;  |      2  |  415  |    117  |  1  |   74  |  [132,117,132]  |
  2318  |                         j = j + 1;  |         |  415  |    117  |  1  |   75  |  [132,117,132]  |
  2319  |              resetPlaceHolder_2();  |         |  415  |    117  |  1  |   75  |  [132,117,132]  |
  2325  |                         R = R + 2;  |      2  |  417  |    117  |  1  |   75  |  [132,117,132]  |
  2329  |                         j = j + 1;  |         |  417  |    117  |  1  |   76  |  [132,117,132]  |
  2330  |              resetPlaceHolder_2();  |         |  417  |    117  |  1  |   76  |  [132,117,132]  |
  2336  |                         R = R + 2;  |      2  |  419  |    117  |  1  |   76  |  [132,117,132]  |
  2340  |                         j = j + 1;  |         |  419  |    117  |  1  |   77  |  [132,117,132]  |
  2341  |              resetPlaceHolder_2();  |         |  419  |    117  |  1  |   77  |  [132,117,132]  |
  2347  |                         R = R + 2;  |      2  |  421  |    117  |  1  |   77  |  [132,117,132]  |
  2351  |                         j = j + 1;  |         |  421  |    117  |  1  |   78  |  [132,117,132]  |
  2352  |              resetPlaceHolder_2();  |         |  421  |    117  |  1  |   78  |  [132,117,132]  |
  2358  |                         R = R + 2;  |      2  |  423  |    117  |  1  |   78  |  [132,117,132]  |
  2362  |                         j = j + 1;  |         |  423  |    117  |  1  |   79  |  [132,117,132]  |
  2363  |              resetPlaceHolder_2();  |         |  423  |    117  |  1  |   79  |  [132,117,132]  |
  2369  |                         R = R + 2;  |      2  |  425  |    117  |  1  |   79  |  [132,117,132]  |
  2373  |                         j = j + 1;  |         |  425  |    117  |  1  |   80  |  [132,117,132]  |
  2374  |              resetPlaceHolder_2();  |         |  425  |    117  |  1  |   80  |  [132,117,132]  |
  2380  |                         R = R + 2;  |      2  |  427  |    117  |  1  |   80  |  [132,117,132]  |
  2384  |                         j = j + 1;  |         |  427  |    117  |  1  |   81  |  [132,117,132]  |
  2385  |              resetPlaceHolder_2();  |         |  427  |    117  |  1  |   81  |  [132,117,132]  |
  2391  |                         R = R + 2;  |      2  |  429  |    117  |  1  |   81  |  [132,117,132]  |
  2395  |                         j = j + 1;  |         |  429  |    117  |  1  |   82  |  [132,117,132]  |
  2396  |              resetPlaceHolder_2();  |         |  429  |    117  |  1  |   82  |  [132,117,132]  |
  2402  |                         R = R + 2;  |      2  |  431  |    117  |  1  |   82  |  [132,117,132]  |
  2406  |                         j = j + 1;  |         |  431  |    117  |  1  |   83  |  [132,117,132]  |
  2407  |              resetPlaceHolder_2();  |         |  431  |    117  |  1  |   83  |  [132,117,132]  |
  2413  |                         R = R + 2;  |      2  |  433  |    117  |  1  |   83  |  [132,117,132]  |
  2417  |                         j = j + 1;  |         |  433  |    117  |  1  |   84  |  [132,117,132]  |
  2418  |              resetPlaceHolder_2();  |         |  433  |    117  |  1  |   84  |  [132,117,132]  |
  2424  |                         R = R + 2;  |      2  |  435  |    117  |  1  |   84  |  [132,117,132]  |
  2428  |                         j = j + 1;  |         |  435  |    117  |  1  |   85  |  [132,117,132]  |
  2429  |              resetPlaceHolder_2();  |         |  435  |    117  |  1  |   85  |  [132,117,132]  |
  2435  |                         R = R + 2;  |      2  |  437  |    117  |  1  |   85  |  [132,117,132]  |
  2439  |                         j = j + 1;  |         |  437  |    117  |  1  |   86  |  [132,117,132]  |
  2440  |              resetPlaceHolder_2();  |         |  437  |    117  |  1  |   86  |  [132,117,132]  |
  2446  |                         R = R + 2;  |      2  |  439  |    117  |  1  |   86  |  [132,117,132]  |
  2450  |                         j = j + 1;  |         |  439  |    117  |  1  |   87  |  [132,117,132]  |
  2451  |              resetPlaceHolder_2();  |         |  439  |    117  |  1  |   87  |  [132,117,132]  |
  2457  |                         R = R + 2;  |      2  |  441  |    117  |  1  |   87  |  [132,117,132]  |
  2461  |                         j = j + 1;  |         |  441  |    117  |  1  |   88  |  [132,117,132]  |
  2462  |              resetPlaceHolder_2();  |         |  441  |    117  |  1  |   88  |  [132,117,132]  |
  2468  |                         R = R + 2;  |      2  |  443  |    117  |  1  |   88  |  [132,117,132]  |
  2472  |                         j = j + 1;  |         |  443  |    117  |  1  |   89  |  [132,117,132]  |
  2473  |              resetPlaceHolder_2();  |         |  443  |    117  |  1  |   89  |  [132,117,132]  |
  2479  |                         R = R + 2;  |      2  |  445  |    117  |  1  |   89  |  [132,117,132]  |
  2483  |                         j = j + 1;  |         |  445  |    117  |  1  |   90  |  [132,117,132]  |
  2484  |              resetPlaceHolder_2();  |         |  445  |    117  |  1  |   90  |  [132,117,132]  |
  2490  |                         R = R + 2;  |      2  |  447  |    117  |  1  |   90  |  [132,117,132]  |
  2494  |                         j = j + 1;  |         |  447  |    117  |  1  |   91  |  [132,117,132]  |
  2495  |              resetPlaceHolder_2();  |         |  447  |    117  |  1  |   91  |  [132,117,132]  |
  2501  |                         R = R + 2;  |      2  |  449  |    117  |  1  |   91  |  [132,117,132]  |
  2505  |                         j = j + 1;  |         |  449  |    117  |  1  |   92  |  [132,117,132]  |
  2506  |              resetPlaceHolder_2();  |         |  449  |    117  |  1  |   92  |  [132,117,132]  |
  2512  |                         R = R + 2;  |      2  |  451  |    117  |  1  |   92  |  [132,117,132]  |
  2516  |                         j = j + 1;  |         |  451  |    117  |  1  |   93  |  [132,117,132]  |
  2517  |              resetPlaceHolder_2();  |         |  451  |    117  |  1  |   93  |  [132,117,132]  |
  2523  |                         R = R + 2;  |      2  |  453  |    117  |  1  |   93  |  [132,117,132]  |
  2527  |                         j = j + 1;  |         |  453  |    117  |  1  |   94  |  [132,117,132]  |
  2528  |              resetPlaceHolder_2();  |         |  453  |    117  |  1  |   94  |  [132,117,132]  |
  2534  |                         R = R + 2;  |      2  |  455  |    117  |  1  |   94  |  [132,117,132]  |
  2538  |                         j = j + 1;  |         |  455  |    117  |  1  |   95  |  [132,117,132]  |
  2539  |              resetPlaceHolder_2();  |         |  455  |    117  |  1  |   95  |  [132,117,132]  |
  2545  |                         R = R + 2;  |      2  |  457  |    117  |  1  |   95  |  [132,117,132]  |
  2549  |                         j = j + 1;  |         |  457  |    117  |  1  |   96  |  [132,117,132]  |
  2550  |              resetPlaceHolder_2();  |         |  457  |    117  |  1  |   96  |  [132,117,132]  |
  2556  |                         R = R + 2;  |      2  |  459  |    117  |  1  |   96  |  [132,117,132]  |
  2560  |                         j = j + 1;  |         |  459  |    117  |  1  |   97  |  [132,117,132]  |
  2561  |              resetPlaceHolder_2();  |         |  459  |    117  |  1  |   97  |  [132,117,132]  |
  2567  |                         R = R + 2;  |      2  |  461  |    117  |  1  |   97  |  [132,117,132]  |
  2571  |                         j = j + 1;  |         |  461  |    117  |  1  |   98  |  [132,117,132]  |
  2572  |              resetPlaceHolder_2();  |         |  461  |    117  |  1  |   98  |  [132,117,132]  |
  2578  |                         R = R + 2;  |      2  |  463  |    117  |  1  |   98  |  [132,117,132]  |
  2582  |                         j = j + 1;  |         |  463  |    117  |  1  |   99  |  [132,117,132]  |
  2583  |              resetPlaceHolder_2();  |         |  463  |    117  |  1  |   99  |  [132,117,132]  |
  2589  |                         R = R + 2;  |      2  |  465  |    117  |  1  |   99  |  [132,117,132]  |
  2593  |                         j = j + 1;  |         |  465  |    117  |  1  |  100  |  [132,117,132]  |
  2594  |              resetPlaceHolder_2();  |         |  465  |    117  |  1  |  100  |  [132,117,132]  |
  2600  |                         R = R + 2;  |      2  |  467  |    117  |  1  |  100  |  [132,117,132]  |
  2604  |                         j = j + 1;  |         |  467  |    117  |  1  |  101  |  [132,117,132]  |
  2605  |              resetPlaceHolder_2();  |         |  467  |    117  |  1  |  101  |  [132,117,132]  |
  2611  |                         R = R + 2;  |      2  |  469  |    117  |  1  |  101  |  [132,117,132]  |
  2615  |                         j = j + 1;  |         |  469  |    117  |  1  |  102  |  [132,117,132]  |
  2616  |              resetPlaceHolder_2();  |         |  469  |    117  |  1  |  102  |  [132,117,132]  |
  2622  |                         R = R + 2;  |      2  |  471  |    117  |  1  |  102  |  [132,117,132]  |
  2626  |                         j = j + 1;  |         |  471  |    117  |  1  |  103  |  [132,117,132]  |
  2627  |              resetPlaceHolder_2();  |         |  471  |    117  |  1  |  103  |  [132,117,132]  |
  2633  |                         R = R + 2;  |      2  |  473  |    117  |  1  |  103  |  [132,117,132]  |
  2637  |                         j = j + 1;  |         |  473  |    117  |  1  |  104  |  [132,117,132]  |
  2638  |              resetPlaceHolder_2();  |         |  473  |    117  |  1  |  104  |  [132,117,132]  |
  2644  |                         R = R + 2;  |      2  |  475  |    117  |  1  |  104  |  [132,117,132]  |
  2648  |                         j = j + 1;  |         |  475  |    117  |  1  |  105  |  [132,117,132]  |
  2649  |              resetPlaceHolder_2();  |         |  475  |    117  |  1  |  105  |  [132,117,132]  |
  2655  |                         R = R + 2;  |      2  |  477  |    117  |  1  |  105  |  [132,117,132]  |
  2659  |                         j = j + 1;  |         |  477  |    117  |  1  |  106  |  [132,117,132]  |
  2660  |              resetPlaceHolder_2();  |         |  477  |    117  |  1  |  106  |  [132,117,132]  |
  2666  |                         R = R + 2;  |      2  |  479  |    117  |  1  |  106  |  [132,117,132]  |
  2670  |                         j = j + 1;  |         |  479  |    117  |  1  |  107  |  [132,117,132]  |
  2671  |              resetPlaceHolder_2();  |         |  479  |    117  |  1  |  107  |  [132,117,132]  |
  2677  |                         R = R + 2;  |      2  |  481  |    117  |  1  |  107  |  [132,117,132]  |
  2681  |                         j = j + 1;  |         |  481  |    117  |  1  |  108  |  [132,117,132]  |
  2682  |              resetPlaceHolder_2();  |         |  481  |    117  |  1  |  108  |  [132,117,132]  |
  2688  |                         R = R + 2;  |      2  |  483  |    117  |  1  |  108  |  [132,117,132]  |
  2692  |                         j = j + 1;  |         |  483  |    117  |  1  |  109  |  [132,117,132]  |
  2693  |              resetPlaceHolder_2();  |         |  483  |    117  |  1  |  109  |  [132,117,132]  |
  2699  |                         R = R + 2;  |      2  |  485  |    117  |  1  |  109  |  [132,117,132]  |
  2703  |                         j = j + 1;  |         |  485  |    117  |  1  |  110  |  [132,117,132]  |
  2704  |              resetPlaceHolder_2();  |         |  485  |    117  |  1  |  110  |  [132,117,132]  |
  2710  |                         R = R + 2;  |      2  |  487  |    117  |  1  |  110  |  [132,117,132]  |
  2714  |                         j = j + 1;  |         |  487  |    117  |  1  |  111  |  [132,117,132]  |
  2715  |              resetPlaceHolder_2();  |         |  487  |    117  |  1  |  111  |  [132,117,132]  |
  2721  |                         R = R + 2;  |      2  |  489  |    117  |  1  |  111  |  [132,117,132]  |
  2725  |                         j = j + 1;  |         |  489  |    117  |  1  |  112  |  [132,117,132]  |
  2726  |              resetPlaceHolder_2();  |         |  489  |    117  |  1  |  112  |  [132,117,132]  |
  2732  |                         R = R + 2;  |      2  |  491  |    117  |  1  |  112  |  [132,117,132]  |
  2736  |                         j = j + 1;  |         |  491  |    117  |  1  |  113  |  [132,117,132]  |
  2737  |              resetPlaceHolder_2();  |         |  491  |    117  |  1  |  113  |  [132,117,132]  |
  2743  |                         R = R + 2;  |      2  |  493  |    117  |  1  |  113  |  [132,117,132]  |
  2747  |                         j = j + 1;  |         |  493  |    117  |  1  |  114  |  [132,117,132]  |
  2748  |              resetPlaceHolder_2();  |         |  493  |    117  |  1  |  114  |  [132,117,132]  |
  2754  |                         R = R + 2;  |      2  |  495  |    117  |  1  |  114  |  [132,117,132]  |
  2758  |                         j = j + 1;  |         |  495  |    117  |  1  |  115  |  [132,117,132]  |
  2759  |              resetPlaceHolder_2();  |         |  495  |    117  |  1  |  115  |  [132,117,132]  |
  2765  |                         R = R + 2;  |      2  |  497  |    117  |  1  |  115  |  [132,117,132]  |
  2769  |                         j = j + 1;  |         |  497  |    117  |  1  |  116  |  [132,117,132]  |
  2770  |              resetPlaceHolder_2();  |         |  497  |    117  |  1  |  116  |  [132,117,132]  |
  2776  |                         R = R + 2;  |      2  |  499  |    117  |  1  |  116  |  [132,117,132]  |
  2780  |                         j = j + 1;  |         |  499  |    117  |  1  |  117  |  [132,117,132]  |
  2781  |              resetPlaceHolder_2();  |         |  499  |    117  |  1  |  117  |  [132,117,132]  |
  2787  |                         R = R + 1;  |      1  |  500  |    117  |  1  |  117  |  [132,117,132]  |
  2791  |                         i = i + 1;  |         |  500  |    117  |  2  |  117  |  [132,117,132]  |
  2792  |              resetPlaceHolder_1();  |         |  500  |    117  |  2  |  117  |  [132,117,132]  |
  2798  |      entry = arrayRead(sorted, i);  |         |  500  |    132  |  2  |  117  |  [132,117,132]  |
  2800  |                         int j = 0;  |         |  500  |    132  |  2  |    0  |  [132,117,132]  |
  2806  |                         R = R + 2;  |      2  |  502  |    132  |  2  |    0  |  [132,117,132]  |
  2810  |                         j = j + 1;  |         |  502  |    132  |  2  |    1  |  [132,117,132]  |
  2811  |              resetPlaceHolder_2();  |         |  502  |    132  |  2  |    1  |  [132,117,132]  |
  2817  |                         R = R + 2;  |      2  |  504  |    132  |  2  |    1  |  [132,117,132]  |
  2821  |                         j = j + 1;  |         |  504  |    132  |  2  |    2  |  [132,117,132]  |
  2822  |              resetPlaceHolder_2();  |         |  504  |    132  |  2  |    2  |  [132,117,132]  |
  2828  |                         R = R + 2;  |      2  |  506  |    132  |  2  |    2  |  [132,117,132]  |
  2832  |                         j = j + 1;  |         |  506  |    132  |  2  |    3  |  [132,117,132]  |
  2833  |              resetPlaceHolder_2();  |         |  506  |    132  |  2  |    3  |  [132,117,132]  |
  2839  |                         R = R + 2;  |      2  |  508  |    132  |  2  |    3  |  [132,117,132]  |
  2843  |                         j = j + 1;  |         |  508  |    132  |  2  |    4  |  [132,117,132]  |
  2844  |              resetPlaceHolder_2();  |         |  508  |    132  |  2  |    4  |  [132,117,132]  |
  2850  |                         R = R + 2;  |      2  |  510  |    132  |  2  |    4  |  [132,117,132]  |
  2854  |                         j = j + 1;  |         |  510  |    132  |  2  |    5  |  [132,117,132]  |
  2855  |              resetPlaceHolder_2();  |         |  510  |    132  |  2  |    5  |  [132,117,132]  |
  2861  |                         R = R + 2;  |      2  |  512  |    132  |  2  |    5  |  [132,117,132]  |
  2865  |                         j = j + 1;  |         |  512  |    132  |  2  |    6  |  [132,117,132]  |
  2866  |              resetPlaceHolder_2();  |         |  512  |    132  |  2  |    6  |  [132,117,132]  |
  2872  |                         R = R + 2;  |      2  |  514  |    132  |  2  |    6  |  [132,117,132]  |
  2876  |                         j = j + 1;  |         |  514  |    132  |  2  |    7  |  [132,117,132]  |
  2877  |              resetPlaceHolder_2();  |         |  514  |    132  |  2  |    7  |  [132,117,132]  |
  2883  |                         R = R + 2;  |      2  |  516  |    132  |  2  |    7  |  [132,117,132]  |
  2887  |                         j = j + 1;  |         |  516  |    132  |  2  |    8  |  [132,117,132]  |
  2888  |              resetPlaceHolder_2();  |         |  516  |    132  |  2  |    8  |  [132,117,132]  |
  2894  |                         R = R + 2;  |      2  |  518  |    132  |  2  |    8  |  [132,117,132]  |
  2898  |                         j = j + 1;  |         |  518  |    132  |  2  |    9  |  [132,117,132]  |
  2899  |              resetPlaceHolder_2();  |         |  518  |    132  |  2  |    9  |  [132,117,132]  |
  2905  |                         R = R + 2;  |      2  |  520  |    132  |  2  |    9  |  [132,117,132]  |
  2909  |                         j = j + 1;  |         |  520  |    132  |  2  |   10  |  [132,117,132]  |
  2910  |              resetPlaceHolder_2();  |         |  520  |    132  |  2  |   10  |  [132,117,132]  |
  2916  |                         R = R + 2;  |      2  |  522  |    132  |  2  |   10  |  [132,117,132]  |
  2920  |                         j = j + 1;  |         |  522  |    132  |  2  |   11  |  [132,117,132]  |
  2921  |              resetPlaceHolder_2();  |         |  522  |    132  |  2  |   11  |  [132,117,132]  |
  2927  |                         R = R + 2;  |      2  |  524  |    132  |  2  |   11  |  [132,117,132]  |
  2931  |                         j = j + 1;  |         |  524  |    132  |  2  |   12  |  [132,117,132]  |
  2932  |              resetPlaceHolder_2();  |         |  524  |    132  |  2  |   12  |  [132,117,132]  |
  2938  |                         R = R + 2;  |      2  |  526  |    132  |  2  |   12  |  [132,117,132]  |
  2942  |                         j = j + 1;  |         |  526  |    132  |  2  |   13  |  [132,117,132]  |
  2943  |              resetPlaceHolder_2();  |         |  526  |    132  |  2  |   13  |  [132,117,132]  |
  2949  |                         R = R + 2;  |      2  |  528  |    132  |  2  |   13  |  [132,117,132]  |
  2953  |                         j = j + 1;  |         |  528  |    132  |  2  |   14  |  [132,117,132]  |
  2954  |              resetPlaceHolder_2();  |         |  528  |    132  |  2  |   14  |  [132,117,132]  |
  2960  |                         R = R + 2;  |      2  |  530  |    132  |  2  |   14  |  [132,117,132]  |
  2964  |                         j = j + 1;  |         |  530  |    132  |  2  |   15  |  [132,117,132]  |
  2965  |              resetPlaceHolder_2();  |         |  530  |    132  |  2  |   15  |  [132,117,132]  |
  2971  |                         R = R + 2;  |      2  |  532  |    132  |  2  |   15  |  [132,117,132]  |
  2975  |                         j = j + 1;  |         |  532  |    132  |  2  |   16  |  [132,117,132]  |
  2976  |              resetPlaceHolder_2();  |         |  532  |    132  |  2  |   16  |  [132,117,132]  |
  2982  |                         R = R + 2;  |      2  |  534  |    132  |  2  |   16  |  [132,117,132]  |
  2986  |                         j = j + 1;  |         |  534  |    132  |  2  |   17  |  [132,117,132]  |
  2987  |              resetPlaceHolder_2();  |         |  534  |    132  |  2  |   17  |  [132,117,132]  |
  2993  |                         R = R + 2;  |      2  |  536  |    132  |  2  |   17  |  [132,117,132]  |
  2997  |                         j = j + 1;  |         |  536  |    132  |  2  |   18  |  [132,117,132]  |
  2998  |              resetPlaceHolder_2();  |         |  536  |    132  |  2  |   18  |  [132,117,132]  |
  3004  |                         R = R + 2;  |      2  |  538  |    132  |  2  |   18  |  [132,117,132]  |
  3008  |                         j = j + 1;  |         |  538  |    132  |  2  |   19  |  [132,117,132]  |
  3009  |              resetPlaceHolder_2();  |         |  538  |    132  |  2  |   19  |  [132,117,132]  |
  3015  |                         R = R + 2;  |      2  |  540  |    132  |  2  |   19  |  [132,117,132]  |
  3019  |                         j = j + 1;  |         |  540  |    132  |  2  |   20  |  [132,117,132]  |
  3020  |              resetPlaceHolder_2();  |         |  540  |    132  |  2  |   20  |  [132,117,132]  |
  3026  |                         R = R + 2;  |      2  |  542  |    132  |  2  |   20  |  [132,117,132]  |
  3030  |                         j = j + 1;  |         |  542  |    132  |  2  |   21  |  [132,117,132]  |
  3031  |              resetPlaceHolder_2();  |         |  542  |    132  |  2  |   21  |  [132,117,132]  |
  3037  |                         R = R + 2;  |      2  |  544  |    132  |  2  |   21  |  [132,117,132]  |
  3041  |                         j = j + 1;  |         |  544  |    132  |  2  |   22  |  [132,117,132]  |
  3042  |              resetPlaceHolder_2();  |         |  544  |    132  |  2  |   22  |  [132,117,132]  |
  3048  |                         R = R + 2;  |      2  |  546  |    132  |  2  |   22  |  [132,117,132]  |
  3052  |                         j = j + 1;  |         |  546  |    132  |  2  |   23  |  [132,117,132]  |
  3053  |              resetPlaceHolder_2();  |         |  546  |    132  |  2  |   23  |  [132,117,132]  |
  3059  |                         R = R + 2;  |      2  |  548  |    132  |  2  |   23  |  [132,117,132]  |
  3063  |                         j = j + 1;  |         |  548  |    132  |  2  |   24  |  [132,117,132]  |
  3064  |              resetPlaceHolder_2();  |         |  548  |    132  |  2  |   24  |  [132,117,132]  |
  3070  |                         R = R + 2;  |      2  |  550  |    132  |  2  |   24  |  [132,117,132]  |
  3074  |                         j = j + 1;  |         |  550  |    132  |  2  |   25  |  [132,117,132]  |
  3075  |              resetPlaceHolder_2();  |         |  550  |    132  |  2  |   25  |  [132,117,132]  |
  3081  |                         R = R + 2;  |      2  |  552  |    132  |  2  |   25  |  [132,117,132]  |
  3085  |                         j = j + 1;  |         |  552  |    132  |  2  |   26  |  [132,117,132]  |
  3086  |              resetPlaceHolder_2();  |         |  552  |    132  |  2  |   26  |  [132,117,132]  |
  3092  |                         R = R + 2;  |      2  |  554  |    132  |  2  |   26  |  [132,117,132]  |
  3096  |                         j = j + 1;  |         |  554  |    132  |  2  |   27  |  [132,117,132]  |
  3097  |              resetPlaceHolder_2();  |         |  554  |    132  |  2  |   27  |  [132,117,132]  |
  3103  |                         R = R + 2;  |      2  |  556  |    132  |  2  |   27  |  [132,117,132]  |
  3107  |                         j = j + 1;  |         |  556  |    132  |  2  |   28  |  [132,117,132]  |
  3108  |              resetPlaceHolder_2();  |         |  556  |    132  |  2  |   28  |  [132,117,132]  |
  3114  |                         R = R + 2;  |      2  |  558  |    132  |  2  |   28  |  [132,117,132]  |
  3118  |                         j = j + 1;  |         |  558  |    132  |  2  |   29  |  [132,117,132]  |
  3119  |              resetPlaceHolder_2();  |         |  558  |    132  |  2  |   29  |  [132,117,132]  |
  3125  |                         R = R + 2;  |      2  |  560  |    132  |  2  |   29  |  [132,117,132]  |
  3129  |                         j = j + 1;  |         |  560  |    132  |  2  |   30  |  [132,117,132]  |
  3130  |              resetPlaceHolder_2();  |         |  560  |    132  |  2  |   30  |  [132,117,132]  |
  3136  |                         R = R + 2;  |      2  |  562  |    132  |  2  |   30  |  [132,117,132]  |
  3140  |                         j = j + 1;  |         |  562  |    132  |  2  |   31  |  [132,117,132]  |
  3141  |              resetPlaceHolder_2();  |         |  562  |    132  |  2  |   31  |  [132,117,132]  |
  3147  |                         R = R + 2;  |      2  |  564  |    132  |  2  |   31  |  [132,117,132]  |
  3151  |                         j = j + 1;  |         |  564  |    132  |  2  |   32  |  [132,117,132]  |
  3152  |              resetPlaceHolder_2();  |         |  564  |    132  |  2  |   32  |  [132,117,132]  |
  3158  |                         R = R + 2;  |      2  |  566  |    132  |  2  |   32  |  [132,117,132]  |
  3162  |                         j = j + 1;  |         |  566  |    132  |  2  |   33  |  [132,117,132]  |
  3163  |              resetPlaceHolder_2();  |         |  566  |    132  |  2  |   33  |  [132,117,132]  |
  3169  |                         R = R + 2;  |      2  |  568  |    132  |  2  |   33  |  [132,117,132]  |
  3173  |                         j = j + 1;  |         |  568  |    132  |  2  |   34  |  [132,117,132]  |
  3174  |              resetPlaceHolder_2();  |         |  568  |    132  |  2  |   34  |  [132,117,132]  |
  3180  |                         R = R + 2;  |      2  |  570  |    132  |  2  |   34  |  [132,117,132]  |
  3184  |                         j = j + 1;  |         |  570  |    132  |  2  |   35  |  [132,117,132]  |
  3185  |              resetPlaceHolder_2();  |         |  570  |    132  |  2  |   35  |  [132,117,132]  |
  3191  |                         R = R + 2;  |      2  |  572  |    132  |  2  |   35  |  [132,117,132]  |
  3195  |                         j = j + 1;  |         |  572  |    132  |  2  |   36  |  [132,117,132]  |
  3196  |              resetPlaceHolder_2();  |         |  572  |    132  |  2  |   36  |  [132,117,132]  |
  3202  |                         R = R + 2;  |      2  |  574  |    132  |  2  |   36  |  [132,117,132]  |
  3206  |                         j = j + 1;  |         |  574  |    132  |  2  |   37  |  [132,117,132]  |
  3207  |              resetPlaceHolder_2();  |         |  574  |    132  |  2  |   37  |  [132,117,132]  |
  3213  |                         R = R + 2;  |      2  |  576  |    132  |  2  |   37  |  [132,117,132]  |
  3217  |                         j = j + 1;  |         |  576  |    132  |  2  |   38  |  [132,117,132]  |
  3218  |              resetPlaceHolder_2();  |         |  576  |    132  |  2  |   38  |  [132,117,132]  |
  3224  |                         R = R + 2;  |      2  |  578  |    132  |  2  |   38  |  [132,117,132]  |
  3228  |                         j = j + 1;  |         |  578  |    132  |  2  |   39  |  [132,117,132]  |
  3229  |              resetPlaceHolder_2();  |         |  578  |    132  |  2  |   39  |  [132,117,132]  |
  3235  |                         R = R + 2;  |      2  |  580  |    132  |  2  |   39  |  [132,117,132]  |
  3239  |                         j = j + 1;  |         |  580  |    132  |  2  |   40  |  [132,117,132]  |
  3240  |              resetPlaceHolder_2();  |         |  580  |    132  |  2  |   40  |  [132,117,132]  |
  3246  |                         R = R + 2;  |      2  |  582  |    132  |  2  |   40  |  [132,117,132]  |
  3250  |                         j = j + 1;  |         |  582  |    132  |  2  |   41  |  [132,117,132]  |
  3251  |              resetPlaceHolder_2();  |         |  582  |    132  |  2  |   41  |  [132,117,132]  |
  3257  |                         R = R + 2;  |      2  |  584  |    132  |  2  |   41  |  [132,117,132]  |
  3261  |                         j = j + 1;  |         |  584  |    132  |  2  |   42  |  [132,117,132]  |
  3262  |              resetPlaceHolder_2();  |         |  584  |    132  |  2  |   42  |  [132,117,132]  |
  3268  |                         R = R + 2;  |      2  |  586  |    132  |  2  |   42  |  [132,117,132]  |
  3272  |                         j = j + 1;  |         |  586  |    132  |  2  |   43  |  [132,117,132]  |
  3273  |              resetPlaceHolder_2();  |         |  586  |    132  |  2  |   43  |  [132,117,132]  |
  3279  |                         R = R + 2;  |      2  |  588  |    132  |  2  |   43  |  [132,117,132]  |
  3283  |                         j = j + 1;  |         |  588  |    132  |  2  |   44  |  [132,117,132]  |
  3284  |              resetPlaceHolder_2();  |         |  588  |    132  |  2  |   44  |  [132,117,132]  |
  3290  |                         R = R + 2;  |      2  |  590  |    132  |  2  |   44  |  [132,117,132]  |
  3294  |                         j = j + 1;  |         |  590  |    132  |  2  |   45  |  [132,117,132]  |
  3295  |              resetPlaceHolder_2();  |         |  590  |    132  |  2  |   45  |  [132,117,132]  |
  3301  |                         R = R + 2;  |      2  |  592  |    132  |  2  |   45  |  [132,117,132]  |
  3305  |                         j = j + 1;  |         |  592  |    132  |  2  |   46  |  [132,117,132]  |
  3306  |              resetPlaceHolder_2();  |         |  592  |    132  |  2  |   46  |  [132,117,132]  |
  3312  |                         R = R + 2;  |      2  |  594  |    132  |  2  |   46  |  [132,117,132]  |
  3316  |                         j = j + 1;  |         |  594  |    132  |  2  |   47  |  [132,117,132]  |
  3317  |              resetPlaceHolder_2();  |         |  594  |    132  |  2  |   47  |  [132,117,132]  |
  3323  |                         R = R + 2;  |      2  |  596  |    132  |  2  |   47  |  [132,117,132]  |
  3327  |                         j = j + 1;  |         |  596  |    132  |  2  |   48  |  [132,117,132]  |
  3328  |              resetPlaceHolder_2();  |         |  596  |    132  |  2  |   48  |  [132,117,132]  |
  3334  |                         R = R + 2;  |      2  |  598  |    132  |  2  |   48  |  [132,117,132]  |
  3338  |                         j = j + 1;  |         |  598  |    132  |  2  |   49  |  [132,117,132]  |
  3339  |              resetPlaceHolder_2();  |         |  598  |    132  |  2  |   49  |  [132,117,132]  |
  3345  |                         R = R + 2;  |      2  |  600  |    132  |  2  |   49  |  [132,117,132]  |
  3349  |                         j = j + 1;  |         |  600  |    132  |  2  |   50  |  [132,117,132]  |
  3350  |              resetPlaceHolder_2();  |         |  600  |    132  |  2  |   50  |  [132,117,132]  |
  3356  |                         R = R + 2;  |      2  |  602  |    132  |  2  |   50  |  [132,117,132]  |
  3360  |                         j = j + 1;  |         |  602  |    132  |  2  |   51  |  [132,117,132]  |
  3361  |              resetPlaceHolder_2();  |         |  602  |    132  |  2  |   51  |  [132,117,132]  |
  3367  |                         R = R + 2;  |      2  |  604  |    132  |  2  |   51  |  [132,117,132]  |
  3371  |                         j = j + 1;  |         |  604  |    132  |  2  |   52  |  [132,117,132]  |
  3372  |              resetPlaceHolder_2();  |         |  604  |    132  |  2  |   52  |  [132,117,132]  |
  3378  |                         R = R + 2;  |      2  |  606  |    132  |  2  |   52  |  [132,117,132]  |
  3382  |                         j = j + 1;  |         |  606  |    132  |  2  |   53  |  [132,117,132]  |
  3383  |              resetPlaceHolder_2();  |         |  606  |    132  |  2  |   53  |  [132,117,132]  |
  3389  |                         R = R + 2;  |      2  |  608  |    132  |  2  |   53  |  [132,117,132]  |
  3393  |                         j = j + 1;  |         |  608  |    132  |  2  |   54  |  [132,117,132]  |
  3394  |              resetPlaceHolder_2();  |         |  608  |    132  |  2  |   54  |  [132,117,132]  |
  3400  |                         R = R + 2;  |      2  |  610  |    132  |  2  |   54  |  [132,117,132]  |
  3404  |                         j = j + 1;  |         |  610  |    132  |  2  |   55  |  [132,117,132]  |
  3405  |              resetPlaceHolder_2();  |         |  610  |    132  |  2  |   55  |  [132,117,132]  |
  3411  |                         R = R + 2;  |      2  |  612  |    132  |  2  |   55  |  [132,117,132]  |
  3415  |                         j = j + 1;  |         |  612  |    132  |  2  |   56  |  [132,117,132]  |
  3416  |              resetPlaceHolder_2();  |         |  612  |    132  |  2  |   56  |  [132,117,132]  |
  3422  |                         R = R + 2;  |      2  |  614  |    132  |  2  |   56  |  [132,117,132]  |
  3426  |                         j = j + 1;  |         |  614  |    132  |  2  |   57  |  [132,117,132]  |
  3427  |              resetPlaceHolder_2();  |         |  614  |    132  |  2  |   57  |  [132,117,132]  |
  3433  |                         R = R + 2;  |      2  |  616  |    132  |  2  |   57  |  [132,117,132]  |
  3437  |                         j = j + 1;  |         |  616  |    132  |  2  |   58  |  [132,117,132]  |
  3438  |              resetPlaceHolder_2();  |         |  616  |    132  |  2  |   58  |  [132,117,132]  |
  3444  |                         R = R + 2;  |      2  |  618  |    132  |  2  |   58  |  [132,117,132]  |
  3448  |                         j = j + 1;  |         |  618  |    132  |  2  |   59  |  [132,117,132]  |
  3449  |              resetPlaceHolder_2();  |         |  618  |    132  |  2  |   59  |  [132,117,132]  |
  3455  |                         R = R + 2;  |      2  |  620  |    132  |  2  |   59  |  [132,117,132]  |
  3459  |                         j = j + 1;  |         |  620  |    132  |  2  |   60  |  [132,117,132]  |
  3460  |              resetPlaceHolder_2();  |         |  620  |    132  |  2  |   60  |  [132,117,132]  |
  3466  |                         R = R + 2;  |      2  |  622  |    132  |  2  |   60  |  [132,117,132]  |
  3470  |                         j = j + 1;  |         |  622  |    132  |  2  |   61  |  [132,117,132]  |
  3471  |              resetPlaceHolder_2();  |         |  622  |    132  |  2  |   61  |  [132,117,132]  |
  3477  |                         R = R + 2;  |      2  |  624  |    132  |  2  |   61  |  [132,117,132]  |
  3481  |                         j = j + 1;  |         |  624  |    132  |  2  |   62  |  [132,117,132]  |
  3482  |              resetPlaceHolder_2();  |         |  624  |    132  |  2  |   62  |  [132,117,132]  |
  3488  |                         R = R + 2;  |      2  |  626  |    132  |  2  |   62  |  [132,117,132]  |
  3492  |                         j = j + 1;  |         |  626  |    132  |  2  |   63  |  [132,117,132]  |
  3493  |              resetPlaceHolder_2();  |         |  626  |    132  |  2  |   63  |  [132,117,132]  |
  3499  |                         R = R + 2;  |      2  |  628  |    132  |  2  |   63  |  [132,117,132]  |
  3503  |                         j = j + 1;  |         |  628  |    132  |  2  |   64  |  [132,117,132]  |
  3504  |              resetPlaceHolder_2();  |         |  628  |    132  |  2  |   64  |  [132,117,132]  |
  3510  |                         R = R + 2;  |      2  |  630  |    132  |  2  |   64  |  [132,117,132]  |
  3514  |                         j = j + 1;  |         |  630  |    132  |  2  |   65  |  [132,117,132]  |
  3515  |              resetPlaceHolder_2();  |         |  630  |    132  |  2  |   65  |  [132,117,132]  |
  3521  |                         R = R + 2;  |      2  |  632  |    132  |  2  |   65  |  [132,117,132]  |
  3525  |                         j = j + 1;  |         |  632  |    132  |  2  |   66  |  [132,117,132]  |
  3526  |              resetPlaceHolder_2();  |         |  632  |    132  |  2  |   66  |  [132,117,132]  |
  3532  |                         R = R + 2;  |      2  |  634  |    132  |  2  |   66  |  [132,117,132]  |
  3536  |                         j = j + 1;  |         |  634  |    132  |  2  |   67  |  [132,117,132]  |
  3537  |              resetPlaceHolder_2();  |         |  634  |    132  |  2  |   67  |  [132,117,132]  |
  3543  |                         R = R + 2;  |      2  |  636  |    132  |  2  |   67  |  [132,117,132]  |
  3547  |                         j = j + 1;  |         |  636  |    132  |  2  |   68  |  [132,117,132]  |
  3548  |              resetPlaceHolder_2();  |         |  636  |    132  |  2  |   68  |  [132,117,132]  |
  3554  |                         R = R + 2;  |      2  |  638  |    132  |  2  |   68  |  [132,117,132]  |
  3558  |                         j = j + 1;  |         |  638  |    132  |  2  |   69  |  [132,117,132]  |
  3559  |              resetPlaceHolder_2();  |         |  638  |    132  |  2  |   69  |  [132,117,132]  |
  3565  |                         R = R + 2;  |      2  |  640  |    132  |  2  |   69  |  [132,117,132]  |
  3569  |                         j = j + 1;  |         |  640  |    132  |  2  |   70  |  [132,117,132]  |
  3570  |              resetPlaceHolder_2();  |         |  640  |    132  |  2  |   70  |  [132,117,132]  |
  3576  |                         R = R + 2;  |      2  |  642  |    132  |  2  |   70  |  [132,117,132]  |
  3580  |                         j = j + 1;  |         |  642  |    132  |  2  |   71  |  [132,117,132]  |
  3581  |              resetPlaceHolder_2();  |         |  642  |    132  |  2  |   71  |  [132,117,132]  |
  3587  |                         R = R + 2;  |      2  |  644  |    132  |  2  |   71  |  [132,117,132]  |
  3591  |                         j = j + 1;  |         |  644  |    132  |  2  |   72  |  [132,117,132]  |
  3592  |              resetPlaceHolder_2();  |         |  644  |    132  |  2  |   72  |  [132,117,132]  |
  3598  |                         R = R + 2;  |      2  |  646  |    132  |  2  |   72  |  [132,117,132]  |
  3602  |                         j = j + 1;  |         |  646  |    132  |  2  |   73  |  [132,117,132]  |
  3603  |              resetPlaceHolder_2();  |         |  646  |    132  |  2  |   73  |  [132,117,132]  |
  3609  |                         R = R + 2;  |      2  |  648  |    132  |  2  |   73  |  [132,117,132]  |
  3613  |                         j = j + 1;  |         |  648  |    132  |  2  |   74  |  [132,117,132]  |
  3614  |              resetPlaceHolder_2();  |         |  648  |    132  |  2  |   74  |  [132,117,132]  |
  3620  |                         R = R + 2;  |      2  |  650  |    132  |  2  |   74  |  [132,117,132]  |
  3624  |                         j = j + 1;  |         |  650  |    132  |  2  |   75  |  [132,117,132]  |
  3625  |              resetPlaceHolder_2();  |         |  650  |    132  |  2  |   75  |  [132,117,132]  |
  3631  |                         R = R + 2;  |      2  |  652  |    132  |  2  |   75  |  [132,117,132]  |
  3635  |                         j = j + 1;  |         |  652  |    132  |  2  |   76  |  [132,117,132]  |
  3636  |              resetPlaceHolder_2();  |         |  652  |    132  |  2  |   76  |  [132,117,132]  |
  3642  |                         R = R + 2;  |      2  |  654  |    132  |  2  |   76  |  [132,117,132]  |
  3646  |                         j = j + 1;  |         |  654  |    132  |  2  |   77  |  [132,117,132]  |
  3647  |              resetPlaceHolder_2();  |         |  654  |    132  |  2  |   77  |  [132,117,132]  |
  3653  |                         R = R + 2;  |      2  |  656  |    132  |  2  |   77  |  [132,117,132]  |
  3657  |                         j = j + 1;  |         |  656  |    132  |  2  |   78  |  [132,117,132]  |
  3658  |              resetPlaceHolder_2();  |         |  656  |    132  |  2  |   78  |  [132,117,132]  |
  3664  |                         R = R + 2;  |      2  |  658  |    132  |  2  |   78  |  [132,117,132]  |
  3668  |                         j = j + 1;  |         |  658  |    132  |  2  |   79  |  [132,117,132]  |
  3669  |              resetPlaceHolder_2();  |         |  658  |    132  |  2  |   79  |  [132,117,132]  |
  3675  |                         R = R + 2;  |      2  |  660  |    132  |  2  |   79  |  [132,117,132]  |
  3679  |                         j = j + 1;  |         |  660  |    132  |  2  |   80  |  [132,117,132]  |
  3680  |              resetPlaceHolder_2();  |         |  660  |    132  |  2  |   80  |  [132,117,132]  |
  3686  |                         R = R + 2;  |      2  |  662  |    132  |  2  |   80  |  [132,117,132]  |
  3690  |                         j = j + 1;  |         |  662  |    132  |  2  |   81  |  [132,117,132]  |
  3691  |              resetPlaceHolder_2();  |         |  662  |    132  |  2  |   81  |  [132,117,132]  |
  3697  |                         R = R + 2;  |      2  |  664  |    132  |  2  |   81  |  [132,117,132]  |
  3701  |                         j = j + 1;  |         |  664  |    132  |  2  |   82  |  [132,117,132]  |
  3702  |              resetPlaceHolder_2();  |         |  664  |    132  |  2  |   82  |  [132,117,132]  |
  3708  |                         R = R + 2;  |      2  |  666  |    132  |  2  |   82  |  [132,117,132]  |
  3712  |                         j = j + 1;  |         |  666  |    132  |  2  |   83  |  [132,117,132]  |
  3713  |              resetPlaceHolder_2();  |         |  666  |    132  |  2  |   83  |  [132,117,132]  |
  3719  |                         R = R + 2;  |      2  |  668  |    132  |  2  |   83  |  [132,117,132]  |
  3723  |                         j = j + 1;  |         |  668  |    132  |  2  |   84  |  [132,117,132]  |
  3724  |              resetPlaceHolder_2();  |         |  668  |    132  |  2  |   84  |  [132,117,132]  |
  3730  |                         R = R + 2;  |      2  |  670  |    132  |  2  |   84  |  [132,117,132]  |
  3734  |                         j = j + 1;  |         |  670  |    132  |  2  |   85  |  [132,117,132]  |
  3735  |              resetPlaceHolder_2();  |         |  670  |    132  |  2  |   85  |  [132,117,132]  |
  3741  |                         R = R + 2;  |      2  |  672  |    132  |  2  |   85  |  [132,117,132]  |
  3745  |                         j = j + 1;  |         |  672  |    132  |  2  |   86  |  [132,117,132]  |
  3746  |              resetPlaceHolder_2();  |         |  672  |    132  |  2  |   86  |  [132,117,132]  |
  3752  |                         R = R + 2;  |      2  |  674  |    132  |  2  |   86  |  [132,117,132]  |
  3756  |                         j = j + 1;  |         |  674  |    132  |  2  |   87  |  [132,117,132]  |
  3757  |              resetPlaceHolder_2();  |         |  674  |    132  |  2  |   87  |  [132,117,132]  |
  3763  |                         R = R + 2;  |      2  |  676  |    132  |  2  |   87  |  [132,117,132]  |
  3767  |                         j = j + 1;  |         |  676  |    132  |  2  |   88  |  [132,117,132]  |
  3768  |              resetPlaceHolder_2();  |         |  676  |    132  |  2  |   88  |  [132,117,132]  |
  3774  |                         R = R + 2;  |      2  |  678  |    132  |  2  |   88  |  [132,117,132]  |
  3778  |                         j = j + 1;  |         |  678  |    132  |  2  |   89  |  [132,117,132]  |
  3779  |              resetPlaceHolder_2();  |         |  678  |    132  |  2  |   89  |  [132,117,132]  |
  3785  |                         R = R + 2;  |      2  |  680  |    132  |  2  |   89  |  [132,117,132]  |
  3789  |                         j = j + 1;  |         |  680  |    132  |  2  |   90  |  [132,117,132]  |
  3790  |              resetPlaceHolder_2();  |         |  680  |    132  |  2  |   90  |  [132,117,132]  |
  3796  |                         R = R + 2;  |      2  |  682  |    132  |  2  |   90  |  [132,117,132]  |
  3800  |                         j = j + 1;  |         |  682  |    132  |  2  |   91  |  [132,117,132]  |
  3801  |              resetPlaceHolder_2();  |         |  682  |    132  |  2  |   91  |  [132,117,132]  |
  3807  |                         R = R + 2;  |      2  |  684  |    132  |  2  |   91  |  [132,117,132]  |
  3811  |                         j = j + 1;  |         |  684  |    132  |  2  |   92  |  [132,117,132]  |
  3812  |              resetPlaceHolder_2();  |         |  684  |    132  |  2  |   92  |  [132,117,132]  |
  3818  |                         R = R + 2;  |      2  |  686  |    132  |  2  |   92  |  [132,117,132]  |
  3822  |                         j = j + 1;  |         |  686  |    132  |  2  |   93  |  [132,117,132]  |
  3823  |              resetPlaceHolder_2();  |         |  686  |    132  |  2  |   93  |  [132,117,132]  |
  3829  |                         R = R + 2;  |      2  |  688  |    132  |  2  |   93  |  [132,117,132]  |
  3833  |                         j = j + 1;  |         |  688  |    132  |  2  |   94  |  [132,117,132]  |
  3834  |              resetPlaceHolder_2();  |         |  688  |    132  |  2  |   94  |  [132,117,132]  |
  3840  |                         R = R + 2;  |      2  |  690  |    132  |  2  |   94  |  [132,117,132]  |
  3844  |                         j = j + 1;  |         |  690  |    132  |  2  |   95  |  [132,117,132]  |
  3845  |              resetPlaceHolder_2();  |         |  690  |    132  |  2  |   95  |  [132,117,132]  |
  3851  |                         R = R + 2;  |      2  |  692  |    132  |  2  |   95  |  [132,117,132]  |
  3855  |                         j = j + 1;  |         |  692  |    132  |  2  |   96  |  [132,117,132]  |
  3856  |              resetPlaceHolder_2();  |         |  692  |    132  |  2  |   96  |  [132,117,132]  |
  3862  |                         R = R + 2;  |      2  |  694  |    132  |  2  |   96  |  [132,117,132]  |
  3866  |                         j = j + 1;  |         |  694  |    132  |  2  |   97  |  [132,117,132]  |
  3867  |              resetPlaceHolder_2();  |         |  694  |    132  |  2  |   97  |  [132,117,132]  |
  3873  |                         R = R + 2;  |      2  |  696  |    132  |  2  |   97  |  [132,117,132]  |
  3877  |                         j = j + 1;  |         |  696  |    132  |  2  |   98  |  [132,117,132]  |
  3878  |              resetPlaceHolder_2();  |         |  696  |    132  |  2  |   98  |  [132,117,132]  |
  3884  |                         R = R + 2;  |      2  |  698  |    132  |  2  |   98  |  [132,117,132]  |
  3888  |                         j = j + 1;  |         |  698  |    132  |  2  |   99  |  [132,117,132]  |
  3889  |              resetPlaceHolder_2();  |         |  698  |    132  |  2  |   99  |  [132,117,132]  |
  3895  |                         R = R + 2;  |      2  |  700  |    132  |  2  |   99  |  [132,117,132]  |
  3899  |                         j = j + 1;  |         |  700  |    132  |  2  |  100  |  [132,117,132]  |
  3900  |              resetPlaceHolder_2();  |         |  700  |    132  |  2  |  100  |  [132,117,132]  |
  3906  |                         R = R + 2;  |      2  |  702  |    132  |  2  |  100  |  [132,117,132]  |
  3910  |                         j = j + 1;  |         |  702  |    132  |  2  |  101  |  [132,117,132]  |
  3911  |              resetPlaceHolder_2();  |         |  702  |    132  |  2  |  101  |  [132,117,132]  |
  3917  |                         R = R + 2;  |      2  |  704  |    132  |  2  |  101  |  [132,117,132]  |
  3921  |                         j = j + 1;  |         |  704  |    132  |  2  |  102  |  [132,117,132]  |
  3922  |              resetPlaceHolder_2();  |         |  704  |    132  |  2  |  102  |  [132,117,132]  |
  3928  |                         R = R + 2;  |      2  |  706  |    132  |  2  |  102  |  [132,117,132]  |
  3932  |                         j = j + 1;  |         |  706  |    132  |  2  |  103  |  [132,117,132]  |
  3933  |              resetPlaceHolder_2();  |         |  706  |    132  |  2  |  103  |  [132,117,132]  |
  3939  |                         R = R + 2;  |      2  |  708  |    132  |  2  |  103  |  [132,117,132]  |
  3943  |                         j = j + 1;  |         |  708  |    132  |  2  |  104  |  [132,117,132]  |
  3944  |              resetPlaceHolder_2();  |         |  708  |    132  |  2  |  104  |  [132,117,132]  |
  3950  |                         R = R + 2;  |      2  |  710  |    132  |  2  |  104  |  [132,117,132]  |
  3954  |                         j = j + 1;  |         |  710  |    132  |  2  |  105  |  [132,117,132]  |
  3955  |              resetPlaceHolder_2();  |         |  710  |    132  |  2  |  105  |  [132,117,132]  |
  3961  |                         R = R + 2;  |      2  |  712  |    132  |  2  |  105  |  [132,117,132]  |
  3965  |                         j = j + 1;  |         |  712  |    132  |  2  |  106  |  [132,117,132]  |
  3966  |              resetPlaceHolder_2();  |         |  712  |    132  |  2  |  106  |  [132,117,132]  |
  3972  |                         R = R + 2;  |      2  |  714  |    132  |  2  |  106  |  [132,117,132]  |
  3976  |                         j = j + 1;  |         |  714  |    132  |  2  |  107  |  [132,117,132]  |
  3977  |              resetPlaceHolder_2();  |         |  714  |    132  |  2  |  107  |  [132,117,132]  |
  3983  |                         R = R + 2;  |      2  |  716  |    132  |  2  |  107  |  [132,117,132]  |
  3987  |                         j = j + 1;  |         |  716  |    132  |  2  |  108  |  [132,117,132]  |
  3988  |              resetPlaceHolder_2();  |         |  716  |    132  |  2  |  108  |  [132,117,132]  |
  3994  |                         R = R + 2;  |      2  |  718  |    132  |  2  |  108  |  [132,117,132]  |
  3998  |                         j = j + 1;  |         |  718  |    132  |  2  |  109  |  [132,117,132]  |
  3999  |              resetPlaceHolder_2();  |         |  718  |    132  |  2  |  109  |  [132,117,132]  |
  4005  |                         R = R + 2;  |      2  |  720  |    132  |  2  |  109  |  [132,117,132]  |
  4009  |                         j = j + 1;  |         |  720  |    132  |  2  |  110  |  [132,117,132]  |
  4010  |              resetPlaceHolder_2();  |         |  720  |    132  |  2  |  110  |  [132,117,132]  |
  4016  |                         R = R + 2;  |      2  |  722  |    132  |  2  |  110  |  [132,117,132]  |
  4020  |                         j = j + 1;  |         |  722  |    132  |  2  |  111  |  [132,117,132]  |
  4021  |              resetPlaceHolder_2();  |         |  722  |    132  |  2  |  111  |  [132,117,132]  |
  4027  |                         R = R + 2;  |      2  |  724  |    132  |  2  |  111  |  [132,117,132]  |
  4031  |                         j = j + 1;  |         |  724  |    132  |  2  |  112  |  [132,117,132]  |
  4032  |              resetPlaceHolder_2();  |         |  724  |    132  |  2  |  112  |  [132,117,132]  |
  4038  |                         R = R + 2;  |      2  |  726  |    132  |  2  |  112  |  [132,117,132]  |
  4042  |                         j = j + 1;  |         |  726  |    132  |  2  |  113  |  [132,117,132]  |
  4043  |              resetPlaceHolder_2();  |         |  726  |    132  |  2  |  113  |  [132,117,132]  |
  4049  |                         R = R + 2;  |      2  |  728  |    132  |  2  |  113  |  [132,117,132]  |
  4053  |                         j = j + 1;  |         |  728  |    132  |  2  |  114  |  [132,117,132]  |
  4054  |              resetPlaceHolder_2();  |         |  728  |    132  |  2  |  114  |  [132,117,132]  |
  4060  |                         R = R + 2;  |      2  |  730  |    132  |  2  |  114  |  [132,117,132]  |
  4064  |                         j = j + 1;  |         |  730  |    132  |  2  |  115  |  [132,117,132]  |
  4065  |              resetPlaceHolder_2();  |         |  730  |    132  |  2  |  115  |  [132,117,132]  |
  4071  |                         R = R + 2;  |      2  |  732  |    132  |  2  |  115  |  [132,117,132]  |
  4075  |                         j = j + 1;  |         |  732  |    132  |  2  |  116  |  [132,117,132]  |
  4076  |              resetPlaceHolder_2();  |         |  732  |    132  |  2  |  116  |  [132,117,132]  |
  4082  |                         R = R + 2;  |      2  |  734  |    132  |  2  |  116  |  [132,117,132]  |
  4086  |                         j = j + 1;  |         |  734  |    132  |  2  |  117  |  [132,117,132]  |
  4087  |              resetPlaceHolder_2();  |         |  734  |    132  |  2  |  117  |  [132,117,132]  |
  4093  |                         R = R + 2;  |      2  |  736  |    132  |  2  |  117  |  [132,117,132]  |
  4097  |                         j = j + 1;  |         |  736  |    132  |  2  |  118  |  [132,117,132]  |
  4098  |              resetPlaceHolder_2();  |         |  736  |    132  |  2  |  118  |  [132,117,132]  |
  4104  |                         R = R + 2;  |      2  |  738  |    132  |  2  |  118  |  [132,117,132]  |
  4108  |                         j = j + 1;  |         |  738  |    132  |  2  |  119  |  [132,117,132]  |
  4109  |              resetPlaceHolder_2();  |         |  738  |    132  |  2  |  119  |  [132,117,132]  |
  4115  |                         R = R + 2;  |      2  |  740  |    132  |  2  |  119  |  [132,117,132]  |
  4119  |                         j = j + 1;  |         |  740  |    132  |  2  |  120  |  [132,117,132]  |
  4120  |              resetPlaceHolder_2();  |         |  740  |    132  |  2  |  120  |  [132,117,132]  |
  4126  |                         R = R + 2;  |      2  |  742  |    132  |  2  |  120  |  [132,117,132]  |
  4130  |                         j = j + 1;  |         |  742  |    132  |  2  |  121  |  [132,117,132]  |
  4131  |              resetPlaceHolder_2();  |         |  742  |    132  |  2  |  121  |  [132,117,132]  |
  4137  |                         R = R + 2;  |      2  |  744  |    132  |  2  |  121  |  [132,117,132]  |
  4141  |                         j = j + 1;  |         |  744  |    132  |  2  |  122  |  [132,117,132]  |
  4142  |              resetPlaceHolder_2();  |         |  744  |    132  |  2  |  122  |  [132,117,132]  |
  4148  |                         R = R + 2;  |      2  |  746  |    132  |  2  |  122  |  [132,117,132]  |
  4152  |                         j = j + 1;  |         |  746  |    132  |  2  |  123  |  [132,117,132]  |
  4153  |              resetPlaceHolder_2();  |         |  746  |    132  |  2  |  123  |  [132,117,132]  |
  4159  |                         R = R + 2;  |      2  |  748  |    132  |  2  |  123  |  [132,117,132]  |
  4163  |                         j = j + 1;  |         |  748  |    132  |  2  |  124  |  [132,117,132]  |
  4164  |              resetPlaceHolder_2();  |         |  748  |    132  |  2  |  124  |  [132,117,132]  |
  4170  |                         R = R + 2;  |      2  |  750  |    132  |  2  |  124  |  [132,117,132]  |
  4174  |                         j = j + 1;  |         |  750  |    132  |  2  |  125  |  [132,117,132]  |
  4175  |              resetPlaceHolder_2();  |         |  750  |    132  |  2  |  125  |  [132,117,132]  |
  4181  |                         R = R + 2;  |      2  |  752  |    132  |  2  |  125  |  [132,117,132]  |
  4185  |                         j = j + 1;  |         |  752  |    132  |  2  |  126  |  [132,117,132]  |
  4186  |              resetPlaceHolder_2();  |         |  752  |    132  |  2  |  126  |  [132,117,132]  |
  4192  |                         R = R + 2;  |      2  |  754  |    132  |  2  |  126  |  [132,117,132]  |
  4196  |                         j = j + 1;  |         |  754  |    132  |  2  |  127  |  [132,117,132]  |
  4197  |              resetPlaceHolder_2();  |         |  754  |    132  |  2  |  127  |  [132,117,132]  |
  4203  |                         R = R + 2;  |      2  |  756  |    132  |  2  |  127  |  [132,117,132]  |
  4207  |                         j = j + 1;  |         |  756  |    132  |  2  |  128  |  [132,117,132]  |
  4208  |              resetPlaceHolder_2();  |         |  756  |    132  |  2  |  128  |  [132,117,132]  |
  4214  |                         R = R + 2;  |      2  |  758  |    132  |  2  |  128  |  [132,117,132]  |
  4218  |                         j = j + 1;  |         |  758  |    132  |  2  |  129  |  [132,117,132]  |
  4219  |              resetPlaceHolder_2();  |         |  758  |    132  |  2  |  129  |  [132,117,132]  |
  4225  |                         R = R + 2;  |      2  |  760  |    132  |  2  |  129  |  [132,117,132]  |
  4229  |                         j = j + 1;  |         |  760  |    132  |  2  |  130  |  [132,117,132]  |
  4230  |              resetPlaceHolder_2();  |         |  760  |    132  |  2  |  130  |  [132,117,132]  |
  4236  |                         R = R + 2;  |      2  |  762  |    132  |  2  |  130  |  [132,117,132]  |
  4240  |                         j = j + 1;  |         |  762  |    132  |  2  |  131  |  [132,117,132]  |
  4241  |              resetPlaceHolder_2();  |         |  762  |    132  |  2  |  131  |  [132,117,132]  |
  4247  |                         R = R + 2;  |      2  |  764  |    132  |  2  |  131  |  [132,117,132]  |
  4251  |                         j = j + 1;  |         |  764  |    132  |  2  |  132  |  [132,117,132]  |
  4252  |              resetPlaceHolder_2();  |         |  764  |    132  |  2  |  132  |  [132,117,132]  |
  4258  |                         R = R + 1;  |      1  |  765  |    132  |  2  |  132  |  [132,117,132]  |
  4262  |                         i = i + 1;  |         |  765  |    132  |  3  |  132  |  [132,117,132]  |
  4263  |              resetPlaceHolder_1();  |         |  765  |    132  |  3  |  132  |  [132,117,132]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 3873, 2094, 3345, 4005, 2336, 2072, 1995, 909, 3477, 249, 2787, 777, 2512, 2622, 1522, 2644, 2776, 1808, 2248, 1544, 2380, 1533, 1305, 1437, 1041, 1173, 1426, 3004, 3367, 1327, 4247, 1063, 3895, 3103, 898, 3994, 3730, 3466, 4137, 436, 1228, 1709, 2916, 2039, 1907, 2501, 3653, 1511, 3125, 1577, 3840, 3312, 3708, 3180, 3268, 29, 216, 2237, 1415, 2105, 4258, 1632, 2259, 623, 3983, 106, 238, 1151, 348, 3290, 84, 4115, 1283, 821, 3851, 2017, 480, 3389, 766, 2281, 2861, 634, 1896, 293, 2523, 2424, 4038, 3906, 2982, 4082, 3510, 3378, 1863, 1074, 1206, 920, 117, 942, 3301, 2204, 678, 546, 3169, 810, 1338, 381, 1470, 2083, 2905, 2061, 3037, 2589, 4016, 3972, 260, 1676, 1217, 392, 3752, 3884, 788, 3664, 3191, 4192, 1555, 3499, 2872, 1951, 1687, 1819, 1195, 3763, 4104, 4027, 1360, 3862, 403, 1096, 1118, 4049, 590, 2666, 997, 1588, 1382, 3059, 2006, 1984, 1852, 1874, 1599, 1720, 1393, 3147, 4148, 73, 128, 205, 3279, 3587, 2883, 2402, 3422, 953, 3675, 3807, 1764, 2413, 425, 2677, 513, 2292, 2391, 1698, 2556, 2149, 3257, 161, 2028, 689, 3686, 2894, 733, 3158, 601, 975, 3741, 3070, 2938, 843, 3609, 4159, 3081, 1929, 711, 579, 2806, 2817, 3213, 3796, 2193, 1786, 1371, 4236, 1107, 1239, 4060, 2457, 3719, 2358, 3532, 2721, 172, 3631, 1349, 2116, 2839, 271, 4203, 2182, 2314, 535, 1731, 799, 1162, 2446, 4181, 700, 964, 2710, 2578, 1841, 2171, 2765, 1643, 3917, 2369, 986, 1775, 2633, 1250, 2303, 1973, 722, 3444, 3576, 2927, 3048, 3455, 458, 194, 2567, 557, 282, 150, 887, 414, 95, 1566, 2732, 1753, 2850, 2160, 3246, 3642, 3818, 3114, 2688, 3334, 370, 3554, 3202, 502, 3026, 3774, 1830, 1085, 2545, 359, 2468, 1404, 3697, 3488, 744, 3829, 656, 3356, 1052, 3224, 1140, 1797, 4093, 2949, 1008, 4225, 3961, 1272, 612, 876, 1940, 2435, 3400, 3433, 3620, 1918, 1316, 2479, 3565, 1459, 3092, 931, 2828, 2960, 524, 2347, 1654, 2215, 2611, 2325, 3928, 2743, 1448, 2490, 4170, 2226, 40, 304, 1481, 4126, 2971, 3235, 139, 3136, 1030, 568, 4214, 667, 3598, 1294, 832, 447, 315, 3785, 2534, 51, 3521, 854, 183, 2050, 865, 3015, 326, 3323, 1610, 1742, 2127, 1129, 1261, 3543, 2600, 3411, 1019, 1500, 3939, 62, 4071, 1885, 2699, 2270, 1621, 2138, 227, 2754, 3950, 337, 469, 1962, 1184, 755, 491, 2993, 2655]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,40,51,62,73,84,95,106,117,128,139,150,161,172,183,194,205,216,227,238,249,260,271,282,293,304,315,326,337,348,359,370,381,392,403,414,425,436,447,458,469,480,491,502,513,524,535,546,557,568,579,590,601,612,623,634,645,656,667,678,689,700,711,722,733,744,755,766,777,788,799,810,821,832,843,854,865,876,887,898,909,920,931,942,953,964,975,986,997,1008,1019,1030,1041,1052,1063,1074,1085,1096,1107,1118,1129,1140,1151,1162,1173,1184,1195,1206,1217,1228,1239,1250,1261,1272,1283,1294,1305,1316,1327,1338,1349,1360,1371,1382,1393,1404,1415,1426,1437,1448,1459,1470,1481,1500,1511,1522,1533,1544,1555,1566,1577,1588,1599,1610,1621,1632,1643,1654,1665,1676,1687,1698,1709,1720,1731,1742,1753,1764,1775,1786,1797,1808,1819,1830,1841,1852,1863,1874,1885,1896,1907,1918,1929,1940,1951,1962,1973,1984,1995,2006,2017,2028,2039,2050,2061,2072,2083,2094,2105,2116,2127,2138,2149,2160,2171,2182,2193,2204,2215,2226,2237,2248,2259,2270,2281,2292,2303,2314,2325,2336,2347,2358,2369,2380,2391,2402,2413,2424,2435,2446,2457,2468,2479,2490,2501,2512,2523,2534,2545,2556,2567,2578,2589,2600,2611,2622,2633,2644,2655,2666,2677,2688,2699,2710,2721,2732,2743,2754,2765,2776,2787,2806,2817,2828,2839,2850,2861,2872,2883,2894,2905,2916,2927,2938,2949,2960,2971,2982,2993,3004,3015,3026,3037,3048,3059,3070,3081,3092,3103,3114,3125,3136,3147,3158,3169,3180,3191,3202,3213,3224,3235,3246,3257,3268,3279,3290,3301,3312,3323,3334,3345,3356,3367,3378,3389,3400,3411,3422,3433,3444,3455,3466,3477,3488,3499,3510,3521,3532,3543,3554,3565,3576,3587,3598,3609,3620,3631,3642,3653,3664,3675,3686,3697,3708,3719,3730,3741,3752,3763,3774,3785,3796,3807,3818,3829,3840,3851,3862,3873,3884,3895,3906,3917,3928,3939,3950,3961,3972,3983,3994,4005,4016,4027,4038,4049,4060,4071,4082,4093,4104,4115,4126,4137,4148,4159,4170,4181,4192,4203,4214,4225,4236,4247,4258}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |             R = R + 2;  |      2  |                         0  |
    34  |  resetPlaceHolder_2();  |         |                            |
    40  |             R = R + 2;  |      2  |                         0  |
    45  |  resetPlaceHolder_2();  |         |                            |
    51  |             R = R + 2;  |      2  |                         0  |
    56  |  resetPlaceHolder_2();  |         |                            |
    62  |             R = R + 2;  |      2  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    73  |             R = R + 2;  |      2  |                         0  |
    78  |  resetPlaceHolder_2();  |         |                            |
    84  |             R = R + 2;  |      2  |                         0  |
    89  |  resetPlaceHolder_2();  |         |                            |
    95  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_2();  |         |                            |
   106  |             R = R + 2;  |      2  |                         0  |
   111  |  resetPlaceHolder_2();  |         |                            |
   117  |             R = R + 2;  |      2  |                         0  |
   122  |  resetPlaceHolder_2();  |         |                            |
   128  |             R = R + 2;  |      2  |                         0  |
   133  |  resetPlaceHolder_2();  |         |                            |
   139  |             R = R + 2;  |      2  |                         0  |
   144  |  resetPlaceHolder_2();  |         |                            |
   150  |             R = R + 2;  |      2  |                         0  |
   155  |  resetPlaceHolder_2();  |         |                            |
   161  |             R = R + 2;  |      2  |                         0  |
   166  |  resetPlaceHolder_2();  |         |                            |
   172  |             R = R + 2;  |      2  |                         0  |
   177  |  resetPlaceHolder_2();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   188  |  resetPlaceHolder_2();  |         |                            |
   194  |             R = R + 2;  |      2  |                         0  |
   199  |  resetPlaceHolder_2();  |         |                            |
   205  |             R = R + 2;  |      2  |                         0  |
   210  |  resetPlaceHolder_2();  |         |                            |
   216  |             R = R + 2;  |      2  |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |
   227  |             R = R + 2;  |      2  |                         0  |
   232  |  resetPlaceHolder_2();  |         |                            |
   238  |             R = R + 2;  |      2  |                         0  |
   243  |  resetPlaceHolder_2();  |         |                            |
   249  |             R = R + 2;  |      2  |                         0  |
   254  |  resetPlaceHolder_2();  |         |                            |
   260  |             R = R + 2;  |      2  |                         0  |
   265  |  resetPlaceHolder_2();  |         |                            |
   271  |             R = R + 2;  |      2  |                         0  |
   276  |  resetPlaceHolder_2();  |         |                            |
   282  |             R = R + 2;  |      2  |                         0  |
   287  |  resetPlaceHolder_2();  |         |                            |
   293  |             R = R + 2;  |      2  |                         0  |
   298  |  resetPlaceHolder_2();  |         |                            |
   304  |             R = R + 2;  |      2  |                         0  |
   309  |  resetPlaceHolder_2();  |         |                            |
   315  |             R = R + 2;  |      2  |                         0  |
   320  |  resetPlaceHolder_2();  |         |                            |
   326  |             R = R + 2;  |      2  |                         0  |
   331  |  resetPlaceHolder_2();  |         |                            |
   337  |             R = R + 2;  |      2  |                         0  |
   342  |  resetPlaceHolder_2();  |         |                            |
   348  |             R = R + 2;  |      2  |                         0  |
   353  |  resetPlaceHolder_2();  |         |                            |
   359  |             R = R + 2;  |      2  |                         0  |
   364  |  resetPlaceHolder_2();  |         |                            |
   370  |             R = R + 2;  |      2  |                         0  |
   375  |  resetPlaceHolder_2();  |         |                            |
   381  |             R = R + 2;  |      2  |                         0  |
   386  |  resetPlaceHolder_2();  |         |                            |
   392  |             R = R + 2;  |      2  |                         0  |
   397  |  resetPlaceHolder_2();  |         |                            |
   403  |             R = R + 2;  |      2  |                         0  |
   408  |  resetPlaceHolder_2();  |         |                            |
   414  |             R = R + 2;  |      2  |                         0  |
   419  |  resetPlaceHolder_2();  |         |                            |
   425  |             R = R + 2;  |      2  |                         0  |
   430  |  resetPlaceHolder_2();  |         |                            |
   436  |             R = R + 2;  |      2  |                         0  |
   441  |  resetPlaceHolder_2();  |         |                            |
   447  |             R = R + 2;  |      2  |                         0  |
   452  |  resetPlaceHolder_2();  |         |                            |
   458  |             R = R + 2;  |      2  |                         0  |
   463  |  resetPlaceHolder_2();  |         |                            |
   469  |             R = R + 2;  |      2  |                         0  |
   474  |  resetPlaceHolder_2();  |         |                            |
   480  |             R = R + 2;  |      2  |                         0  |
   485  |  resetPlaceHolder_2();  |         |                            |
   491  |             R = R + 2;  |      2  |                         0  |
   496  |  resetPlaceHolder_2();  |         |                            |
   502  |             R = R + 2;  |      2  |                         0  |
   507  |  resetPlaceHolder_2();  |         |                            |
   513  |             R = R + 2;  |      2  |                         0  |
   518  |  resetPlaceHolder_2();  |         |                            |
   524  |             R = R + 2;  |      2  |                         0  |
   529  |  resetPlaceHolder_2();  |         |                            |
   535  |             R = R + 2;  |      2  |                         0  |
   540  |  resetPlaceHolder_2();  |         |                            |
   546  |             R = R + 2;  |      2  |                         0  |
   551  |  resetPlaceHolder_2();  |         |                            |
   557  |             R = R + 2;  |      2  |                         0  |
   562  |  resetPlaceHolder_2();  |         |                            |
   568  |             R = R + 2;  |      2  |                         0  |
   573  |  resetPlaceHolder_2();  |         |                            |
   579  |             R = R + 2;  |      2  |                         0  |
   584  |  resetPlaceHolder_2();  |         |                            |
   590  |             R = R + 2;  |      2  |                         0  |
   595  |  resetPlaceHolder_2();  |         |                            |
   601  |             R = R + 2;  |      2  |                         0  |
   606  |  resetPlaceHolder_2();  |         |                            |
   612  |             R = R + 2;  |      2  |                         0  |
   617  |  resetPlaceHolder_2();  |         |                            |
   623  |             R = R + 2;  |      2  |                         0  |
   628  |  resetPlaceHolder_2();  |         |                            |
   634  |             R = R + 2;  |      2  |                         0  |
   639  |  resetPlaceHolder_2();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   650  |  resetPlaceHolder_2();  |         |                            |
   656  |             R = R + 2;  |      2  |                         0  |
   661  |  resetPlaceHolder_2();  |         |                            |
   667  |             R = R + 2;  |      2  |                         0  |
   672  |  resetPlaceHolder_2();  |         |                            |
   678  |             R = R + 2;  |      2  |                         0  |
   683  |  resetPlaceHolder_2();  |         |                            |
   689  |             R = R + 2;  |      2  |                         0  |
   694  |  resetPlaceHolder_2();  |         |                            |
   700  |             R = R + 2;  |      2  |                         0  |
   705  |  resetPlaceHolder_2();  |         |                            |
   711  |             R = R + 2;  |      2  |                         0  |
   716  |  resetPlaceHolder_2();  |         |                            |
   722  |             R = R + 2;  |      2  |                         0  |
   727  |  resetPlaceHolder_2();  |         |                            |
   733  |             R = R + 2;  |      2  |                         0  |
   738  |  resetPlaceHolder_2();  |         |                            |
   744  |             R = R + 2;  |      2  |                         0  |
   749  |  resetPlaceHolder_2();  |         |                            |
   755  |             R = R + 2;  |      2  |                         0  |
   760  |  resetPlaceHolder_2();  |         |                            |
   766  |             R = R + 2;  |      2  |                         0  |
   771  |  resetPlaceHolder_2();  |         |                            |
   777  |             R = R + 2;  |      2  |                         0  |
   782  |  resetPlaceHolder_2();  |         |                            |
   788  |             R = R + 2;  |      2  |                         0  |
   793  |  resetPlaceHolder_2();  |         |                            |
   799  |             R = R + 2;  |      2  |                         0  |
   804  |  resetPlaceHolder_2();  |         |                            |
   810  |             R = R + 2;  |      2  |                         0  |
   815  |  resetPlaceHolder_2();  |         |                            |
   821  |             R = R + 2;  |      2  |                         0  |
   826  |  resetPlaceHolder_2();  |         |                            |
   832  |             R = R + 2;  |      2  |                         0  |
   837  |  resetPlaceHolder_2();  |         |                            |
   843  |             R = R + 2;  |      2  |                         0  |
   848  |  resetPlaceHolder_2();  |         |                            |
   854  |             R = R + 2;  |      2  |                         0  |
   859  |  resetPlaceHolder_2();  |         |                            |
   865  |             R = R + 2;  |      2  |                         0  |
   870  |  resetPlaceHolder_2();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   881  |  resetPlaceHolder_2();  |         |                            |
   887  |             R = R + 2;  |      2  |                         0  |
   892  |  resetPlaceHolder_2();  |         |                            |
   898  |             R = R + 2;  |      2  |                         0  |
   903  |  resetPlaceHolder_2();  |         |                            |
   909  |             R = R + 2;  |      2  |                         0  |
   914  |  resetPlaceHolder_2();  |         |                            |
   920  |             R = R + 2;  |      2  |                         0  |
   925  |  resetPlaceHolder_2();  |         |                            |
   931  |             R = R + 2;  |      2  |                         0  |
   936  |  resetPlaceHolder_2();  |         |                            |
   942  |             R = R + 2;  |      2  |                         0  |
   947  |  resetPlaceHolder_2();  |         |                            |
   953  |             R = R + 2;  |      2  |                         0  |
   958  |  resetPlaceHolder_2();  |         |                            |
   964  |             R = R + 2;  |      2  |                         0  |
   969  |  resetPlaceHolder_2();  |         |                            |
   975  |             R = R + 2;  |      2  |                         0  |
   980  |  resetPlaceHolder_2();  |         |                            |
   986  |             R = R + 2;  |      2  |                         0  |
   991  |  resetPlaceHolder_2();  |         |                            |
   997  |             R = R + 2;  |      2  |                         0  |
  1002  |  resetPlaceHolder_2();  |         |                            |
  1008  |             R = R + 2;  |      2  |                         0  |
  1013  |  resetPlaceHolder_2();  |         |                            |
  1019  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_2();  |         |                            |
  1030  |             R = R + 2;  |      2  |                         0  |
  1035  |  resetPlaceHolder_2();  |         |                            |
  1041  |             R = R + 2;  |      2  |                         0  |
  1046  |  resetPlaceHolder_2();  |         |                            |
  1052  |             R = R + 2;  |      2  |                         0  |
  1057  |  resetPlaceHolder_2();  |         |                            |
  1063  |             R = R + 2;  |      2  |                         0  |
  1068  |  resetPlaceHolder_2();  |         |                            |
  1074  |             R = R + 2;  |      2  |                         0  |
  1079  |  resetPlaceHolder_2();  |         |                            |
  1085  |             R = R + 2;  |      2  |                         0  |
  1090  |  resetPlaceHolder_2();  |         |                            |
  1096  |             R = R + 2;  |      2  |                         0  |
  1101  |  resetPlaceHolder_2();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1112  |  resetPlaceHolder_2();  |         |                            |
  1118  |             R = R + 2;  |      2  |                         0  |
  1123  |  resetPlaceHolder_2();  |         |                            |
  1129  |             R = R + 2;  |      2  |                         0  |
  1134  |  resetPlaceHolder_2();  |         |                            |
  1140  |             R = R + 2;  |      2  |                         0  |
  1145  |  resetPlaceHolder_2();  |         |                            |
  1151  |             R = R + 2;  |      2  |                         0  |
  1156  |  resetPlaceHolder_2();  |         |                            |
  1162  |             R = R + 2;  |      2  |                         0  |
  1167  |  resetPlaceHolder_2();  |         |                            |
  1173  |             R = R + 2;  |      2  |                         0  |
  1178  |  resetPlaceHolder_2();  |         |                            |
  1184  |             R = R + 2;  |      2  |                         0  |
  1189  |  resetPlaceHolder_2();  |         |                            |
  1195  |             R = R + 2;  |      2  |                         0  |
  1200  |  resetPlaceHolder_2();  |         |                            |
  1206  |             R = R + 2;  |      2  |                         0  |
  1211  |  resetPlaceHolder_2();  |         |                            |
  1217  |             R = R + 2;  |      2  |                         0  |
  1222  |  resetPlaceHolder_2();  |         |                            |
  1228  |             R = R + 2;  |      2  |                         0  |
  1233  |  resetPlaceHolder_2();  |         |                            |
  1239  |             R = R + 2;  |      2  |                         0  |
  1244  |  resetPlaceHolder_2();  |         |                            |
  1250  |             R = R + 2;  |      2  |                         0  |
  1255  |  resetPlaceHolder_2();  |         |                            |
  1261  |             R = R + 2;  |      2  |                         0  |
  1266  |  resetPlaceHolder_2();  |         |                            |
  1272  |             R = R + 2;  |      2  |                         0  |
  1277  |  resetPlaceHolder_2();  |         |                            |
  1283  |             R = R + 2;  |      2  |                         0  |
  1288  |  resetPlaceHolder_2();  |         |                            |
  1294  |             R = R + 2;  |      2  |                         0  |
  1299  |  resetPlaceHolder_2();  |         |                            |
  1305  |             R = R + 2;  |      2  |                         0  |
  1310  |  resetPlaceHolder_2();  |         |                            |
  1316  |             R = R + 2;  |      2  |                         0  |
  1321  |  resetPlaceHolder_2();  |         |                            |
  1327  |             R = R + 2;  |      2  |                         0  |
  1332  |  resetPlaceHolder_2();  |         |                            |
  1338  |             R = R + 2;  |      2  |                         0  |
  1343  |  resetPlaceHolder_2();  |         |                            |
  1349  |             R = R + 2;  |      2  |                         0  |
  1354  |  resetPlaceHolder_2();  |         |                            |
  1360  |             R = R + 2;  |      2  |                         0  |
  1365  |  resetPlaceHolder_2();  |         |                            |
  1371  |             R = R + 2;  |      2  |                         0  |
  1376  |  resetPlaceHolder_2();  |         |                            |
  1382  |             R = R + 2;  |      2  |                         0  |
  1387  |  resetPlaceHolder_2();  |         |                            |
  1393  |             R = R + 2;  |      2  |                         0  |
  1398  |  resetPlaceHolder_2();  |         |                            |
  1404  |             R = R + 2;  |      2  |                         0  |
  1409  |  resetPlaceHolder_2();  |         |                            |
  1415  |             R = R + 2;  |      2  |                         0  |
  1420  |  resetPlaceHolder_2();  |         |                            |
  1426  |             R = R + 2;  |      2  |                         0  |
  1431  |  resetPlaceHolder_2();  |         |                            |
  1437  |             R = R + 2;  |      2  |                         0  |
  1442  |  resetPlaceHolder_2();  |         |                            |
  1448  |             R = R + 2;  |      2  |                         0  |
  1453  |  resetPlaceHolder_2();  |         |                            |
  1459  |             R = R + 2;  |      2  |                         0  |
  1464  |  resetPlaceHolder_2();  |         |                            |
  1470  |             R = R + 2;  |      2  |                         0  |
  1475  |  resetPlaceHolder_2();  |         |                            |
  1481  |             R = R + 1;  |      1  |                         0  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1500  |             R = R + 2;  |      2  |                         0  |
  1505  |  resetPlaceHolder_2();  |         |                            |
  1511  |             R = R + 2;  |      2  |                         0  |
  1516  |  resetPlaceHolder_2();  |         |                            |
  1522  |             R = R + 2;  |      2  |                         0  |
  1527  |  resetPlaceHolder_2();  |         |                            |
  1533  |             R = R + 2;  |      2  |                         0  |
  1538  |  resetPlaceHolder_2();  |         |                            |
  1544  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_2();  |         |                            |
  1555  |             R = R + 2;  |      2  |                         0  |
  1560  |  resetPlaceHolder_2();  |         |                            |
  1566  |             R = R + 2;  |      2  |                         0  |
  1571  |  resetPlaceHolder_2();  |         |                            |
  1577  |             R = R + 2;  |      2  |                         0  |
  1582  |  resetPlaceHolder_2();  |         |                            |
  1588  |             R = R + 2;  |      2  |                         0  |
  1593  |  resetPlaceHolder_2();  |         |                            |
  1599  |             R = R + 2;  |      2  |                         0  |
  1604  |  resetPlaceHolder_2();  |         |                            |
  1610  |             R = R + 2;  |      2  |                         0  |
  1615  |  resetPlaceHolder_2();  |         |                            |
  1621  |             R = R + 2;  |      2  |                         0  |
  1626  |  resetPlaceHolder_2();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1637  |  resetPlaceHolder_2();  |         |                            |
  1643  |             R = R + 2;  |      2  |                         0  |
  1648  |  resetPlaceHolder_2();  |         |                            |
  1654  |             R = R + 2;  |      2  |                         0  |
  1659  |  resetPlaceHolder_2();  |         |                            |
  1665  |             R = R + 2;  |      2  |                         0  |
  1670  |  resetPlaceHolder_2();  |         |                            |
  1676  |             R = R + 2;  |      2  |                         0  |
  1681  |  resetPlaceHolder_2();  |         |                            |
  1687  |             R = R + 2;  |      2  |                         0  |
  1692  |  resetPlaceHolder_2();  |         |                            |
  1698  |             R = R + 2;  |      2  |                         0  |
  1703  |  resetPlaceHolder_2();  |         |                            |
  1709  |             R = R + 2;  |      2  |                         0  |
  1714  |  resetPlaceHolder_2();  |         |                            |
  1720  |             R = R + 2;  |      2  |                         0  |
  1725  |  resetPlaceHolder_2();  |         |                            |
  1731  |             R = R + 2;  |      2  |                         0  |
  1736  |  resetPlaceHolder_2();  |         |                            |
  1742  |             R = R + 2;  |      2  |                         0  |
  1747  |  resetPlaceHolder_2();  |         |                            |
  1753  |             R = R + 2;  |      2  |                         0  |
  1758  |  resetPlaceHolder_2();  |         |                            |
  1764  |             R = R + 2;  |      2  |                         0  |
  1769  |  resetPlaceHolder_2();  |         |                            |
  1775  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_2();  |         |                            |
  1786  |             R = R + 2;  |      2  |                         0  |
  1791  |  resetPlaceHolder_2();  |         |                            |
  1797  |             R = R + 2;  |      2  |                         0  |
  1802  |  resetPlaceHolder_2();  |         |                            |
  1808  |             R = R + 2;  |      2  |                         0  |
  1813  |  resetPlaceHolder_2();  |         |                            |
  1819  |             R = R + 2;  |      2  |                         0  |
  1824  |  resetPlaceHolder_2();  |         |                            |
  1830  |             R = R + 2;  |      2  |                         0  |
  1835  |  resetPlaceHolder_2();  |         |                            |
  1841  |             R = R + 2;  |      2  |                         0  |
  1846  |  resetPlaceHolder_2();  |         |                            |
  1852  |             R = R + 2;  |      2  |                         0  |
  1857  |  resetPlaceHolder_2();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1868  |  resetPlaceHolder_2();  |         |                            |
  1874  |             R = R + 2;  |      2  |                         0  |
  1879  |  resetPlaceHolder_2();  |         |                            |
  1885  |             R = R + 2;  |      2  |                         0  |
  1890  |  resetPlaceHolder_2();  |         |                            |
  1896  |             R = R + 2;  |      2  |                         0  |
  1901  |  resetPlaceHolder_2();  |         |                            |
  1907  |             R = R + 2;  |      2  |                         0  |
  1912  |  resetPlaceHolder_2();  |         |                            |
  1918  |             R = R + 2;  |      2  |                         0  |
  1923  |  resetPlaceHolder_2();  |         |                            |
  1929  |             R = R + 2;  |      2  |                         0  |
  1934  |  resetPlaceHolder_2();  |         |                            |
  1940  |             R = R + 2;  |      2  |                         0  |
  1945  |  resetPlaceHolder_2();  |         |                            |
  1951  |             R = R + 2;  |      2  |                         0  |
  1956  |  resetPlaceHolder_2();  |         |                            |
  1962  |             R = R + 2;  |      2  |                         0  |
  1967  |  resetPlaceHolder_2();  |         |                            |
  1973  |             R = R + 2;  |      2  |                         0  |
  1978  |  resetPlaceHolder_2();  |         |                            |
  1984  |             R = R + 2;  |      2  |                         0  |
  1989  |  resetPlaceHolder_2();  |         |                            |
  1995  |             R = R + 2;  |      2  |                         0  |
  2000  |  resetPlaceHolder_2();  |         |                            |
  2006  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_2();  |         |                            |
  2017  |             R = R + 2;  |      2  |                         0  |
  2022  |  resetPlaceHolder_2();  |         |                            |
  2028  |             R = R + 2;  |      2  |                         0  |
  2033  |  resetPlaceHolder_2();  |         |                            |
  2039  |             R = R + 2;  |      2  |                         0  |
  2044  |  resetPlaceHolder_2();  |         |                            |
  2050  |             R = R + 2;  |      2  |                         0  |
  2055  |  resetPlaceHolder_2();  |         |                            |
  2061  |             R = R + 2;  |      2  |                         0  |
  2066  |  resetPlaceHolder_2();  |         |                            |
  2072  |             R = R + 2;  |      2  |                         0  |
  2077  |  resetPlaceHolder_2();  |         |                            |
  2083  |             R = R + 2;  |      2  |                         0  |
  2088  |  resetPlaceHolder_2();  |         |                            |
  2094  |             R = R + 2;  |      2  |                         0  |
  2099  |  resetPlaceHolder_2();  |         |                            |
  2105  |             R = R + 2;  |      2  |                         0  |
  2110  |  resetPlaceHolder_2();  |         |                            |
  2116  |             R = R + 2;  |      2  |                         0  |
  2121  |  resetPlaceHolder_2();  |         |                            |
  2127  |             R = R + 2;  |      2  |                         0  |
  2132  |  resetPlaceHolder_2();  |         |                            |
  2138  |             R = R + 2;  |      2  |                         0  |
  2143  |  resetPlaceHolder_2();  |         |                            |
  2149  |             R = R + 2;  |      2  |                         0  |
  2154  |  resetPlaceHolder_2();  |         |                            |
  2160  |             R = R + 2;  |      2  |                         0  |
  2165  |  resetPlaceHolder_2();  |         |                            |
  2171  |             R = R + 2;  |      2  |                         0  |
  2176  |  resetPlaceHolder_2();  |         |                            |
  2182  |             R = R + 2;  |      2  |                         0  |
  2187  |  resetPlaceHolder_2();  |         |                            |
  2193  |             R = R + 2;  |      2  |                         0  |
  2198  |  resetPlaceHolder_2();  |         |                            |
  2204  |             R = R + 2;  |      2  |                         0  |
  2209  |  resetPlaceHolder_2();  |         |                            |
  2215  |             R = R + 2;  |      2  |                         0  |
  2220  |  resetPlaceHolder_2();  |         |                            |
  2226  |             R = R + 2;  |      2  |                         0  |
  2231  |  resetPlaceHolder_2();  |         |                            |
  2237  |             R = R + 2;  |      2  |                         0  |
  2242  |  resetPlaceHolder_2();  |         |                            |
  2248  |             R = R + 2;  |      2  |                         0  |
  2253  |  resetPlaceHolder_2();  |         |                            |
  2259  |             R = R + 2;  |      2  |                         0  |
  2264  |  resetPlaceHolder_2();  |         |                            |
  2270  |             R = R + 2;  |      2  |                         0  |
  2275  |  resetPlaceHolder_2();  |         |                            |
  2281  |             R = R + 2;  |      2  |                         0  |
  2286  |  resetPlaceHolder_2();  |         |                            |
  2292  |             R = R + 2;  |      2  |                         0  |
  2297  |  resetPlaceHolder_2();  |         |                            |
  2303  |             R = R + 2;  |      2  |                         0  |
  2308  |  resetPlaceHolder_2();  |         |                            |
  2314  |             R = R + 2;  |      2  |                         0  |
  2319  |  resetPlaceHolder_2();  |         |                            |
  2325  |             R = R + 2;  |      2  |                         0  |
  2330  |  resetPlaceHolder_2();  |         |                            |
  2336  |             R = R + 2;  |      2  |                         0  |
  2341  |  resetPlaceHolder_2();  |         |                            |
  2347  |             R = R + 2;  |      2  |                         0  |
  2352  |  resetPlaceHolder_2();  |         |                            |
  2358  |             R = R + 2;  |      2  |                         0  |
  2363  |  resetPlaceHolder_2();  |         |                            |
  2369  |             R = R + 2;  |      2  |                         0  |
  2374  |  resetPlaceHolder_2();  |         |                            |
  2380  |             R = R + 2;  |      2  |                         0  |
  2385  |  resetPlaceHolder_2();  |         |                            |
  2391  |             R = R + 2;  |      2  |                         0  |
  2396  |  resetPlaceHolder_2();  |         |                            |
  2402  |             R = R + 2;  |      2  |                         0  |
  2407  |  resetPlaceHolder_2();  |         |                            |
  2413  |             R = R + 2;  |      2  |                         0  |
  2418  |  resetPlaceHolder_2();  |         |                            |
  2424  |             R = R + 2;  |      2  |                         0  |
  2429  |  resetPlaceHolder_2();  |         |                            |
  2435  |             R = R + 2;  |      2  |                         0  |
  2440  |  resetPlaceHolder_2();  |         |                            |
  2446  |             R = R + 2;  |      2  |                         0  |
  2451  |  resetPlaceHolder_2();  |         |                            |
  2457  |             R = R + 2;  |      2  |                         0  |
  2462  |  resetPlaceHolder_2();  |         |                            |
  2468  |             R = R + 2;  |      2  |                         0  |
  2473  |  resetPlaceHolder_2();  |         |                            |
  2479  |             R = R + 2;  |      2  |                         0  |
  2484  |  resetPlaceHolder_2();  |         |                            |
  2490  |             R = R + 2;  |      2  |                         0  |
  2495  |  resetPlaceHolder_2();  |         |                            |
  2501  |             R = R + 2;  |      2  |                         0  |
  2506  |  resetPlaceHolder_2();  |         |                            |
  2512  |             R = R + 2;  |      2  |                         0  |
  2517  |  resetPlaceHolder_2();  |         |                            |
  2523  |             R = R + 2;  |      2  |                         0  |
  2528  |  resetPlaceHolder_2();  |         |                            |
  2534  |             R = R + 2;  |      2  |                         0  |
  2539  |  resetPlaceHolder_2();  |         |                            |
  2545  |             R = R + 2;  |      2  |                         0  |
  2550  |  resetPlaceHolder_2();  |         |                            |
  2556  |             R = R + 2;  |      2  |                         0  |
  2561  |  resetPlaceHolder_2();  |         |                            |
  2567  |             R = R + 2;  |      2  |                         0  |
  2572  |  resetPlaceHolder_2();  |         |                            |
  2578  |             R = R + 2;  |      2  |                         0  |
  2583  |  resetPlaceHolder_2();  |         |                            |
  2589  |             R = R + 2;  |      2  |                         0  |
  2594  |  resetPlaceHolder_2();  |         |                            |
  2600  |             R = R + 2;  |      2  |                         0  |
  2605  |  resetPlaceHolder_2();  |         |                            |
  2611  |             R = R + 2;  |      2  |                         0  |
  2616  |  resetPlaceHolder_2();  |         |                            |
  2622  |             R = R + 2;  |      2  |                         0  |
  2627  |  resetPlaceHolder_2();  |         |                            |
  2633  |             R = R + 2;  |      2  |                         0  |
  2638  |  resetPlaceHolder_2();  |         |                            |
  2644  |             R = R + 2;  |      2  |                         0  |
  2649  |  resetPlaceHolder_2();  |         |                            |
  2655  |             R = R + 2;  |      2  |                         0  |
  2660  |  resetPlaceHolder_2();  |         |                            |
  2666  |             R = R + 2;  |      2  |                         0  |
  2671  |  resetPlaceHolder_2();  |         |                            |
  2677  |             R = R + 2;  |      2  |                         0  |
  2682  |  resetPlaceHolder_2();  |         |                            |
  2688  |             R = R + 2;  |      2  |                         0  |
  2693  |  resetPlaceHolder_2();  |         |                            |
  2699  |             R = R + 2;  |      2  |                         0  |
  2704  |  resetPlaceHolder_2();  |         |                            |
  2710  |             R = R + 2;  |      2  |                         0  |
  2715  |  resetPlaceHolder_2();  |         |                            |
  2721  |             R = R + 2;  |      2  |                         0  |
  2726  |  resetPlaceHolder_2();  |         |                            |
  2732  |             R = R + 2;  |      2  |                         0  |
  2737  |  resetPlaceHolder_2();  |         |                            |
  2743  |             R = R + 2;  |      2  |                         0  |
  2748  |  resetPlaceHolder_2();  |         |                            |
  2754  |             R = R + 2;  |      2  |                         0  |
  2759  |  resetPlaceHolder_2();  |         |                            |
  2765  |             R = R + 2;  |      2  |                         0  |
  2770  |  resetPlaceHolder_2();  |         |                            |
  2776  |             R = R + 2;  |      2  |                         0  |
  2781  |  resetPlaceHolder_2();  |         |                            |
  2787  |             R = R + 1;  |      1  |                         0  |
  2792  |  resetPlaceHolder_1();  |         |                            |
  2806  |             R = R + 2;  |      2  |                         0  |
  2811  |  resetPlaceHolder_2();  |         |                            |
  2817  |             R = R + 2;  |      2  |                         0  |
  2822  |  resetPlaceHolder_2();  |         |                            |
  2828  |             R = R + 2;  |      2  |                         0  |
  2833  |  resetPlaceHolder_2();  |         |                            |
  2839  |             R = R + 2;  |      2  |                         0  |
  2844  |  resetPlaceHolder_2();  |         |                            |
  2850  |             R = R + 2;  |      2  |                         0  |
  2855  |  resetPlaceHolder_2();  |         |                            |
  2861  |             R = R + 2;  |      2  |                         0  |
  2866  |  resetPlaceHolder_2();  |         |                            |
  2872  |             R = R + 2;  |      2  |                         0  |
  2877  |  resetPlaceHolder_2();  |         |                            |
  2883  |             R = R + 2;  |      2  |                         0  |
  2888  |  resetPlaceHolder_2();  |         |                            |
  2894  |             R = R + 2;  |      2  |                         0  |
  2899  |  resetPlaceHolder_2();  |         |                            |
  2905  |             R = R + 2;  |      2  |                         0  |
  2910  |  resetPlaceHolder_2();  |         |                            |
  2916  |             R = R + 2;  |      2  |                         0  |
  2921  |  resetPlaceHolder_2();  |         |                            |
  2927  |             R = R + 2;  |      2  |                         0  |
  2932  |  resetPlaceHolder_2();  |         |                            |
  2938  |             R = R + 2;  |      2  |                         0  |
  2943  |  resetPlaceHolder_2();  |         |                            |
  2949  |             R = R + 2;  |      2  |                         0  |
  2954  |  resetPlaceHolder_2();  |         |                            |
  2960  |             R = R + 2;  |      2  |                         0  |
  2965  |  resetPlaceHolder_2();  |         |                            |
  2971  |             R = R + 2;  |      2  |                         0  |
  2976  |  resetPlaceHolder_2();  |         |                            |
  2982  |             R = R + 2;  |      2  |                         0  |
  2987  |  resetPlaceHolder_2();  |         |                            |
  2993  |             R = R + 2;  |      2  |                         0  |
  2998  |  resetPlaceHolder_2();  |         |                            |
  3004  |             R = R + 2;  |      2  |                         0  |
  3009  |  resetPlaceHolder_2();  |         |                            |
  3015  |             R = R + 2;  |      2  |                         0  |
  3020  |  resetPlaceHolder_2();  |         |                            |
  3026  |             R = R + 2;  |      2  |                         0  |
  3031  |  resetPlaceHolder_2();  |         |                            |
  3037  |             R = R + 2;  |      2  |                         0  |
  3042  |  resetPlaceHolder_2();  |         |                            |
  3048  |             R = R + 2;  |      2  |                         0  |
  3053  |  resetPlaceHolder_2();  |         |                            |
  3059  |             R = R + 2;  |      2  |                         0  |
  3064  |  resetPlaceHolder_2();  |         |                            |
  3070  |             R = R + 2;  |      2  |                         0  |
  3075  |  resetPlaceHolder_2();  |         |                            |
  3081  |             R = R + 2;  |      2  |                         0  |
  3086  |  resetPlaceHolder_2();  |         |                            |
  3092  |             R = R + 2;  |      2  |                         0  |
  3097  |  resetPlaceHolder_2();  |         |                            |
  3103  |             R = R + 2;  |      2  |                         0  |
  3108  |  resetPlaceHolder_2();  |         |                            |
  3114  |             R = R + 2;  |      2  |                         0  |
  3119  |  resetPlaceHolder_2();  |         |                            |
  3125  |             R = R + 2;  |      2  |                         0  |
  3130  |  resetPlaceHolder_2();  |         |                            |
  3136  |             R = R + 2;  |      2  |                         0  |
  3141  |  resetPlaceHolder_2();  |         |                            |
  3147  |             R = R + 2;  |      2  |                         0  |
  3152  |  resetPlaceHolder_2();  |         |                            |
  3158  |             R = R + 2;  |      2  |                         0  |
  3163  |  resetPlaceHolder_2();  |         |                            |
  3169  |             R = R + 2;  |      2  |                         0  |
  3174  |  resetPlaceHolder_2();  |         |                            |
  3180  |             R = R + 2;  |      2  |                         0  |
  3185  |  resetPlaceHolder_2();  |         |                            |
  3191  |             R = R + 2;  |      2  |                         0  |
  3196  |  resetPlaceHolder_2();  |         |                            |
  3202  |             R = R + 2;  |      2  |                         0  |
  3207  |  resetPlaceHolder_2();  |         |                            |
  3213  |             R = R + 2;  |      2  |                         0  |
  3218  |  resetPlaceHolder_2();  |         |                            |
  3224  |             R = R + 2;  |      2  |                         0  |
  3229  |  resetPlaceHolder_2();  |         |                            |
  3235  |             R = R + 2;  |      2  |                         0  |
  3240  |  resetPlaceHolder_2();  |         |                            |
  3246  |             R = R + 2;  |      2  |                         0  |
  3251  |  resetPlaceHolder_2();  |         |                            |
  3257  |             R = R + 2;  |      2  |                         0  |
  3262  |  resetPlaceHolder_2();  |         |                            |
  3268  |             R = R + 2;  |      2  |                         0  |
  3273  |  resetPlaceHolder_2();  |         |                            |
  3279  |             R = R + 2;  |      2  |                         0  |
  3284  |  resetPlaceHolder_2();  |         |                            |
  3290  |             R = R + 2;  |      2  |                         0  |
  3295  |  resetPlaceHolder_2();  |         |                            |
  3301  |             R = R + 2;  |      2  |                         0  |
  3306  |  resetPlaceHolder_2();  |         |                            |
  3312  |             R = R + 2;  |      2  |                         0  |
  3317  |  resetPlaceHolder_2();  |         |                            |
  3323  |             R = R + 2;  |      2  |                         0  |
  3328  |  resetPlaceHolder_2();  |         |                            |
  3334  |             R = R + 2;  |      2  |                         0  |
  3339  |  resetPlaceHolder_2();  |         |                            |
  3345  |             R = R + 2;  |      2  |                         0  |
  3350  |  resetPlaceHolder_2();  |         |                            |
  3356  |             R = R + 2;  |      2  |                         0  |
  3361  |  resetPlaceHolder_2();  |         |                            |
  3367  |             R = R + 2;  |      2  |                         0  |
  3372  |  resetPlaceHolder_2();  |         |                            |
  3378  |             R = R + 2;  |      2  |                         0  |
  3383  |  resetPlaceHolder_2();  |         |                            |
  3389  |             R = R + 2;  |      2  |                         0  |
  3394  |  resetPlaceHolder_2();  |         |                            |
  3400  |             R = R + 2;  |      2  |                         0  |
  3405  |  resetPlaceHolder_2();  |         |                            |
  3411  |             R = R + 2;  |      2  |                         0  |
  3416  |  resetPlaceHolder_2();  |         |                            |
  3422  |             R = R + 2;  |      2  |                         0  |
  3427  |  resetPlaceHolder_2();  |         |                            |
  3433  |             R = R + 2;  |      2  |                         0  |
  3438  |  resetPlaceHolder_2();  |         |                            |
  3444  |             R = R + 2;  |      2  |                         0  |
  3449  |  resetPlaceHolder_2();  |         |                            |
  3455  |             R = R + 2;  |      2  |                         0  |
  3460  |  resetPlaceHolder_2();  |         |                            |
  3466  |             R = R + 2;  |      2  |                         0  |
  3471  |  resetPlaceHolder_2();  |         |                            |
  3477  |             R = R + 2;  |      2  |                         0  |
  3482  |  resetPlaceHolder_2();  |         |                            |
  3488  |             R = R + 2;  |      2  |                         0  |
  3493  |  resetPlaceHolder_2();  |         |                            |
  3499  |             R = R + 2;  |      2  |                         0  |
  3504  |  resetPlaceHolder_2();  |         |                            |
  3510  |             R = R + 2;  |      2  |                         0  |
  3515  |  resetPlaceHolder_2();  |         |                            |
  3521  |             R = R + 2;  |      2  |                         0  |
  3526  |  resetPlaceHolder_2();  |         |                            |
  3532  |             R = R + 2;  |      2  |                         0  |
  3537  |  resetPlaceHolder_2();  |         |                            |
  3543  |             R = R + 2;  |      2  |                         0  |
  3548  |  resetPlaceHolder_2();  |         |                            |
  3554  |             R = R + 2;  |      2  |                         0  |
  3559  |  resetPlaceHolder_2();  |         |                            |
  3565  |             R = R + 2;  |      2  |                         0  |
  3570  |  resetPlaceHolder_2();  |         |                            |
  3576  |             R = R + 2;  |      2  |                         0  |
  3581  |  resetPlaceHolder_2();  |         |                            |
  3587  |             R = R + 2;  |      2  |                         0  |
  3592  |  resetPlaceHolder_2();  |         |                            |
  3598  |             R = R + 2;  |      2  |                         0  |
  3603  |  resetPlaceHolder_2();  |         |                            |
  3609  |             R = R + 2;  |      2  |                         0  |
  3614  |  resetPlaceHolder_2();  |         |                            |
  3620  |             R = R + 2;  |      2  |                         0  |
  3625  |  resetPlaceHolder_2();  |         |                            |
  3631  |             R = R + 2;  |      2  |                         0  |
  3636  |  resetPlaceHolder_2();  |         |                            |
  3642  |             R = R + 2;  |      2  |                         0  |
  3647  |  resetPlaceHolder_2();  |         |                            |
  3653  |             R = R + 2;  |      2  |                         0  |
  3658  |  resetPlaceHolder_2();  |         |                            |
  3664  |             R = R + 2;  |      2  |                         0  |
  3669  |  resetPlaceHolder_2();  |         |                            |
  3675  |             R = R + 2;  |      2  |                         0  |
  3680  |  resetPlaceHolder_2();  |         |                            |
  3686  |             R = R + 2;  |      2  |                         0  |
  3691  |  resetPlaceHolder_2();  |         |                            |
  3697  |             R = R + 2;  |      2  |                         0  |
  3702  |  resetPlaceHolder_2();  |         |                            |
  3708  |             R = R + 2;  |      2  |                         0  |
  3713  |  resetPlaceHolder_2();  |         |                            |
  3719  |             R = R + 2;  |      2  |                         0  |
  3724  |  resetPlaceHolder_2();  |         |                            |
  3730  |             R = R + 2;  |      2  |                         0  |
  3735  |  resetPlaceHolder_2();  |         |                            |
  3741  |             R = R + 2;  |      2  |                         0  |
  3746  |  resetPlaceHolder_2();  |         |                            |
  3752  |             R = R + 2;  |      2  |                         0  |
  3757  |  resetPlaceHolder_2();  |         |                            |
  3763  |             R = R + 2;  |      2  |                         0  |
  3768  |  resetPlaceHolder_2();  |         |                            |
  3774  |             R = R + 2;  |      2  |                         0  |
  3779  |  resetPlaceHolder_2();  |         |                            |
  3785  |             R = R + 2;  |      2  |                         0  |
  3790  |  resetPlaceHolder_2();  |         |                            |
  3796  |             R = R + 2;  |      2  |                         0  |
  3801  |  resetPlaceHolder_2();  |         |                            |
  3807  |             R = R + 2;  |      2  |                         0  |
  3812  |  resetPlaceHolder_2();  |         |                            |
  3818  |             R = R + 2;  |      2  |                         0  |
  3823  |  resetPlaceHolder_2();  |         |                            |
  3829  |             R = R + 2;  |      2  |                         0  |
  3834  |  resetPlaceHolder_2();  |         |                            |
  3840  |             R = R + 2;  |      2  |                         0  |
  3845  |  resetPlaceHolder_2();  |         |                            |
  3851  |             R = R + 2;  |      2  |                         0  |
  3856  |  resetPlaceHolder_2();  |         |                            |
  3862  |             R = R + 2;  |      2  |                         0  |
  3867  |  resetPlaceHolder_2();  |         |                            |
  3873  |             R = R + 2;  |      2  |                         0  |
  3878  |  resetPlaceHolder_2();  |         |                            |
  3884  |             R = R + 2;  |      2  |                         0  |
  3889  |  resetPlaceHolder_2();  |         |                            |
  3895  |             R = R + 2;  |      2  |                         0  |
  3900  |  resetPlaceHolder_2();  |         |                            |
  3906  |             R = R + 2;  |      2  |                         0  |
  3911  |  resetPlaceHolder_2();  |         |                            |
  3917  |             R = R + 2;  |      2  |                         0  |
  3922  |  resetPlaceHolder_2();  |         |                            |
  3928  |             R = R + 2;  |      2  |                         0  |
  3933  |  resetPlaceHolder_2();  |         |                            |
  3939  |             R = R + 2;  |      2  |                         0  |
  3944  |  resetPlaceHolder_2();  |         |                            |
  3950  |             R = R + 2;  |      2  |                         0  |
  3955  |  resetPlaceHolder_2();  |         |                            |
  3961  |             R = R + 2;  |      2  |                         0  |
  3966  |  resetPlaceHolder_2();  |         |                            |
  3972  |             R = R + 2;  |      2  |                         0  |
  3977  |  resetPlaceHolder_2();  |         |                            |
  3983  |             R = R + 2;  |      2  |                         0  |
  3988  |  resetPlaceHolder_2();  |         |                            |
  3994  |             R = R + 2;  |      2  |                         0  |
  3999  |  resetPlaceHolder_2();  |         |                            |
  4005  |             R = R + 2;  |      2  |                         0  |
  4010  |  resetPlaceHolder_2();  |         |                            |
  4016  |             R = R + 2;  |      2  |                         0  |
  4021  |  resetPlaceHolder_2();  |         |                            |
  4027  |             R = R + 2;  |      2  |                         0  |
  4032  |  resetPlaceHolder_2();  |         |                            |
  4038  |             R = R + 2;  |      2  |                         0  |
  4043  |  resetPlaceHolder_2();  |         |                            |
  4049  |             R = R + 2;  |      2  |                         0  |
  4054  |  resetPlaceHolder_2();  |         |                            |
  4060  |             R = R + 2;  |      2  |                         0  |
  4065  |  resetPlaceHolder_2();  |         |                            |
  4071  |             R = R + 2;  |      2  |                         0  |
  4076  |  resetPlaceHolder_2();  |         |                            |
  4082  |             R = R + 2;  |      2  |                         0  |
  4087  |  resetPlaceHolder_2();  |         |                            |
  4093  |             R = R + 2;  |      2  |                         0  |
  4098  |  resetPlaceHolder_2();  |         |                            |
  4104  |             R = R + 2;  |      2  |                         0  |
  4109  |  resetPlaceHolder_2();  |         |                            |
  4115  |             R = R + 2;  |      2  |                         0  |
  4120  |  resetPlaceHolder_2();  |         |                            |
  4126  |             R = R + 2;  |      2  |                         0  |
  4131  |  resetPlaceHolder_2();  |         |                            |
  4137  |             R = R + 2;  |      2  |                         0  |
  4142  |  resetPlaceHolder_2();  |         |                            |
  4148  |             R = R + 2;  |      2  |                         0  |
  4153  |  resetPlaceHolder_2();  |         |                            |
  4159  |             R = R + 2;  |      2  |                         0  |
  4164  |  resetPlaceHolder_2();  |         |                            |
  4170  |             R = R + 2;  |      2  |                         0  |
  4175  |  resetPlaceHolder_2();  |         |                            |
  4181  |             R = R + 2;  |      2  |                         0  |
  4186  |  resetPlaceHolder_2();  |         |                            |
  4192  |             R = R + 2;  |      2  |                         0  |
  4197  |  resetPlaceHolder_2();  |         |                            |
  4203  |             R = R + 2;  |      2  |                         0  |
  4208  |  resetPlaceHolder_2();  |         |                            |
  4214  |             R = R + 2;  |      2  |                         0  |
  4219  |  resetPlaceHolder_2();  |         |                            |
  4225  |             R = R + 2;  |      2  |                         0  |
  4230  |  resetPlaceHolder_2();  |         |                            |
  4236  |             R = R + 2;  |      2  |                         0  |
  4241  |  resetPlaceHolder_2();  |         |                            |
  4247  |             R = R + 2;  |      2  |                         0  |
  4252  |  resetPlaceHolder_2();  |         |                            |
  4258  |             R = R + 1;  |      1  |                         0  |
  4263  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java.actual	2023-01-10 17:08:22.276452048 -0700
@@ -1,17 +1,14 @@
 abstract class AppendDisplayNames {
   void execute(int sorted) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
-    int C1 = -1;
     int D0 = 0;
     int D0p = 0;
-    int D1 = 0;
-    int D1p = 0;
     int temporarySorted = 0;
     int lastIndexOfSorted = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * sorted) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * sorted) + 8)));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (sorted + (2 * sorted))) || (((0 + (D0p * C0)) + (D1p * C1)) == (sorted + (2 * sorted))));
+    lessPreciseBound(((0 + (D0p * C0)) < ((8 * sorted) + 8)) || ((0 + (D0p * C0)) == ((8 * sorted) + 8)));
+    mostPreciseBound(((0 + (D0p * C0)) < (sorted + (2 * sorted))) || ((0 + (D0p * C0)) == (sorted + (2 * sorted))));
     if ((sorted < 1) || (sorted == 1))
     {
       return;
@@ -37,16 +34,10 @@
       {
         D0 = D0 + 2;
         j = j + 1;
-        // reset R1
-        D0p = D0;
-        D0 = 0;
-        C0 = C0 + 1;
+        // reset R0
       }
-      D1 = D1 + 1;
+      D0 = D0 + 1;
       i = i + 1;
-      D1p = D1;
-      D1 = 0;
-      C1 = C1 + 1;
       // reset R0
     }
   }


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	0m40.168s
user	0m51.862s
sys	0m1.767s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * sorted) + 8)) || ((0 + (D0p * C0)) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (sorted + (2 * sorted))) || ((0 + (D0p * C0)) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * sorted) + 8)) || ((0 + (D0p * C0)) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (sorted + (2 * sorted))) || ((0 + (D0p * C0)) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ sorted (* 2 sorted)))
    (= (+ 0 (* D0p C0)) (+ sorted (* 2 sorted))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ sorted (* 2 sorted)))
    (= (+ 0 (* D0p C0)) (+ sorted (* 2 sorted))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ sorted (* 2 sorted)))
    (= (+ 0 (* D0p C0)) (+ sorted (* 2 sorted))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1708-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1708-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.908s
user	0m23.470s
sys	0m2.734s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m2.012s
user	0m3.517s
sys	0m0.179s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:212)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:182)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:105)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:153)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:70)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:51)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:104)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:87)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:87)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:62)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:62)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:58)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:58)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.027s
user	0m3.692s
sys	0m0.200s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.014s
user	0m1.627s
sys	0m0.150s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz7375274647155064435/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7375274647155064435/bin -o /tmp/qfuzz7375274647155064435/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7375274647155064435/bin
Found file /tmp/qfuzz7375274647155064435/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz7375274647155064435/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7375274647155064435/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7375274647155064435/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7375274647155064435/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7375274647155064435/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 121617 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7375274647155064435/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.950s
user	0m14.576s
sys	0m1.114s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.929s
user	0m3.424s
sys	0m0.208s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * pattern) + (8 * pos)) + 8)) || ((0 + (D0p * C0)) == (((8 * pattern) + (8 * pos)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if (((((pattern < 0) || (pattern == 0)) || ((pos < 0) || (pos == 0))) || (pattern < pos)) || !((((stopIndex < pattern) || (stopIndex == pattern)) && !((stopIndex < pos)))))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int R = 0;
    int start = pos;
    int lastHold = start;
    int i = pos;
    while (i < pattern)
    {
      if (i == stopIndex)
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex, int pos)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * pattern) + (8 * pos)) + 8)) || ((0 + (D0p * C0)) == (((8 * pattern) + (8 * pos)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if (((((pattern < 0) || (pattern == 0)) || ((pos < 0) || (pos == 0))) || (pattern < pos)) || !((((stopIndex < pattern) || (stopIndex == pattern)) && !((stopIndex < pos)))))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int R = 0;
    int start = pos;
    int lastHold = start;
    int i = pos;
    while (i < pattern)
    {
      if (i == stopIndex)
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 stopIndex)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `21.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1709-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1709-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m23.566s
user	0m36.661s
sys	0m5.856s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz6506153478749077746/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6506153478749077746/bin -o /tmp/qfuzz6506153478749077746/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6506153478749077746/bin
Found file /tmp/qfuzz6506153478749077746/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz6506153478749077746/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6506153478749077746/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6506153478749077746/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6506153478749077746/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6506153478749077746/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 122589 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6506153478749077746/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.639s
user	0m13.347s
sys	0m1.085s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.923s
user	0m3.424s
sys	0m0.280s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      D0 = D0 + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      D0 = D0 + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        D1 = D1 + sep2;
        builder = builder + 1;
        D0 = D0 + 1;
        k = k + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      D0 = D0 + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      D0 = D0 + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        D1 = D1 + sep2;
        builder = builder + 1;
        D0 = D0 + 1;
        k = k + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 argumentTypes) (* 1 1 recursiveTypeIndexes)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 argumentTypes)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `35.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1710-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1710-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m37.002s
user	1m32.539s
sys	0m11.819s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz7421474864332779203/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7421474864332779203/bin -o /tmp/qfuzz7421474864332779203/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7421474864332779203/bin
Found file /tmp/qfuzz7421474864332779203/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz7421474864332779203/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7421474864332779203/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7421474864332779203/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7421474864332779203/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7421474864332779203/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 117610 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7421474864332779203/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz7421474864332779203/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7421474864332779203/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7421474864332779203/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 157)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.768s
user	0m14.221s
sys	0m1.020s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |   0  |    2  |
    11  |                         int R = 0;  |         |  0  |     |   0  |    2  |
    12  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    15  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    29  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    44  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java.actual	2023-01-10 17:11:35.436318811 -0700
@@ -1,7 +1,7 @@
 abstract class DbgPrint {
   void execute(int src) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.289s
user	0m9.659s
sys	0m1.617s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * src) + 8)) || ((0 + (D0p * C0)) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < src) || ((0 + (D0p * C0)) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * src) + 8)) || ((0 + (D0p * C0)) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < src) || ((0 + (D0p * C0)) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) src) (= (+ 0 (* D0p C0)) src))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) src) (= (+ 0 (* D0p C0)) src))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) src) (= (+ 0 (* D0p C0)) src))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1711-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1711-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.445s
user	0m15.939s
sys	0m2.333s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz7356937556418217850/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7356937556418217850/bin -o /tmp/qfuzz7356937556418217850/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7356937556418217850/bin
Found file /tmp/qfuzz7356937556418217850/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz7356937556418217850/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7356937556418217850/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7356937556418217850/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7356937556418217850/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7356937556418217850/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 124420 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 68.00; [81.00,149.00,235.00,321.00,401.00]
2; /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 330.00; [15.00,345.00]
3; /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 4; 10.00; [15.00,25.00,71.00,153.00]
8; /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 5; 14.00; [47.00,85.00,149.00,397.00,411.00]
9; /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 4.00; [15.00,235.00,239.00,355.00]
15; /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 5; 80.00; [41.00,149.00,239.00,321.00,401.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 112, 13, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 5, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(192, 16, 191, 35, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7356937556418217850/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(106, 110, 170)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,112,13,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,5,69]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [192,16,191,35,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [106,110,170]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.157s
user	0m15.319s
sys	0m0.988s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,112,13,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([192,16,191,35,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([22,5,69])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([106,110,170])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 93):
                                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff          |  i  |  lhsBuilder  |  rhsBuilder  |
---------------------------------------------------------------------------------------------------------------------------------------
     9  |                int lhsBuilder = 0;  |         |       |         |  [187,112,13,153,67]  |     |           0  |              |
    11  |                int rhsBuilder = 0;  |         |       |         |  [187,112,13,153,67]  |     |           0  |           0  |
    13  |                         int R = 0;  |         |    0  |         |  [187,112,13,153,67]  |     |           0  |           0  |
    14  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [187,112,13,153,67]  |     |           0  |           0  |
    15  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [187,112,13,153,67]  |     |           0  |           0  |
    17  |                     int chunk = 0;  |         |    0  |      0  |  [187,112,13,153,67]  |     |           0  |           0  |
    19  |                         int i = 0;  |         |    0  |      0  |  [187,112,13,153,67]  |  0  |           0  |           0  |
    25  |        chunk = arrayRead(diff, i);  |         |    0  |    187  |  [187,112,13,153,67]  |  0  |           0  |           0  |
    28  |                     R = R + chunk;  |    187  |  187  |    187  |  [187,112,13,153,67]  |  0  |           0  |           0  |
    32  |                         i = i + 1;  |         |  187  |    187  |  [187,112,13,153,67]  |  1  |           0  |           0  |
    33  |              resetPlaceHolder_1();  |         |  187  |    187  |  [187,112,13,153,67]  |  1  |           0  |           0  |
    39  |        chunk = arrayRead(diff, i);  |         |  187  |    112  |  [187,112,13,153,67]  |  1  |           0  |           0  |
    42  |                     R = R + chunk;  |    112  |  299  |    112  |  [187,112,13,153,67]  |  1  |           0  |           0  |
    46  |                         i = i + 1;  |         |  299  |    112  |  [187,112,13,153,67]  |  2  |           0  |           0  |
    47  |              resetPlaceHolder_1();  |         |  299  |    112  |  [187,112,13,153,67]  |  2  |           0  |           0  |
    53  |        chunk = arrayRead(diff, i);  |         |  299  |     13  |  [187,112,13,153,67]  |  2  |           0  |           0  |
    56  |                     R = R + chunk;  |     13  |  312  |     13  |  [187,112,13,153,67]  |  2  |           0  |           0  |
    60  |                         i = i + 1;  |         |  312  |     13  |  [187,112,13,153,67]  |  3  |           0  |           0  |
    61  |              resetPlaceHolder_1();  |         |  312  |     13  |  [187,112,13,153,67]  |  3  |           0  |           0  |
    67  |        chunk = arrayRead(diff, i);  |         |  312  |    153  |  [187,112,13,153,67]  |  3  |           0  |           0  |
    70  |                     R = R + chunk;  |    153  |  465  |    153  |  [187,112,13,153,67]  |  3  |           0  |           0  |
    74  |                         i = i + 1;  |         |  465  |    153  |  [187,112,13,153,67]  |  4  |           0  |           0  |
    75  |              resetPlaceHolder_1();  |         |  465  |    153  |  [187,112,13,153,67]  |  4  |           0  |           0  |
    81  |        chunk = arrayRead(diff, i);  |         |  465  |     67  |  [187,112,13,153,67]  |  4  |           0  |           0  |
    84  |                     R = R + chunk;  |     67  |  532  |     67  |  [187,112,13,153,67]  |  4  |           0  |           0  |
    88  |                         i = i + 1;  |         |  532  |     67  |  [187,112,13,153,67]  |  5  |           0  |           0  |
    89  |              resetPlaceHolder_1();  |         |  532  |     67  |  [187,112,13,153,67]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56} because there exists a longer and subsuming segment {28,56} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {84} because there exists a longer and subsuming segment {28,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28} because there exists a longer and subsuming segment {28,56} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42} because there exists a longer and subsuming segment {42,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {70} because there exists a longer and subsuming segment {70,84} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,56} because there exists a longer and subsuming segment {28,42,56} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,84} because there exists a longer and subsuming segment {28,42,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42,84} because there exists a longer and subsuming segment {42,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {70,84} because there exists a longer and subsuming segment {42,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,42} because there exists a longer and subsuming segment {28,42,70} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,70} because there exists a longer and subsuming segment {56,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {28,70} because there exists a longer and subsuming segment {28,42,70} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,84} because there exists a longer and subsuming segment {56,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42,70} because there exists a longer and subsuming segment {42,70,84} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {42,56} because there exists a longer and subsuming segment {42,56,84} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 42, 84, 28, 70]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28,42,56,70,84}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    28  |         R = R + chunk;  |    187  |                         0  |
    33  |  resetPlaceHolder_1();  |         |                            |
    42  |         R = R + chunk;  |    112  |                         0  |
    47  |  resetPlaceHolder_1();  |         |                            |
    56  |         R = R + chunk;  |     13  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    70  |         R = R + chunk;  |    153  |                         0  |
    75  |  resetPlaceHolder_1();  |         |                            |
    84  |         R = R + chunk;  |     67  |                         0  |
    89  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java.actual	2023-01-10 17:12:24.477251388 -0700
@@ -1,7 +1,7 @@
 abstract class DiffResultToString {
   void execute(int diff) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m5.426s
user	0m9.819s
sys	0m1.639s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * diff) + 8)) || ((0 + (D0p * C0)) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < diff) || ((0 + (D0p * C0)) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * diff) + 8)) || ((0 + (D0p * C0)) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < diff) || ((0 + (D0p * C0)) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) diff) (= (+ 0 (* D0p C0)) diff))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) diff) (= (+ 0 (* D0p C0)) diff))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) diff) (= (+ 0 (* D0p C0)) diff))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1712-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1712-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.661s
user	0m16.228s
sys	0m2.249s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz1835227463740155266/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1835227463740155266/bin -o /tmp/qfuzz1835227463740155266/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1835227463740155266/bin
Found file /tmp/qfuzz1835227463740155266/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz1835227463740155266/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1835227463740155266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1835227463740155266/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1835227463740155266/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1835227463740155266/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 121015 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta; 6; 7.00; [73.00,81.00,158.00,165.00,235.00,399.00]
7; /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+partition,+delta; 7; 18.00; [47.00,106.00,124.00,179.00,201.00,331.00,399.00]
10; /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 7; 34.00; [81.00,115.00,194.00,235.00,307.00,348.00,399.00]
12; /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 6; 7.00; [74.00,81.50,115.00,187.00,337.00,399.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
/tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+partition,+delta
/tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 75, 29, 75, 75, 75, 75, 75, 75, 75, 73, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 158, 82, 93, 16, 49, 58, 23, 47, 153, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 146, 50, 170, 93, 16, 187, 106, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1835227463740155266/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 161, 33, 86, 50, 33, 37, 67, 50, 61, 187, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,75,29], 75, 75
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,158,82,93,16], 49, 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,146,50], 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,161,33,86,50], 33, 37
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.056s
user	0m14.094s
sys	0m1.067s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,33,75,29], 75, 75)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,161,33,86,50], 33, 37)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,33,146,50], 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,158,82,93,16], 49, 58)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 135):
                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |        tokens        |  years  |
------------------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |     0  |         |     |      75  |  [187,110,33,75,29]  |     75  |
    26  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |      75  |  [187,110,33,75,29]  |     75  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |      75  |  [187,110,33,75,29]  |     75  |
    29  |                     int chunk = 0;  |         |     0  |      0  |     |      75  |  [187,110,33,75,29]  |     75  |
    31  |                         int i = 0;  |         |     0  |      0  |  0  |      75  |  [187,110,33,75,29]  |     75  |
    37  |      chunk = arrayRead(tokens, i);  |         |     0  |    187  |  0  |      75  |  [187,110,33,75,29]  |     75  |
    40  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |      75  |  [187,110,33,75,29]  |     75  |
    43  |                     R = R + years;  |     75  |   262  |    187  |  0  |      75  |  [187,110,33,75,29]  |     75  |
    46  |                    R = R + months;  |     75  |   337  |    187  |  0  |      75  |  [187,110,33,75,29]  |     75  |
    50  |                         i = i + 1;  |         |   337  |    187  |  1  |      75  |  [187,110,33,75,29]  |     75  |
    51  |              resetPlaceHolder_1();  |         |   337  |    187  |  1  |      75  |  [187,110,33,75,29]  |     75  |
    57  |      chunk = arrayRead(tokens, i);  |         |   337  |    110  |  1  |      75  |  [187,110,33,75,29]  |     75  |
    60  |                     R = R + chunk;  |    110  |   447  |    110  |  1  |      75  |  [187,110,33,75,29]  |     75  |
    63  |                     R = R + years;  |     75  |   522  |    110  |  1  |      75  |  [187,110,33,75,29]  |     75  |
    66  |                    R = R + months;  |     75  |   597  |    110  |  1  |      75  |  [187,110,33,75,29]  |     75  |
    70  |                         i = i + 1;  |         |   597  |    110  |  2  |      75  |  [187,110,33,75,29]  |     75  |
    71  |              resetPlaceHolder_1();  |         |   597  |    110  |  2  |      75  |  [187,110,33,75,29]  |     75  |
    77  |      chunk = arrayRead(tokens, i);  |         |   597  |     33  |  2  |      75  |  [187,110,33,75,29]  |     75  |
    80  |                     R = R + chunk;  |     33  |   630  |     33  |  2  |      75  |  [187,110,33,75,29]  |     75  |
    83  |                     R = R + years;  |     75  |   705  |     33  |  2  |      75  |  [187,110,33,75,29]  |     75  |
    86  |                    R = R + months;  |     75  |   780  |     33  |  2  |      75  |  [187,110,33,75,29]  |     75  |
    90  |                         i = i + 1;  |         |   780  |     33  |  3  |      75  |  [187,110,33,75,29]  |     75  |
    91  |              resetPlaceHolder_1();  |         |   780  |     33  |  3  |      75  |  [187,110,33,75,29]  |     75  |
    97  |      chunk = arrayRead(tokens, i);  |         |   780  |     75  |  3  |      75  |  [187,110,33,75,29]  |     75  |
   100  |                     R = R + chunk;  |     75  |   855  |     75  |  3  |      75  |  [187,110,33,75,29]  |     75  |
   103  |                     R = R + years;  |     75  |   930  |     75  |  3  |      75  |  [187,110,33,75,29]  |     75  |
   106  |                    R = R + months;  |     75  |  1005  |     75  |  3  |      75  |  [187,110,33,75,29]  |     75  |
   110  |                         i = i + 1;  |         |  1005  |     75  |  4  |      75  |  [187,110,33,75,29]  |     75  |
   111  |              resetPlaceHolder_1();  |         |  1005  |     75  |  4  |      75  |  [187,110,33,75,29]  |     75  |
   117  |      chunk = arrayRead(tokens, i);  |         |  1005  |     29  |  4  |      75  |  [187,110,33,75,29]  |     75  |
   120  |                     R = R + chunk;  |     29  |  1034  |     29  |  4  |      75  |  [187,110,33,75,29]  |     75  |
   123  |                     R = R + years;  |     75  |  1109  |     29  |  4  |      75  |  [187,110,33,75,29]  |     75  |
   126  |                    R = R + months;  |     75  |  1184  |     29  |  4  |      75  |  [187,110,33,75,29]  |     75  |
   130  |                         i = i + 1;  |         |  1184  |     29  |  5  |      75  |  [187,110,33,75,29]  |     75  |
   131  |              resetPlaceHolder_1();  |         |  1184  |     29  |  5  |      75  |  [187,110,33,75,29]  |     75  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {80} because there exists a longer and subsuming segment {40,80} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40} because there exists a longer and subsuming segment {40,80} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {120} because there exists a longer and subsuming segment {46,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60} because there exists a longer and subsuming segment {60,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {100}, {103}, {106}, {123}, {126}, {43}, {46}, {63}, {66}, {83}, {86} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |
    43  |         R = R + years;  |     75  |                         0  |
    46  |        R = R + months;  |     75  |                         1  |
    51  |  resetPlaceHolder_1();  |         |                            |
    60  |         R = R + chunk;  |    110  |                            |
    63  |         R = R + years;  |     75  |                         2  |
    66  |        R = R + months;  |     75  |                         3  |
    71  |  resetPlaceHolder_1();  |         |                            |
    80  |         R = R + chunk;  |     33  |                            |
    83  |         R = R + years;  |     75  |                         4  |
    86  |        R = R + months;  |     75  |                         5  |
    91  |  resetPlaceHolder_1();  |         |                            |
   100  |         R = R + chunk;  |     75  |                         6  |
   103  |         R = R + years;  |     75  |                         7  |
   106  |        R = R + months;  |     75  |                         8  |
   111  |  resetPlaceHolder_1();  |         |                            |
   120  |         R = R + chunk;  |     29  |                            |
   123  |         R = R + years;  |     75  |                         9  |
   126  |        R = R + months;  |     75  |                        10  |
   131  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 60, 80, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 60, 80, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 60, 80, 40]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {80,120} because there exists a longer and subsuming segment {40,80,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,80} because there exists a longer and subsuming segment {40,80,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,120} because there exists a longer and subsuming segment {40,80,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60,120} because there exists a longer and subsuming segment {40,60,120} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60,80} because there exists a longer and subsuming segment {40,60,80} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {40,60} because there exists a longer and subsuming segment {40,60,80} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 60, 80, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 60, 80, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}, {103}, {106}, {123}, {126}, {43}, {46}, {63}, {66}, {83}, {86}
GroupID(1): {40,60,80,120}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [44, 45])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [64, 65])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [84, 85])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [104, 105])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [124, 125])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |    187  |                            |                         0  |
    43  |         R = R + years;  |     75  |                         0  |                            |
    46  |        R = R + months;  |     75  |                         1  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |    110  |                            |                         0  |
    63  |         R = R + years;  |     75  |                         2  |                            |
    66  |        R = R + months;  |     75  |                         3  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |     33  |                            |                         0  |
    83  |         R = R + years;  |     75  |                         4  |                            |
    86  |        R = R + months;  |     75  |                         5  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |     75  |                         6  |                            |
   103  |         R = R + years;  |     75  |                         7  |                            |
   106  |        R = R + months;  |     75  |                         8  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |     29  |                            |                         0  |
   123  |         R = R + years;  |     75  |                         9  |                            |
   126  |        R = R + months;  |     75  |                        10  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(51, 71, 91, 111)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R months -> R0 = R0 + months;
use R chunk -> if ((i < 2) || (i == 2))
{
  R1 = R1 + chunk;
}
else
{
  if ((i < 3) || (i == 3))
  {
    R0 = R0 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java.actual	2023-01-10 17:13:16.106215501 -0700
@@ -1,20 +1,17 @@
 abstract class DurationFormat {
   void execute(int tokens, int years, int months) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
-    int C2 = -1;
     int D0 = 0;
     int D0p = 0;
     int D1 = 0;
     int D1p = 0;
-    int D2 = 0;
-    int D2p = 0;
     int temporaryTokens = 0;
     int lastIndexOfTokens = 0;
-    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
-    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (tokens + (tokens * (years + months)))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (tokens + (tokens * (years + months)))));
+    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
+    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (tokens + (tokens * (years + months)))) || (((0 + (D0p * C0)) + (D1p * C1)) == (tokens + (tokens * (years + months)))));
     if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
     {
       return;
@@ -35,14 +32,25 @@
         chunk = temporaryTokens - lastIndexOfTokens;
         lastIndexOfTokens = temporaryTokens;
       }
-      D2 = D2 + chunk;
+      if ((i < 2) || (i == 2))
+      {
+        D1 = D1 + chunk;
+      }
+      else
+      {
+        if ((i < 3) || (i == 3))
+        {
+          D0 = D0 + chunk;
+        }
+        else
+        {
+          D1 = D1 + chunk;
+        }
+      }
       D0 = D0 + years;
-      D1 = D1 + months;
+      D0 = D0 + months;
       i = i + 1;
-      // reset R2
-      D1p = D1;
-      D1 = 0;
-      C1 = C1 + 1;
+      // reset R1
       D0p = D0;
       D0 = 0;
       C0 = C0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m7.891s
user	0m14.669s
sys	0m2.901s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (tokens + (tokens * (years + months)))) || (((0 + (D0p * C0)) + (D1p * C1)) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      D0 = D0 + years;
      D0 = D0 + months;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (tokens + (tokens * (years + months)))) || (((0 + (D0p * C0)) + (D1p * C1)) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 2) || (i == 2))
      {
        D1 = D1 + chunk;
      }
      else
      {
        if ((i < 3) || (i == 3))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      D0 = D0 + years;
      D0 = D0 + months;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months)))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months))))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months)))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months))))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 tokens)))` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6079867385237826910.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1165991119947714500.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 (* 1 years) years months) (* 1 (* 1 years) tokens months)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months)))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months))))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `260.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1713-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1713-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m21.859s
user	9m30.927s
sys	0m16.879s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz1639346580588528292/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1639346580588528292/bin -o /tmp/qfuzz1639346580588528292/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1639346580588528292/bin
Found file /tmp/qfuzz1639346580588528292/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz1639346580588528292/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1639346580588528292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1639346580588528292/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1639346580588528292/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1639346580588528292/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 23, exec speed = 126980 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1639346580588528292/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [12.00,17.00]
2; /tmp/qfuzz1639346580588528292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 2; 5.00; [12.00,17.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1639346580588528292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1639346580588528292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 58, 196, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.175s
user	0m15.210s
sys	0m1.229s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |  0  |          2  |     |
    10  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    11  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    13  |                         int i = 0;  |         |  0  |          2  |  0  |
    19  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    23  |                         i = i + 1;  |         |  1  |          2  |  1  |
    24  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    30  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    34  |                         i = i + 1;  |         |  2  |          2  |  2  |
    35  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [19, 30]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {19}, {30} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    19  |             R = R + 1;  |      1  |                         0  |
    24  |  resetPlaceHolder_1();  |         |                            |
    30  |             R = R + 1;  |      1  |                         1  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {19}, {30}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    19  |             R = R + 1;  |      1  |                         0  |
    24  |  resetPlaceHolder_1();  |         |                            |
    30  |             R = R + 1;  |      1  |                         1  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(24)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java.actual	2023-01-10 17:18:20.343610922 -0700
@@ -1,7 +1,7 @@
 abstract class GetCanonicalName {
   void execute(int className) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m6.181s
user	0m10.973s
sys	0m1.688s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < className) || ((0 + (D0p * C0)) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < className) || ((0 + (D0p * C0)) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) className) (= (+ 0 (* D0p C0)) className))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) className) (= (+ 0 (* D0p C0)) className))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) className) (= (+ 0 (* D0p C0)) className))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1718-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1718-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.379s
user	0m18.200s
sys	0m2.746s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz7123955914930204769/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7123955914930204769/bin -o /tmp/qfuzz7123955914930204769/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7123955914930204769/bin
Found file /tmp/qfuzz7123955914930204769/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz7123955914930204769/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7123955914930204769/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7123955914930204769/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7123955914930204769/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7123955914930204769/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 95, exec speed = 134006 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m95 to 95 bits (average: 95.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000000,orig:example.txt; 9; 2.00; [10.00,14.00,17.50,20.00,74.00,142.00,228.00,314.00,382.00]
2; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 6; 2.00; [8.00,10.00,14.00,17.50,20.00,134.00]
3; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 6; 2.00; [8.00,10.00,14.00,17.50,20.00,250.00]
5; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 9; 1.00; [10.00,14.00,16.50,18.00,20.00,114.00,228.00,382.00,392.00]
7; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 7; 2.00; [8.00,10.00,14.00,17.50,20.00,224.00,382.00]
16; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 9; 2.00; [8.00,10.00,14.00,17.50,20.00,30.00,68.00,194.00,364.00]
18; /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 8; 2.00; [10.00,14.00,17.50,20.00,60.00,110.00,160.00,284.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 192, 4, 53, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 108)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(30, 93, 70, 178)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7123955914930204769/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(51, 76, 26, 51, 138, 138, 138, 138, 138, 138, 138, 34, 133, 109, 138, 138, 138, 138, 138, 75, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [121]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,192,4,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,108]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [30,93,70,178]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [51,76,26,51,138]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.448s
user	0m16.319s
sys	0m1.187s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([63])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([121])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,192,4,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,108])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([30,93,70,178])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([51,76,26,51,138])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 63):
                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  baseMessage  |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------
     8  |                            return;  |         |      |         [63]  |          |         |     |
    10  |                    int buffer = 0;  |         |      |         [63]  |       0  |         |     |
    12  |                         int R = 0;  |         |   0  |         [63]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |   0  |         [63]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         [63]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |   1  |         [63]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |   2  |         [63]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |   2  |         [63]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |   2  |         [63]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |   2  |         [63]  |       0  |     63  |  0  |
    33  |                         R = R + 1;  |      1  |   3  |         [63]  |       0  |     63  |  0  |
    36  |                         R = R + 1;  |      1  |   4  |         [63]  |       0  |     63  |  0  |
    39  |                         R = R + 1;  |      1  |   5  |         [63]  |       0  |     63  |  0  |
    42  |                     R = R + chunk;  |     63  |  68  |         [63]  |       0  |     63  |  0  |
    45  |                         R = R + 1;  |      1  |  69  |         [63]  |       0  |     63  |  0  |
    48  |                         R = R + 1;  |      1  |  70  |         [63]  |       0  |     63  |  0  |
    51  |                         R = R + 1;  |      1  |  71  |         [63]  |       0  |     63  |  0  |
    55  |                         i = i + 1;  |         |  71  |         [63]  |       0  |     63  |  1  |
    56  |              resetPlaceHolder_1();  |         |  71  |         [63]  |       0  |     63  |  1  |
    62  |                         R = R + 1;  |      1  |  72  |         [63]  |       0  |     63  |  1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [42, 20, 33, 45, 17, 39, 48, 36, 51, 62]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [42, 20, 33, 45, 17, 39, 48, 36, 51, 62]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [42, 20, 33, 45, 17, 39, 48, 36, 51, 62]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [42, 20, 33, 45, 17, 39, 48, 36, 51, 62]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {17}, {20}, {33}, {36}, {39}, {45}, {48}, {51}, {62} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     63  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    62  |             R = R + 1;  |      1  |                         8  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {17}, {20}, {33}, {36}, {39}, {45}, {48}, {51}, {62}
GroupID(1): {42}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 61])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     63  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    62  |             R = R + 1;  |      1  |                         8  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java.actual	2023-01-10 17:19:14.604533852 -0700
@@ -1,7 +1,7 @@
 abstract class GetFormattedExceptionMessage {
   void execute(int baseMessage) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
     int D0 = 0;
@@ -43,7 +43,6 @@
       D0 = D0 + 1;
       D0 = D0 + 1;
       i = i + 1;
-      // reset R1
       // reset R0
     }
     D0 = D0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m9.411s
user	0m23.443s
sys	0m3.927s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (8 + (8 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (3 + (6 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (8 + (8 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (3 + (6 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `11.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1719-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1719-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.549s
user	0m38.607s
sys	0m5.297s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz3870411915733175551/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3870411915733175551/bin -o /tmp/qfuzz3870411915733175551/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3870411915733175551/bin
Found file /tmp/qfuzz3870411915733175551/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz3870411915733175551/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3870411915733175551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3870411915733175551/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3870411915733175551/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3870411915733175551/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 139100 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m139k to 139k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 7.00; [15.00,22.00]
2; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
3; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
4; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 7.00; [15.00,22.00]
5; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
7; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 2; 7.00; [15.00,22.00]
8; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]
10; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 2; 7.00; [15.00,22.00]
12; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
14; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 2; 7.00; [15.00,22.00]
15; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 2; 7.00; [15.00,22.00]
17; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64; 2; 7.00; [15.00,22.00]
19; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4; 2; 7.00; [15.00,22.00]
21; /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:2; 2; 7.00; [15.00,22.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
/tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 135, 105, 44, 37, 161)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 63, 196, 5, 64, 63, 5, 63, 176, 103)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 192, 181, 60, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3870411915733175551/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 170, 93, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 57, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 64
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 91
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 151
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 40
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 10
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 6
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 22
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.222s
user	0m15.629s
sys	0m1.331s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(64)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(91)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(151)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(40)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(10)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(6)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(125)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(22)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(50)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 1369):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     9  |               int arrayPrefix = 0;  |         |       |            0  |         64  |              |
    11  |                         int R = 0;  |         |    0  |            0  |         64  |              |
    12  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         64  |              |
    13  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         64  |              |
    15  |        int className_ = className;  |         |    0  |            0  |         64  |          64  |
    28  |       className_ = className_ - 1;  |         |    0  |            0  |         64  |          63  |
    32  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         64  |          63  |
    35  |                         R = R + 2;  |      2  |    2  |            2  |         64  |          63  |
    36  |              resetPlaceHolder_1();  |         |    2  |            2  |         64  |          63  |
    49  |       className_ = className_ - 1;  |         |    2  |            2  |         64  |          62  |
    53  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         64  |          62  |
    56  |                         R = R + 2;  |      2  |    4  |            4  |         64  |          62  |
    57  |              resetPlaceHolder_1();  |         |    4  |            4  |         64  |          62  |
    70  |       className_ = className_ - 1;  |         |    4  |            4  |         64  |          61  |
    74  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         64  |          61  |
    77  |                         R = R + 2;  |      2  |    6  |            6  |         64  |          61  |
    78  |              resetPlaceHolder_1();  |         |    6  |            6  |         64  |          61  |
    91  |       className_ = className_ - 1;  |         |    6  |            6  |         64  |          60  |
    95  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         64  |          60  |
    98  |                         R = R + 2;  |      2  |    8  |            8  |         64  |          60  |
    99  |              resetPlaceHolder_1();  |         |    8  |            8  |         64  |          60  |
   112  |       className_ = className_ - 1;  |         |    8  |            8  |         64  |          59  |
   116  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         64  |          59  |
   119  |                         R = R + 2;  |      2  |   10  |           10  |         64  |          59  |
   120  |              resetPlaceHolder_1();  |         |   10  |           10  |         64  |          59  |
   133  |       className_ = className_ - 1;  |         |   10  |           10  |         64  |          58  |
   137  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         64  |          58  |
   140  |                         R = R + 2;  |      2  |   12  |           12  |         64  |          58  |
   141  |              resetPlaceHolder_1();  |         |   12  |           12  |         64  |          58  |
   154  |       className_ = className_ - 1;  |         |   12  |           12  |         64  |          57  |
   158  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         64  |          57  |
   161  |                         R = R + 2;  |      2  |   14  |           14  |         64  |          57  |
   162  |              resetPlaceHolder_1();  |         |   14  |           14  |         64  |          57  |
   175  |       className_ = className_ - 1;  |         |   14  |           14  |         64  |          56  |
   179  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         64  |          56  |
   182  |                         R = R + 2;  |      2  |   16  |           16  |         64  |          56  |
   183  |              resetPlaceHolder_1();  |         |   16  |           16  |         64  |          56  |
   196  |       className_ = className_ - 1;  |         |   16  |           16  |         64  |          55  |
   200  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         64  |          55  |
   203  |                         R = R + 2;  |      2  |   18  |           18  |         64  |          55  |
   204  |              resetPlaceHolder_1();  |         |   18  |           18  |         64  |          55  |
   217  |       className_ = className_ - 1;  |         |   18  |           18  |         64  |          54  |
   221  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         64  |          54  |
   224  |                         R = R + 2;  |      2  |   20  |           20  |         64  |          54  |
   225  |              resetPlaceHolder_1();  |         |   20  |           20  |         64  |          54  |
   238  |       className_ = className_ - 1;  |         |   20  |           20  |         64  |          53  |
   242  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         64  |          53  |
   245  |                         R = R + 2;  |      2  |   22  |           22  |         64  |          53  |
   246  |              resetPlaceHolder_1();  |         |   22  |           22  |         64  |          53  |
   259  |       className_ = className_ - 1;  |         |   22  |           22  |         64  |          52  |
   263  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         64  |          52  |
   266  |                         R = R + 2;  |      2  |   24  |           24  |         64  |          52  |
   267  |              resetPlaceHolder_1();  |         |   24  |           24  |         64  |          52  |
   280  |       className_ = className_ - 1;  |         |   24  |           24  |         64  |          51  |
   284  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         64  |          51  |
   287  |                         R = R + 2;  |      2  |   26  |           26  |         64  |          51  |
   288  |              resetPlaceHolder_1();  |         |   26  |           26  |         64  |          51  |
   301  |       className_ = className_ - 1;  |         |   26  |           26  |         64  |          50  |
   305  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         64  |          50  |
   308  |                         R = R + 2;  |      2  |   28  |           28  |         64  |          50  |
   309  |              resetPlaceHolder_1();  |         |   28  |           28  |         64  |          50  |
   322  |       className_ = className_ - 1;  |         |   28  |           28  |         64  |          49  |
   326  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         64  |          49  |
   329  |                         R = R + 2;  |      2  |   30  |           30  |         64  |          49  |
   330  |              resetPlaceHolder_1();  |         |   30  |           30  |         64  |          49  |
   343  |       className_ = className_ - 1;  |         |   30  |           30  |         64  |          48  |
   347  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         64  |          48  |
   350  |                         R = R + 2;  |      2  |   32  |           32  |         64  |          48  |
   351  |              resetPlaceHolder_1();  |         |   32  |           32  |         64  |          48  |
   364  |       className_ = className_ - 1;  |         |   32  |           32  |         64  |          47  |
   368  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         64  |          47  |
   371  |                         R = R + 2;  |      2  |   34  |           34  |         64  |          47  |
   372  |              resetPlaceHolder_1();  |         |   34  |           34  |         64  |          47  |
   385  |       className_ = className_ - 1;  |         |   34  |           34  |         64  |          46  |
   389  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         64  |          46  |
   392  |                         R = R + 2;  |      2  |   36  |           36  |         64  |          46  |
   393  |              resetPlaceHolder_1();  |         |   36  |           36  |         64  |          46  |
   406  |       className_ = className_ - 1;  |         |   36  |           36  |         64  |          45  |
   410  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         64  |          45  |
   413  |                         R = R + 2;  |      2  |   38  |           38  |         64  |          45  |
   414  |              resetPlaceHolder_1();  |         |   38  |           38  |         64  |          45  |
   427  |       className_ = className_ - 1;  |         |   38  |           38  |         64  |          44  |
   431  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         64  |          44  |
   434  |                         R = R + 2;  |      2  |   40  |           40  |         64  |          44  |
   435  |              resetPlaceHolder_1();  |         |   40  |           40  |         64  |          44  |
   448  |       className_ = className_ - 1;  |         |   40  |           40  |         64  |          43  |
   452  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         64  |          43  |
   455  |                         R = R + 2;  |      2  |   42  |           42  |         64  |          43  |
   456  |              resetPlaceHolder_1();  |         |   42  |           42  |         64  |          43  |
   469  |       className_ = className_ - 1;  |         |   42  |           42  |         64  |          42  |
   473  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         64  |          42  |
   476  |                         R = R + 2;  |      2  |   44  |           44  |         64  |          42  |
   477  |              resetPlaceHolder_1();  |         |   44  |           44  |         64  |          42  |
   490  |       className_ = className_ - 1;  |         |   44  |           44  |         64  |          41  |
   494  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         64  |          41  |
   497  |                         R = R + 2;  |      2  |   46  |           46  |         64  |          41  |
   498  |              resetPlaceHolder_1();  |         |   46  |           46  |         64  |          41  |
   511  |       className_ = className_ - 1;  |         |   46  |           46  |         64  |          40  |
   515  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         64  |          40  |
   518  |                         R = R + 2;  |      2  |   48  |           48  |         64  |          40  |
   519  |              resetPlaceHolder_1();  |         |   48  |           48  |         64  |          40  |
   532  |       className_ = className_ - 1;  |         |   48  |           48  |         64  |          39  |
   536  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         64  |          39  |
   539  |                         R = R + 2;  |      2  |   50  |           50  |         64  |          39  |
   540  |              resetPlaceHolder_1();  |         |   50  |           50  |         64  |          39  |
   553  |       className_ = className_ - 1;  |         |   50  |           50  |         64  |          38  |
   557  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         64  |          38  |
   560  |                         R = R + 2;  |      2  |   52  |           52  |         64  |          38  |
   561  |              resetPlaceHolder_1();  |         |   52  |           52  |         64  |          38  |
   574  |       className_ = className_ - 1;  |         |   52  |           52  |         64  |          37  |
   578  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         64  |          37  |
   581  |                         R = R + 2;  |      2  |   54  |           54  |         64  |          37  |
   582  |              resetPlaceHolder_1();  |         |   54  |           54  |         64  |          37  |
   595  |       className_ = className_ - 1;  |         |   54  |           54  |         64  |          36  |
   599  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         64  |          36  |
   602  |                         R = R + 2;  |      2  |   56  |           56  |         64  |          36  |
   603  |              resetPlaceHolder_1();  |         |   56  |           56  |         64  |          36  |
   616  |       className_ = className_ - 1;  |         |   56  |           56  |         64  |          35  |
   620  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         64  |          35  |
   623  |                         R = R + 2;  |      2  |   58  |           58  |         64  |          35  |
   624  |              resetPlaceHolder_1();  |         |   58  |           58  |         64  |          35  |
   637  |       className_ = className_ - 1;  |         |   58  |           58  |         64  |          34  |
   641  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         64  |          34  |
   644  |                         R = R + 2;  |      2  |   60  |           60  |         64  |          34  |
   645  |              resetPlaceHolder_1();  |         |   60  |           60  |         64  |          34  |
   658  |       className_ = className_ - 1;  |         |   60  |           60  |         64  |          33  |
   662  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         64  |          33  |
   665  |                         R = R + 2;  |      2  |   62  |           62  |         64  |          33  |
   666  |              resetPlaceHolder_1();  |         |   62  |           62  |         64  |          33  |
   679  |       className_ = className_ - 1;  |         |   62  |           62  |         64  |          32  |
   683  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         64  |          32  |
   686  |                         R = R + 2;  |      2  |   64  |           64  |         64  |          32  |
   687  |              resetPlaceHolder_1();  |         |   64  |           64  |         64  |          32  |
   700  |       className_ = className_ - 1;  |         |   64  |           64  |         64  |          31  |
   704  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         64  |          31  |
   707  |                         R = R + 2;  |      2  |   66  |           66  |         64  |          31  |
   708  |              resetPlaceHolder_1();  |         |   66  |           66  |         64  |          31  |
   721  |       className_ = className_ - 1;  |         |   66  |           66  |         64  |          30  |
   725  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         64  |          30  |
   728  |                         R = R + 2;  |      2  |   68  |           68  |         64  |          30  |
   729  |              resetPlaceHolder_1();  |         |   68  |           68  |         64  |          30  |
   742  |       className_ = className_ - 1;  |         |   68  |           68  |         64  |          29  |
   746  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         64  |          29  |
   749  |                         R = R + 2;  |      2  |   70  |           70  |         64  |          29  |
   750  |              resetPlaceHolder_1();  |         |   70  |           70  |         64  |          29  |
   763  |       className_ = className_ - 1;  |         |   70  |           70  |         64  |          28  |
   767  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         64  |          28  |
   770  |                         R = R + 2;  |      2  |   72  |           72  |         64  |          28  |
   771  |              resetPlaceHolder_1();  |         |   72  |           72  |         64  |          28  |
   784  |       className_ = className_ - 1;  |         |   72  |           72  |         64  |          27  |
   788  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         64  |          27  |
   791  |                         R = R + 2;  |      2  |   74  |           74  |         64  |          27  |
   792  |              resetPlaceHolder_1();  |         |   74  |           74  |         64  |          27  |
   805  |       className_ = className_ - 1;  |         |   74  |           74  |         64  |          26  |
   809  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         64  |          26  |
   812  |                         R = R + 2;  |      2  |   76  |           76  |         64  |          26  |
   813  |              resetPlaceHolder_1();  |         |   76  |           76  |         64  |          26  |
   826  |       className_ = className_ - 1;  |         |   76  |           76  |         64  |          25  |
   830  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         64  |          25  |
   833  |                         R = R + 2;  |      2  |   78  |           78  |         64  |          25  |
   834  |              resetPlaceHolder_1();  |         |   78  |           78  |         64  |          25  |
   847  |       className_ = className_ - 1;  |         |   78  |           78  |         64  |          24  |
   851  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         64  |          24  |
   854  |                         R = R + 2;  |      2  |   80  |           80  |         64  |          24  |
   855  |              resetPlaceHolder_1();  |         |   80  |           80  |         64  |          24  |
   868  |       className_ = className_ - 1;  |         |   80  |           80  |         64  |          23  |
   872  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         64  |          23  |
   875  |                         R = R + 2;  |      2  |   82  |           82  |         64  |          23  |
   876  |              resetPlaceHolder_1();  |         |   82  |           82  |         64  |          23  |
   889  |       className_ = className_ - 1;  |         |   82  |           82  |         64  |          22  |
   893  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         64  |          22  |
   896  |                         R = R + 2;  |      2  |   84  |           84  |         64  |          22  |
   897  |              resetPlaceHolder_1();  |         |   84  |           84  |         64  |          22  |
   910  |       className_ = className_ - 1;  |         |   84  |           84  |         64  |          21  |
   914  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         64  |          21  |
   917  |                         R = R + 2;  |      2  |   86  |           86  |         64  |          21  |
   918  |              resetPlaceHolder_1();  |         |   86  |           86  |         64  |          21  |
   931  |       className_ = className_ - 1;  |         |   86  |           86  |         64  |          20  |
   935  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         64  |          20  |
   938  |                         R = R + 2;  |      2  |   88  |           88  |         64  |          20  |
   939  |              resetPlaceHolder_1();  |         |   88  |           88  |         64  |          20  |
   952  |       className_ = className_ - 1;  |         |   88  |           88  |         64  |          19  |
   956  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         64  |          19  |
   959  |                         R = R + 2;  |      2  |   90  |           90  |         64  |          19  |
   960  |              resetPlaceHolder_1();  |         |   90  |           90  |         64  |          19  |
   973  |       className_ = className_ - 1;  |         |   90  |           90  |         64  |          18  |
   977  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         64  |          18  |
   980  |                         R = R + 2;  |      2  |   92  |           92  |         64  |          18  |
   981  |              resetPlaceHolder_1();  |         |   92  |           92  |         64  |          18  |
   994  |       className_ = className_ - 1;  |         |   92  |           92  |         64  |          17  |
   998  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         64  |          17  |
  1001  |                         R = R + 2;  |      2  |   94  |           94  |         64  |          17  |
  1002  |              resetPlaceHolder_1();  |         |   94  |           94  |         64  |          17  |
  1015  |       className_ = className_ - 1;  |         |   94  |           94  |         64  |          16  |
  1019  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         64  |          16  |
  1022  |                         R = R + 2;  |      2  |   96  |           96  |         64  |          16  |
  1023  |              resetPlaceHolder_1();  |         |   96  |           96  |         64  |          16  |
  1036  |       className_ = className_ - 1;  |         |   96  |           96  |         64  |          15  |
  1040  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         64  |          15  |
  1043  |                         R = R + 2;  |      2  |   98  |           98  |         64  |          15  |
  1044  |              resetPlaceHolder_1();  |         |   98  |           98  |         64  |          15  |
  1057  |       className_ = className_ - 1;  |         |   98  |           98  |         64  |          14  |
  1061  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         64  |          14  |
  1064  |                         R = R + 2;  |      2  |  100  |          100  |         64  |          14  |
  1065  |              resetPlaceHolder_1();  |         |  100  |          100  |         64  |          14  |
  1078  |       className_ = className_ - 1;  |         |  100  |          100  |         64  |          13  |
  1082  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         64  |          13  |
  1085  |                         R = R + 2;  |      2  |  102  |          102  |         64  |          13  |
  1086  |              resetPlaceHolder_1();  |         |  102  |          102  |         64  |          13  |
  1099  |       className_ = className_ - 1;  |         |  102  |          102  |         64  |          12  |
  1103  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         64  |          12  |
  1106  |                         R = R + 2;  |      2  |  104  |          104  |         64  |          12  |
  1107  |              resetPlaceHolder_1();  |         |  104  |          104  |         64  |          12  |
  1120  |       className_ = className_ - 1;  |         |  104  |          104  |         64  |          11  |
  1124  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         64  |          11  |
  1127  |                         R = R + 2;  |      2  |  106  |          106  |         64  |          11  |
  1128  |              resetPlaceHolder_1();  |         |  106  |          106  |         64  |          11  |
  1141  |       className_ = className_ - 1;  |         |  106  |          106  |         64  |          10  |
  1145  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         64  |          10  |
  1148  |                         R = R + 2;  |      2  |  108  |          108  |         64  |          10  |
  1149  |              resetPlaceHolder_1();  |         |  108  |          108  |         64  |          10  |
  1162  |       className_ = className_ - 1;  |         |  108  |          108  |         64  |           9  |
  1166  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         64  |           9  |
  1169  |                         R = R + 2;  |      2  |  110  |          110  |         64  |           9  |
  1170  |              resetPlaceHolder_1();  |         |  110  |          110  |         64  |           9  |
  1183  |       className_ = className_ - 1;  |         |  110  |          110  |         64  |           8  |
  1187  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         64  |           8  |
  1190  |                         R = R + 2;  |      2  |  112  |          112  |         64  |           8  |
  1191  |              resetPlaceHolder_1();  |         |  112  |          112  |         64  |           8  |
  1204  |       className_ = className_ - 1;  |         |  112  |          112  |         64  |           7  |
  1208  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         64  |           7  |
  1211  |                         R = R + 2;  |      2  |  114  |          114  |         64  |           7  |
  1212  |              resetPlaceHolder_1();  |         |  114  |          114  |         64  |           7  |
  1225  |       className_ = className_ - 1;  |         |  114  |          114  |         64  |           6  |
  1229  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         64  |           6  |
  1232  |                         R = R + 2;  |      2  |  116  |          116  |         64  |           6  |
  1233  |              resetPlaceHolder_1();  |         |  116  |          116  |         64  |           6  |
  1246  |       className_ = className_ - 1;  |         |  116  |          116  |         64  |           5  |
  1250  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         64  |           5  |
  1253  |                         R = R + 2;  |      2  |  118  |          118  |         64  |           5  |
  1254  |              resetPlaceHolder_1();  |         |  118  |          118  |         64  |           5  |
  1267  |       className_ = className_ - 1;  |         |  118  |          118  |         64  |           4  |
  1271  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         64  |           4  |
  1274  |                         R = R + 2;  |      2  |  120  |          120  |         64  |           4  |
  1275  |              resetPlaceHolder_1();  |         |  120  |          120  |         64  |           4  |
  1288  |       className_ = className_ - 1;  |         |  120  |          120  |         64  |           3  |
  1292  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         64  |           3  |
  1295  |                         R = R + 2;  |      2  |  122  |          122  |         64  |           3  |
  1296  |              resetPlaceHolder_1();  |         |  122  |          122  |         64  |           3  |
  1309  |       className_ = className_ - 1;  |         |  122  |          122  |         64  |           2  |
  1313  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         64  |           2  |
  1316  |                         R = R + 2;  |      2  |  124  |          124  |         64  |           2  |
  1317  |              resetPlaceHolder_1();  |         |  124  |          124  |         64  |           2  |
  1330  |       className_ = className_ - 1;  |         |  124  |          124  |         64  |           1  |
  1334  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |         64  |           1  |
  1337  |                         R = R + 2;  |      2  |  126  |          126  |         64  |           1  |
  1338  |              resetPlaceHolder_1();  |         |  126  |          126  |         64  |           1  |
  1351  |       className_ = className_ - 1;  |         |  126  |          126  |         64  |           0  |
  1355  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |         64  |           0  |
  1358  |                         R = R + 2;  |      2  |  128  |          128  |         64  |           0  |
  1359  |              resetPlaceHolder_1();  |         |  128  |          128  |         64  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 1358, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 1358, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 1358, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1337, 1190, 518, 1295, 1211, 308, 56, 1001, 1127, 917, 770, 1232, 623, 602, 1169, 1274, 392, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 371, 938, 266, 161, 875, 413, 350, 245, 1043, 434, 98, 140, 1022, 959, 455, 35, 812, 749, 707, 791, 182, 1085, 1358, 497, 1316, 539, 203, 581, 1253, 896, 119, 287, 833, 854, 1148, 728, 644, 560]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {1001}, {1022}, {1043}, {1064}, {1085}, {1106}, {1127}, {1148}, {1169}, {1190}, {119}, {1211}, {1232}, {1253}, {1274}, {1295}, {1316}, {1337}, {1358}, {140}, {161}, {182}, {203}, {224}, {245}, {266}, {287}, {308}, {329}, {350}, {35}, {371}, {392}, {413}, {434}, {455}, {476}, {497}, {518}, {539}, {560}, {56}, {581}, {602}, {623}, {644}, {665}, {686}, {707}, {728}, {749}, {770}, {77}, {791}, {812}, {833}, {854}, {875}, {896}, {917}, {938}, {959}, {980}, {98} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 2;  |      2  |                         0  |
    36  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 2;  |      2  |                         1  |
    57  |  resetPlaceHolder_1();  |         |                            |
    77  |             R = R + 2;  |      2  |                         2  |
    78  |  resetPlaceHolder_1();  |         |                            |
    98  |             R = R + 2;  |      2  |                         3  |
    99  |  resetPlaceHolder_1();  |         |                            |
   119  |             R = R + 2;  |      2  |                         4  |
   120  |  resetPlaceHolder_1();  |         |                            |
   140  |             R = R + 2;  |      2  |                         5  |
   141  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 2;  |      2  |                         6  |
   162  |  resetPlaceHolder_1();  |         |                            |
   182  |             R = R + 2;  |      2  |                         7  |
   183  |  resetPlaceHolder_1();  |         |                            |
   203  |             R = R + 2;  |      2  |                         8  |
   204  |  resetPlaceHolder_1();  |         |                            |
   224  |             R = R + 2;  |      2  |                         9  |
   225  |  resetPlaceHolder_1();  |         |                            |
   245  |             R = R + 2;  |      2  |                        10  |
   246  |  resetPlaceHolder_1();  |         |                            |
   266  |             R = R + 2;  |      2  |                        11  |
   267  |  resetPlaceHolder_1();  |         |                            |
   287  |             R = R + 2;  |      2  |                        12  |
   288  |  resetPlaceHolder_1();  |         |                            |
   308  |             R = R + 2;  |      2  |                        13  |
   309  |  resetPlaceHolder_1();  |         |                            |
   329  |             R = R + 2;  |      2  |                        14  |
   330  |  resetPlaceHolder_1();  |         |                            |
   350  |             R = R + 2;  |      2  |                        15  |
   351  |  resetPlaceHolder_1();  |         |                            |
   371  |             R = R + 2;  |      2  |                        16  |
   372  |  resetPlaceHolder_1();  |         |                            |
   392  |             R = R + 2;  |      2  |                        17  |
   393  |  resetPlaceHolder_1();  |         |                            |
   413  |             R = R + 2;  |      2  |                        18  |
   414  |  resetPlaceHolder_1();  |         |                            |
   434  |             R = R + 2;  |      2  |                        19  |
   435  |  resetPlaceHolder_1();  |         |                            |
   455  |             R = R + 2;  |      2  |                        20  |
   456  |  resetPlaceHolder_1();  |         |                            |
   476  |             R = R + 2;  |      2  |                        21  |
   477  |  resetPlaceHolder_1();  |         |                            |
   497  |             R = R + 2;  |      2  |                        22  |
   498  |  resetPlaceHolder_1();  |         |                            |
   518  |             R = R + 2;  |      2  |                        23  |
   519  |  resetPlaceHolder_1();  |         |                            |
   539  |             R = R + 2;  |      2  |                        24  |
   540  |  resetPlaceHolder_1();  |         |                            |
   560  |             R = R + 2;  |      2  |                        25  |
   561  |  resetPlaceHolder_1();  |         |                            |
   581  |             R = R + 2;  |      2  |                        26  |
   582  |  resetPlaceHolder_1();  |         |                            |
   602  |             R = R + 2;  |      2  |                        27  |
   603  |  resetPlaceHolder_1();  |         |                            |
   623  |             R = R + 2;  |      2  |                        28  |
   624  |  resetPlaceHolder_1();  |         |                            |
   644  |             R = R + 2;  |      2  |                        29  |
   645  |  resetPlaceHolder_1();  |         |                            |
   665  |             R = R + 2;  |      2  |                        30  |
   666  |  resetPlaceHolder_1();  |         |                            |
   686  |             R = R + 2;  |      2  |                        31  |
   687  |  resetPlaceHolder_1();  |         |                            |
   707  |             R = R + 2;  |      2  |                        32  |
   708  |  resetPlaceHolder_1();  |         |                            |
   728  |             R = R + 2;  |      2  |                        33  |
   729  |  resetPlaceHolder_1();  |         |                            |
   749  |             R = R + 2;  |      2  |                        34  |
   750  |  resetPlaceHolder_1();  |         |                            |
   770  |             R = R + 2;  |      2  |                        35  |
   771  |  resetPlaceHolder_1();  |         |                            |
   791  |             R = R + 2;  |      2  |                        36  |
   792  |  resetPlaceHolder_1();  |         |                            |
   812  |             R = R + 2;  |      2  |                        37  |
   813  |  resetPlaceHolder_1();  |         |                            |
   833  |             R = R + 2;  |      2  |                        38  |
   834  |  resetPlaceHolder_1();  |         |                            |
   854  |             R = R + 2;  |      2  |                        39  |
   855  |  resetPlaceHolder_1();  |         |                            |
   875  |             R = R + 2;  |      2  |                        40  |
   876  |  resetPlaceHolder_1();  |         |                            |
   896  |             R = R + 2;  |      2  |                        41  |
   897  |  resetPlaceHolder_1();  |         |                            |
   917  |             R = R + 2;  |      2  |                        42  |
   918  |  resetPlaceHolder_1();  |         |                            |
   938  |             R = R + 2;  |      2  |                        43  |
   939  |  resetPlaceHolder_1();  |         |                            |
   959  |             R = R + 2;  |      2  |                        44  |
   960  |  resetPlaceHolder_1();  |         |                            |
   980  |             R = R + 2;  |      2  |                        45  |
   981  |  resetPlaceHolder_1();  |         |                            |
  1001  |             R = R + 2;  |      2  |                        46  |
  1002  |  resetPlaceHolder_1();  |         |                            |
  1022  |             R = R + 2;  |      2  |                        47  |
  1023  |  resetPlaceHolder_1();  |         |                            |
  1043  |             R = R + 2;  |      2  |                        48  |
  1044  |  resetPlaceHolder_1();  |         |                            |
  1064  |             R = R + 2;  |      2  |                        49  |
  1065  |  resetPlaceHolder_1();  |         |                            |
  1085  |             R = R + 2;  |      2  |                        50  |
  1086  |  resetPlaceHolder_1();  |         |                            |
  1106  |             R = R + 2;  |      2  |                        51  |
  1107  |  resetPlaceHolder_1();  |         |                            |
  1127  |             R = R + 2;  |      2  |                        52  |
  1128  |  resetPlaceHolder_1();  |         |                            |
  1148  |             R = R + 2;  |      2  |                        53  |
  1149  |  resetPlaceHolder_1();  |         |                            |
  1169  |             R = R + 2;  |      2  |                        54  |
  1170  |  resetPlaceHolder_1();  |         |                            |
  1190  |             R = R + 2;  |      2  |                        55  |
  1191  |  resetPlaceHolder_1();  |         |                            |
  1211  |             R = R + 2;  |      2  |                        56  |
  1212  |  resetPlaceHolder_1();  |         |                            |
  1232  |             R = R + 2;  |      2  |                        57  |
  1233  |  resetPlaceHolder_1();  |         |                            |
  1253  |             R = R + 2;  |      2  |                        58  |
  1254  |  resetPlaceHolder_1();  |         |                            |
  1274  |             R = R + 2;  |      2  |                        59  |
  1275  |  resetPlaceHolder_1();  |         |                            |
  1295  |             R = R + 2;  |      2  |                        60  |
  1296  |  resetPlaceHolder_1();  |         |                            |
  1316  |             R = R + 2;  |      2  |                        61  |
  1317  |  resetPlaceHolder_1();  |         |                            |
  1337  |             R = R + 2;  |      2  |                        62  |
  1338  |  resetPlaceHolder_1();  |         |                            |
  1358  |             R = R + 2;  |      2  |                        63  |
  1359  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {1001}, {1022}, {1043}, {1064}, {1085}, {1106}, {1127}, {1148}, {1169}, {1190}, {119}, {1211}, {1232}, {1253}, {1274}, {1295}, {1316}, {1337}, {1358}, {140}, {161}, {182}, {203}, {224}, {245}, {266}, {287}, {308}, {329}, {350}, {35}, {371}, {392}, {413}, {434}, {455}, {476}, {497}, {518}, {539}, {560}, {56}, {581}, {602}, {623}, {644}, {665}, {686}, {707}, {728}, {749}, {770}, {77}, {791}, {812}, {833}, {854}, {875}, {896}, {917}, {938}, {959}, {980}, {98}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 2;  |      2  |                         0  |
    36  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 2;  |      2  |                         1  |
    57  |  resetPlaceHolder_1();  |         |                            |
    77  |             R = R + 2;  |      2  |                         2  |
    78  |  resetPlaceHolder_1();  |         |                            |
    98  |             R = R + 2;  |      2  |                         3  |
    99  |  resetPlaceHolder_1();  |         |                            |
   119  |             R = R + 2;  |      2  |                         4  |
   120  |  resetPlaceHolder_1();  |         |                            |
   140  |             R = R + 2;  |      2  |                         5  |
   141  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 2;  |      2  |                         6  |
   162  |  resetPlaceHolder_1();  |         |                            |
   182  |             R = R + 2;  |      2  |                         7  |
   183  |  resetPlaceHolder_1();  |         |                            |
   203  |             R = R + 2;  |      2  |                         8  |
   204  |  resetPlaceHolder_1();  |         |                            |
   224  |             R = R + 2;  |      2  |                         9  |
   225  |  resetPlaceHolder_1();  |         |                            |
   245  |             R = R + 2;  |      2  |                        10  |
   246  |  resetPlaceHolder_1();  |         |                            |
   266  |             R = R + 2;  |      2  |                        11  |
   267  |  resetPlaceHolder_1();  |         |                            |
   287  |             R = R + 2;  |      2  |                        12  |
   288  |  resetPlaceHolder_1();  |         |                            |
   308  |             R = R + 2;  |      2  |                        13  |
   309  |  resetPlaceHolder_1();  |         |                            |
   329  |             R = R + 2;  |      2  |                        14  |
   330  |  resetPlaceHolder_1();  |         |                            |
   350  |             R = R + 2;  |      2  |                        15  |
   351  |  resetPlaceHolder_1();  |         |                            |
   371  |             R = R + 2;  |      2  |                        16  |
   372  |  resetPlaceHolder_1();  |         |                            |
   392  |             R = R + 2;  |      2  |                        17  |
   393  |  resetPlaceHolder_1();  |         |                            |
   413  |             R = R + 2;  |      2  |                        18  |
   414  |  resetPlaceHolder_1();  |         |                            |
   434  |             R = R + 2;  |      2  |                        19  |
   435  |  resetPlaceHolder_1();  |         |                            |
   455  |             R = R + 2;  |      2  |                        20  |
   456  |  resetPlaceHolder_1();  |         |                            |
   476  |             R = R + 2;  |      2  |                        21  |
   477  |  resetPlaceHolder_1();  |         |                            |
   497  |             R = R + 2;  |      2  |                        22  |
   498  |  resetPlaceHolder_1();  |         |                            |
   518  |             R = R + 2;  |      2  |                        23  |
   519  |  resetPlaceHolder_1();  |         |                            |
   539  |             R = R + 2;  |      2  |                        24  |
   540  |  resetPlaceHolder_1();  |         |                            |
   560  |             R = R + 2;  |      2  |                        25  |
   561  |  resetPlaceHolder_1();  |         |                            |
   581  |             R = R + 2;  |      2  |                        26  |
   582  |  resetPlaceHolder_1();  |         |                            |
   602  |             R = R + 2;  |      2  |                        27  |
   603  |  resetPlaceHolder_1();  |         |                            |
   623  |             R = R + 2;  |      2  |                        28  |
   624  |  resetPlaceHolder_1();  |         |                            |
   644  |             R = R + 2;  |      2  |                        29  |
   645  |  resetPlaceHolder_1();  |         |                            |
   665  |             R = R + 2;  |      2  |                        30  |
   666  |  resetPlaceHolder_1();  |         |                            |
   686  |             R = R + 2;  |      2  |                        31  |
   687  |  resetPlaceHolder_1();  |         |                            |
   707  |             R = R + 2;  |      2  |                        32  |
   708  |  resetPlaceHolder_1();  |         |                            |
   728  |             R = R + 2;  |      2  |                        33  |
   729  |  resetPlaceHolder_1();  |         |                            |
   749  |             R = R + 2;  |      2  |                        34  |
   750  |  resetPlaceHolder_1();  |         |                            |
   770  |             R = R + 2;  |      2  |                        35  |
   771  |  resetPlaceHolder_1();  |         |                            |
   791  |             R = R + 2;  |      2  |                        36  |
   792  |  resetPlaceHolder_1();  |         |                            |
   812  |             R = R + 2;  |      2  |                        37  |
   813  |  resetPlaceHolder_1();  |         |                            |
   833  |             R = R + 2;  |      2  |                        38  |
   834  |  resetPlaceHolder_1();  |         |                            |
   854  |             R = R + 2;  |      2  |                        39  |
   855  |  resetPlaceHolder_1();  |         |                            |
   875  |             R = R + 2;  |      2  |                        40  |
   876  |  resetPlaceHolder_1();  |         |                            |
   896  |             R = R + 2;  |      2  |                        41  |
   897  |  resetPlaceHolder_1();  |         |                            |
   917  |             R = R + 2;  |      2  |                        42  |
   918  |  resetPlaceHolder_1();  |         |                            |
   938  |             R = R + 2;  |      2  |                        43  |
   939  |  resetPlaceHolder_1();  |         |                            |
   959  |             R = R + 2;  |      2  |                        44  |
   960  |  resetPlaceHolder_1();  |         |                            |
   980  |             R = R + 2;  |      2  |                        45  |
   981  |  resetPlaceHolder_1();  |         |                            |
  1001  |             R = R + 2;  |      2  |                        46  |
  1002  |  resetPlaceHolder_1();  |         |                            |
  1022  |             R = R + 2;  |      2  |                        47  |
  1023  |  resetPlaceHolder_1();  |         |                            |
  1043  |             R = R + 2;  |      2  |                        48  |
  1044  |  resetPlaceHolder_1();  |         |                            |
  1064  |             R = R + 2;  |      2  |                        49  |
  1065  |  resetPlaceHolder_1();  |         |                            |
  1085  |             R = R + 2;  |      2  |                        50  |
  1086  |  resetPlaceHolder_1();  |         |                            |
  1106  |             R = R + 2;  |      2  |                        51  |
  1107  |  resetPlaceHolder_1();  |         |                            |
  1127  |             R = R + 2;  |      2  |                        52  |
  1128  |  resetPlaceHolder_1();  |         |                            |
  1148  |             R = R + 2;  |      2  |                        53  |
  1149  |  resetPlaceHolder_1();  |         |                            |
  1169  |             R = R + 2;  |      2  |                        54  |
  1170  |  resetPlaceHolder_1();  |         |                            |
  1190  |             R = R + 2;  |      2  |                        55  |
  1191  |  resetPlaceHolder_1();  |         |                            |
  1211  |             R = R + 2;  |      2  |                        56  |
  1212  |  resetPlaceHolder_1();  |         |                            |
  1232  |             R = R + 2;  |      2  |                        57  |
  1233  |  resetPlaceHolder_1();  |         |                            |
  1253  |             R = R + 2;  |      2  |                        58  |
  1254  |  resetPlaceHolder_1();  |         |                            |
  1274  |             R = R + 2;  |      2  |                        59  |
  1275  |  resetPlaceHolder_1();  |         |                            |
  1295  |             R = R + 2;  |      2  |                        60  |
  1296  |  resetPlaceHolder_1();  |         |                            |
  1316  |             R = R + 2;  |      2  |                        61  |
  1317  |  resetPlaceHolder_1();  |         |                            |
  1337  |             R = R + 2;  |      2  |                        62  |
  1338  |  resetPlaceHolder_1();  |         |                            |
  1358  |             R = R + 2;  |      2  |                        63  |
  1359  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(645, 666, 582, 120, 1275, 1233, 288, 1254, 372, 1191, 57, 78, 834, 981, 687, 1338, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 393, 1002, 792, 1086, 1170, 750, 204, 498, 1107, 540, 477, 1149, 330, 1044, 267, 162, 939, 855, 414, 1317, 1023, 876, 99, 771, 813, 351, 246, 1212, 36, 183, 603, 918, 897, 960, 1065, 624, 309, 708)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java.actual	2023-01-10 17:20:13.793530374 -0700
@@ -1,7 +1,7 @@
 abstract class GetShortClassName {
   void execute(int className) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m9.389s
user	0m17.033s
sys	0m1.971s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (2 * className)) || ((0 + (D0p * C0)) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int R = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (2 * className)) || ((0 + (D0p * C0)) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int R = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (* 2 className)) (= (+ 0 (* D0p C0)) (* 2 className)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (* 2 className)) (= (+ 0 (* D0p C0)) (* 2 className)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (* 2 className)) (= (+ 0 (* D0p C0)) (* 2 className)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1720-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1720-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.534s
user	0m17.605s
sys	0m2.563s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz7563988819794342726/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7563988819794342726/bin -o /tmp/qfuzz7563988819794342726/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7563988819794342726/bin
Found file /tmp/qfuzz7563988819794342726/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz7563988819794342726/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7563988819794342726/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7563988819794342726/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7563988819794342726/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7563988819794342726/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 29, exec speed = 130670 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m29 to 29 bits (average: 29.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7563988819794342726/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [19.00]
2; /tmp/qfuzz7563988819794342726/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 1; 0.00; [19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7563988819794342726/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7563988819794342726/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 110, 33, 153, 149, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.440s
user	0m16.095s
sys	0m1.135s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |       2  |     |             |
    11  |                         int R = 0;  |         |  0  |       0  |       2  |     |             |
    12  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    15  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    17  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    50  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    52  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    56  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    57  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    85  |                     inLiteral = 0;  |         |  0  |       0  |       2  |  1  |          0  |
    89  |                         i = i + 1;  |         |  0  |       0  |       2  |  2  |          0  |
    90  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  2  |          0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [48]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {48}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    48  |  R = R + (0 - buffer);  |      0  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java.actual	2023-01-10 17:21:03.910366654 -0700
@@ -1,15 +1,12 @@
 abstract class Lexx {
   void execute(int format) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
-    int C1 = -1;
     int D0 = 0;
     int D0p = 0;
-    int D1 = 0;
-    int D1p = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * format) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * format) + 8)));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < format) || (((0 + (D0p * C0)) + (D1p * C1)) == format));
+    lessPreciseBound(((0 + (D0p * C0)) < ((8 * format) + 8)) || ((0 + (D0p * C0)) == ((8 * format) + 8)));
+    mostPreciseBound(((0 + (D0p * C0)) < format) || ((0 + (D0p * C0)) == format));
     if ((format < 0) || (format == 0))
     {
       return;
@@ -29,7 +26,7 @@
       if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
       {
         buffer = buffer + 1;
-        D1 = D1 + 1;
+        R = R + 1;
         i = i + 1;
         continue;
       }
@@ -48,17 +45,7 @@
         inLiteral = 1;
       }
       i = i + 1;
-      // reset R1
-      if ((i < 1) || (i == 1))
-      {
-        D0p = D0;
-        D0 = 0;
-        C0 = C0 + 1;
-      }
-      else
-      {
-        // reset R0
-      }
+      // resetPlaceHolder_1();
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.129s
user	0m9.172s
sys	0m0.897s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * format) + 8)) || ((0 + (D0p * C0)) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < format) || ((0 + (D0p * C0)) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
      {
        buffer = buffer + 1;
        R = R + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * format) + 8)) || ((0 + (D0p * C0)) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < format) || ((0 + (D0p * C0)) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
      {
        buffer = buffer + 1;
        R = R + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) format) (= (+ 0 (* D0p C0)) format))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) format) (= (+ 0 (* D0p C0)) format))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 0)` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) format) (= (+ 0 (* D0p C0)) format))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1721-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1721-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.662s
user	0m17.988s
sys	0m2.327s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz7477026609643146457/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7477026609643146457/bin -o /tmp/qfuzz7477026609643146457/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7477026609643146457/bin
Found file /tmp/qfuzz7477026609643146457/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz7477026609643146457/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7477026609643146457/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7477026609643146457/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7477026609643146457/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7477026609643146457/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 123283 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7477026609643146457/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.799s
user	0m14.924s
sys	0m1.000s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.938s
user	0m3.536s
sys	0m0.210s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if ((((pattern < 0) || (pattern == 0)) || ((currentIdx < 0) || (currentIdx == 0))) || !((currentIdx < (pattern - 1))))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern, int currentIdx)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if ((((pattern < 0) || (pattern == 0)) || ((currentIdx < 0) || (currentIdx == 0))) || !((currentIdx < (pattern - 1))))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 pattern)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `11.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1721-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1721-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.117s
user	0m23.767s
sys	0m3.739s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz8933331380317951658/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8933331380317951658/bin -o /tmp/qfuzz8933331380317951658/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8933331380317951658/bin
Found file /tmp/qfuzz8933331380317951658/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz8933331380317951658/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8933331380317951658/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8933331380317951658/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8933331380317951658/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8933331380317951658/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 115316 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8933331380317951658/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz8933331380317951658/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8933331380317951658/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8933331380317951658/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 28, 8, 157, 89)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.807s
user	0m14.733s
sys	0m0.874s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |      2  |   0  |
    11  |                         int R = 0;  |         |  0  |     |      2  |   0  |
    12  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    15  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    29  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    44  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java.actual	2023-01-10 17:22:44.544027752 -0700
@@ -1,7 +1,7 @@
 abstract class LongToHex {
   void execute(int nHexs) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.271s
user	0m9.384s
sys	0m1.477s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * nHexs) + 8)) || ((0 + (D0p * C0)) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < nHexs) || ((0 + (D0p * C0)) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * nHexs) + 8)) || ((0 + (D0p * C0)) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < nHexs) || ((0 + (D0p * C0)) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) nHexs) (= (+ 0 (* D0p C0)) nHexs))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) nHexs) (= (+ 0 (* D0p C0)) nHexs))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) nHexs) (= (+ 0 (* D0p C0)) nHexs))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1722-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1722-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.361s
user	0m15.616s
sys	0m2.383s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz2660997155987488549/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2660997155987488549/bin -o /tmp/qfuzz2660997155987488549/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2660997155987488549/bin
Found file /tmp/qfuzz2660997155987488549/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz2660997155987488549/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2660997155987488549/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2660997155987488549/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2660997155987488549/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2660997155987488549/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 125458 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2660997155987488549/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz2660997155987488549/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2660997155987488549/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2660997155987488549/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(156, 49, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.039s
user	0m14.536s
sys	0m1.037s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |     |    2  |
    11  |                         int R = 0;  |         |  0  |       0  |     |    2  |
    12  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    15  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    22  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    29  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    37  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    40  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    44  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    45  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java.actual	2023-01-10 17:23:33.384826274 -0700
@@ -1,7 +1,7 @@
 abstract class Modify {
   void execute(int str) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.396s
user	0m9.577s
sys	0m1.534s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1723-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1723-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.461s
user	0m15.692s
sys	0m2.443s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz7877985731535876163/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7877985731535876163/bin -o /tmp/qfuzz7877985731535876163/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7877985731535876163/bin
Found file /tmp/qfuzz7877985731535876163/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz7877985731535876163/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7877985731535876163/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7877985731535876163/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7877985731535876163/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7877985731535876163/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 22, exec speed = 107198 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m107k to 107k us (average: 107k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7877985731535876163/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [17.00]
2; /tmp/qfuzz7877985731535876163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7877985731535876163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7877985731535876163/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(134, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.808s
user	0m14.318s
sys	0m1.020s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 41):
                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buf  |  i  |  pattern  |
-----------------------------------------------------------------------------------------
    21  |                            return;  |         |     |       |  2  |        2  |
    23  |                       int buf = 0;  |         |     |    0  |  2  |        2  |
    25  |                         int R = 0;  |         |  0  |    0  |  2  |        2  |
    26  |  // mostPreciseBound(R <= patte...  |         |  0  |    0  |  2  |        2  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |  0  |    0  |  2  |        2  |
    32  |                     buf = buf + 1;  |         |  0  |    1  |  2  |        2  |
    35  |                         R = R + 1;  |      1  |  1  |    1  |  2  |        2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [35]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [35]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}
                                                               
 Index  |   Commands   |  Costs  |  SegmentIDs in GroupID(0)  |
---------------------------------------------------------------
    35  |  R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java.actual	2023-01-10 17:24:20.721596008 -0700
@@ -1,7 +1,7 @@
 abstract class ParseToken {
   void execute(int pattern, int i) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;
@@ -26,9 +26,9 @@
       while ((i + 1) < pattern)
       {
         buf = buf + 1;
-        D0 = D0 + 1;
+        R = R + 1;
         i = i + 1;
-        // reset R0
+        // resetPlaceHolder_1();
       }
     }
     else


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m4.046s
user	0m7.366s
sys	0m0.884s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (pattern + 1)) || ((0 + (D0p * C0)) == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    int R = 0;
    {
      buf = buf + 1;
      D0 = D0 + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (pattern + 1)) || ((0 + (D0p * C0)) == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    int R = 0;
    {
      buf = buf + 1;
      D0 = D0 + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ pattern 1)) (= (+ 0 (* D0p C0)) (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ pattern 1)) (= (+ 0 (* D0p C0)) (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ pattern 1)) (= (+ 0 (* D0p C0)) (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `9.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1724-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1724-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.414s
user	0m20.352s
sys	0m3.400s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz6129113645821934276/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6129113645821934276/bin -o /tmp/qfuzz6129113645821934276/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6129113645821934276/bin
Found file /tmp/qfuzz6129113645821934276/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz6129113645821934276/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6129113645821934276/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6129113645821934276/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6129113645821934276/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6129113645821934276/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 114936 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m114k to 114k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6129113645821934276/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 2.00; [13.00,15.00,21.00]
2; /tmp/qfuzz6129113645821934276/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 2.00; [13.00,15.00,21.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6129113645821934276/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6129113645821934276/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(178)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.839s
user	0m14.399s
sys	0m0.942s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 56):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |   0  |      2  |
    11  |                         int R = 0;  |         |  0  |     |   0  |      2  |
    12  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    15  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    22  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    25  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    29  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    30  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    37  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    40  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    44  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    45  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    52  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    55  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40, 55]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40, 55]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40, 55]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 2;  |      2  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 2;  |      2  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
    55  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
GroupID(1): {55}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |             R = R + 2;  |      2  |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    40  |             R = R + 2;  |      2  |                         1  |                            |
    45  |  resetPlaceHolder_1();  |         |                            |                            |
    55  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java.actual	2023-01-10 17:25:14.654468432 -0700
@@ -1,7 +1,7 @@
 abstract class SimpleQuote {
   void execute(int value) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
     int D0 = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.664s
user	0m11.915s
sys	0m2.356s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * value) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((value * 2) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * value) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((value * 2) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1725-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1725-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.635s
user	0m28.470s
sys	0m4.667s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4503078715070787122/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4503078715070787122/bin -o /tmp/qfuzz4503078715070787122/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4503078715070787122/bin
Found file /tmp/qfuzz4503078715070787122/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4503078715070787122/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4503078715070787122/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4503078715070787122/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4503078715070787122/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4503078715070787122/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 121054 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4503078715070787122/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz4503078715070787122/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4503078715070787122/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4503078715070787122/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.735s
user	0m14.449s
sys	0m1.100s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m2.322s
user	0m3.969s
sys	0m0.246s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * spaces) + 8)) || ((0 + (D0p * C0)) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < spaces) || ((0 + (D0p * C0)) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * spaces) + 8)) || ((0 + (D0p * C0)) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < spaces) || ((0 + (D0p * C0)) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) spaces) (= (+ 0 (* D0p C0)) spaces))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) spaces) (= (+ 0 (* D0p C0)) spaces))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) spaces) (= (+ 0 (* D0p C0)) spaces))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1726-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1726-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.405s
user	0m18.285s
sys	0m2.783s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz69931227621841460/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz69931227621841460/bin -o /tmp/qfuzz69931227621841460/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz69931227621841460/bin
Found file /tmp/qfuzz69931227621841460/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz69931227621841460/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz69931227621841460/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz69931227621841460/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz69931227621841460/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz69931227621841460/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz69931227621841460/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz69931227621841460/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 123175 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz69931227621841460/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz69931227621841460/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz69931227621841460/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz69931227621841460/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.864s
user	0m14.362s
sys	0m0.927s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |     |    2  |
    11  |                         int R = 0;  |         |  0  |       0  |     |    2  |
    12  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    15  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    22  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    29  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java	2023-01-09 22:30:16.745426100 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java.actual	2023-01-10 17:26:51.976031888 -0700
@@ -1,7 +1,7 @@
 abstract class Squeeze {
   void execute(int str) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;
@@ -25,9 +25,7 @@
       buffer = buffer + 1;
       D0 = D0 + 1;
       i = i + 1;
-      D0p = D0;
-      D0 = 0;
-      C0 = C0 + 1;
+      // resetPlaceHolder_1();
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.338s
user	0m6.968s
sys	0m0.866s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1726-transparentAmortize-60s-mostPrecise/lang3-raw-0110-1726-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.792s
user	0m15.016s
sys	0m2.105s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz6142295860613672177/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6142295860613672177/bin -o /tmp/qfuzz6142295860613672177/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6142295860613672177/bin
Found file /tmp/qfuzz6142295860613672177/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz6142295860613672177/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6142295860613672177/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6142295860613672177/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6142295860613672177/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6142295860613672177/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 117239 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 3.00; [23.00,26.00]
2; /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [38.00]
4; /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta; 2; 9.00; [17.00,26.00]
6; /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 2; 9.00; [17.00,26.00]
13; /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta; 2; 15.00; [17.00,32.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 173, 27, 53, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 41, 159, 185, 67, 53)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 56, 28, 110, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6142295860613672177/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 106, 153, 67, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,173,27,53,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [41,159,185,67,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [56,28,110,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,106,153,67,48]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.008s
user	0m14.810s
sys	0m1.058s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [110,173,27,53,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [56,28,110,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [110,106,153,67,48])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [41,159,185,67,53])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 79):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  choice  |       choices        |  i  |  str  |  strDigits  |
-----------------------------------------------------------------------------------------------------------------------------
    13  |                         int R = 0;  |         |  0  |          |  [110,173,27,53,50]  |     |    2  |             |
    14  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [110,173,27,53,50]  |     |    2  |             |
    15  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [110,173,27,53,50]  |     |    2  |             |
    17  |                 int strDigits = 0;  |         |  0  |          |  [110,173,27,53,50]  |     |    2  |          0  |
    19  |                    int choice = 0;  |         |  0  |       0  |  [110,173,27,53,50]  |     |    2  |          0  |
    21  |                         int i = 0;  |         |  0  |       0  |  [110,173,27,53,50]  |  0  |    2  |          0  |
    27  |  choice = arrayRead(choices, i)...  |         |  0  |     110  |  [110,173,27,53,50]  |  0  |    2  |          0  |
    40  |         strDigits = strDigits + 1;  |         |  0  |     110  |  [110,173,27,53,50]  |  0  |    2  |          1  |
    43  |                         R = R + 1;  |      1  |  1  |     110  |  [110,173,27,53,50]  |  0  |    2  |          1  |
    47  |                         i = i + 1;  |         |  1  |     110  |  [110,173,27,53,50]  |  1  |    2  |          1  |
    48  |              resetPlaceHolder_1();  |         |  1  |     110  |  [110,173,27,53,50]  |  1  |    2  |          1  |
    54  |  choice = arrayRead(choices, i)...  |         |  1  |     173  |  [110,173,27,53,50]  |  1  |    2  |          1  |
    67  |         strDigits = strDigits + 1;  |         |  1  |     173  |  [110,173,27,53,50]  |  1  |    2  |          2  |
    70  |                         R = R + 1;  |      1  |  2  |     173  |  [110,173,27,53,50]  |  1  |    2  |          2  |
    74  |                         i = i + 1;  |         |  2  |     173  |  [110,173,27,53,50]  |  2  |    2  |          2  |
    75  |              resetPlaceHolder_1();  |         |  2  |     173  |  [110,173,27,53,50]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [43, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [43, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [43, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [43, 70]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {43}, {70} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    43  |             R = R + 1;  |      1  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    70  |             R = R + 1;  |      1  |                         1  |
    75  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {43}, {70}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    43  |             R = R + 1;  |      1  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    70  |             R = R + 1;  |      1  |                         1  |
    75  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(48)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java.actual	2023-01-10 17:27:40.372804819 -0700
@@ -1,7 +1,7 @@
 abstract class GetDigits {
   void execute(int str, int choices) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;
@@ -30,7 +30,7 @@
         choice = temporaryChoices - lastIndexOfChoices;
         lastIndexOfChoices = temporaryChoices;
       }
-      if (!((choice < 502)) && !((choice == 502)))
+      if (!((choice < 102)) && !((choice == 102)))
       {
         strDigits = strDigits + 1;
         D0 = D0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m5.562s
user	0m9.689s
sys	0m1.680s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 * str)) || ((0 + (D0p * C0)) == (8 * str)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 * str)) || ((0 + (D0p * C0)) == (8 * str)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `21.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1727-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1727-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m23.200s
user	0m45.678s
sys	0m4.247s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz4469807480080888104/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4469807480080888104/bin -o /tmp/qfuzz4469807480080888104/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4469807480080888104/bin
Found file /tmp/qfuzz4469807480080888104/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz4469807480080888104/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4469807480080888104/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4469807480080888104/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4469807480080888104/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4469807480080888104/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 120257 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz4469807480080888104/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz4469807480080888104/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4469807480080888104/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4469807480080888104/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57, 57, 194, 57, 57, 178, 57, 96, 70, 4, 38, 4, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57,57,194,57,57], 178, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.213s
user	0m15.482s
sys	0m1.025s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([57,57,194,57,57], 178, 2)
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
java.lang.IndexOutOfBoundsException: 178
	at scala.collection.LinearSeqOptimized.apply(LinearSeqOptimized.scala:67)
	at scala.collection.LinearSeqOptimized.apply$(LinearSeqOptimized.scala:65)
	at scala.collection.immutable.List.apply(List.scala:91)
	at brbo.backend2.interpreter.Interpreter.evaluateExpr(Interpreter.scala:337)
	at brbo.backend2.interpreter.Interpreter.evaluateAssignment(Interpreter.scala:412)
	at brbo.backend2.interpreter.Interpreter.evaluateCommand(Interpreter.scala:112)
	at brbo.backend2.interpreter.Interpreter.evaluateAst(Interpreter.scala:47)
	at brbo.backend2.interpreter.Interpreter.evaluateAst(Interpreter.scala:58)
	at brbo.backend2.interpreter.Interpreter.evaluateFunction(Interpreter.scala:40)
	at brbo.backend2.interpreter.Interpreter.execute(Interpreter.scala:24)
	at brbo.backend2.interpreter.Interpreter$.$anonfun$generateTraces$2(Interpreter.scala:822)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659)
	at scala.util.Success.$anonfun$map$1(Try.scala:255)
	at scala.util.Success.map(Try.scala:213)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)

real	0m2.181s
user	0m3.975s
sys	0m0.221s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * array)) + (8 * array))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (array + array)) || (((0 + (D0p * C0)) + (D1p * C1)) == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < endIndex)
    {
      D0 = D0 + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * array)) + (8 * array))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (array + array)) || (((0 + (D0p * C0)) + (D1p * C1)) == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < endIndex)
    {
      D0 = D0 + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ array array))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ array array))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 array)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ array array))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `36.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1728-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1728-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m38.577s
user	1m37.031s
sys	0m12.728s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz6843525204428707538/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6843525204428707538/bin -o /tmp/qfuzz6843525204428707538/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6843525204428707538/bin
Found file /tmp/qfuzz6843525204428707538/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz6843525204428707538/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6843525204428707538/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6843525204428707538/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6843525204428707538/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6843525204428707538/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 48, exec speed = 124550 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m48 to 48 bits (average: 48.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 63.00; [14.00,77.00,145.00,231.00,317.00,396.00]
1; /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 6; 5.00; [14.00,19.00,30.00,211.00,289.00,371.00]
4; /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 36.00; [14.00,77.00,145.00,195.00,231.00,396.00]
18; /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32; 3; 3.00; [11.00,14.00,332.00]
27; /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:8; 4; 7.00; [14.00,21.00,31.00,396.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32
/tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 100, 180, 139, 75)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 92, 67, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(155)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6843525204428707538/fuzzer-out/afl/queue/id:000004,src:000000+000002,op:splice,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 5, 10, 10, 10, 10, 10, 10, 10, 127, 10, 89, 99, 101, 133, 14, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,100,180,139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,92,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [155]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,5,10,10,10]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.834s
user	0m13.934s
sys	0m0.905s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([4,4,100,180,139])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,33,92,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([155])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,5,10,10,10])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 97):
                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects       |
-------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |  [4,4,100,180,139]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [4,4,100,180,139]  |
    11  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [4,4,100,180,139]  |
    13  |                         int i = 0;  |         |    0  |         |  0  |  [4,4,100,180,139]  |
    15  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [4,4,100,180,139]  |
    18  |     chunk = arrayRead(objects, i);  |         |    0  |      4  |  0  |  [4,4,100,180,139]  |
    21  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  [4,4,100,180,139]  |
    25  |                         i = i + 1;  |         |    4  |      4  |  1  |  [4,4,100,180,139]  |
    31  |                         R = R + 1;  |      1  |    5  |      4  |  1  |  [4,4,100,180,139]  |
    34  |     chunk = arrayRead(objects, i);  |         |    5  |      4  |  1  |  [4,4,100,180,139]  |
    37  |                     R = R + chunk;  |      4  |    9  |      4  |  1  |  [4,4,100,180,139]  |
    41  |                         i = i + 1;  |         |    9  |      4  |  2  |  [4,4,100,180,139]  |
    42  |              resetPlaceHolder_1();  |         |    9  |      4  |  2  |  [4,4,100,180,139]  |
    48  |                         R = R + 1;  |      1  |   10  |      4  |  2  |  [4,4,100,180,139]  |
    51  |     chunk = arrayRead(objects, i);  |         |   10  |    100  |  2  |  [4,4,100,180,139]  |
    54  |                     R = R + chunk;  |    100  |  110  |    100  |  2  |  [4,4,100,180,139]  |
    58  |                         i = i + 1;  |         |  110  |    100  |  3  |  [4,4,100,180,139]  |
    59  |              resetPlaceHolder_1();  |         |  110  |    100  |  3  |  [4,4,100,180,139]  |
    65  |                         R = R + 1;  |      1  |  111  |    100  |  3  |  [4,4,100,180,139]  |
    68  |     chunk = arrayRead(objects, i);  |         |  111  |    180  |  3  |  [4,4,100,180,139]  |
    71  |                     R = R + chunk;  |    180  |  291  |    180  |  3  |  [4,4,100,180,139]  |
    75  |                         i = i + 1;  |         |  291  |    180  |  4  |  [4,4,100,180,139]  |
    76  |              resetPlaceHolder_1();  |         |  291  |    180  |  4  |  [4,4,100,180,139]  |
    82  |                         R = R + 1;  |      1  |  292  |    180  |  4  |  [4,4,100,180,139]  |
    85  |     chunk = arrayRead(objects, i);  |         |  292  |    139  |  4  |  [4,4,100,180,139]  |
    88  |                     R = R + chunk;  |    139  |  431  |    139  |  4  |  [4,4,100,180,139]  |
    92  |                         i = i + 1;  |         |  431  |    139  |  5  |  [4,4,100,180,139]  |
    93  |              resetPlaceHolder_1();  |         |  431  |    139  |  5  |  [4,4,100,180,139]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71} because there exists a longer and subsuming segment {37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {88} because there exists a longer and subsuming segment {21,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21} because there exists a longer and subsuming segment {21,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {31}, {48}, {65}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |      4  |                            |
    31  |             R = R + 1;  |      1  |                         0  |
    37  |         R = R + chunk;  |      4  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    54  |         R = R + chunk;  |    100  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         2  |
    71  |         R = R + chunk;  |    180  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         3  |
    88  |         R = R + chunk;  |    139  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,54} because there exists a longer and subsuming segment {37,54,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,88} because there exists a longer and subsuming segment {21,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,88} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,71} because there exists a longer and subsuming segment {21,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,71} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,71} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,37} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,54} because there exists a longer and subsuming segment {21,54,88} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {37,54,71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |      4  |                            |
    31  |             R = R + 1;  |      1  |                            |
    37  |         R = R + chunk;  |      4  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |             R = R + 1;  |      1  |                            |
    54  |         R = R + chunk;  |    100  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    71  |         R = R + chunk;  |    180  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                            |
    88  |         R = R + chunk;  |    139  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31}, {48}, {65}, {82}
GroupID(1): {37,54,71}
GroupID(2): {21,88}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    21  |         R = R + chunk;  |      4  |                            |                            |                         0  |
    31  |             R = R + 1;  |      1  |                         0  |                            |                            |
    37  |         R = R + chunk;  |      4  |                            |                         0  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    48  |             R = R + 1;  |      1  |                         1  |                            |                            |
    54  |         R = R + chunk;  |    100  |                            |                         0  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         2  |                            |                            |
    71  |         R = R + chunk;  |    180  |                            |                         0  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    82  |             R = R + 1;  |      1  |                         3  |                            |                            |
    88  |         R = R + chunk;  |    139  |                            |                            |                         0  |
    93  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 59, 76)
GroupID(1): Set()
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R2 = R2 + chunk;
use R chunk -> if ((i < 3) || (i == 3))
{
  R1 = R1 + chunk;
}
else
{
  R2 = R2 + chunk;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java.actual	2023-01-10 17:30:06.951130506 -0700
@@ -1,17 +1,20 @@
 abstract class Join2 {
   void execute(int objects) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
+    int C2 = -1;
     int D0 = 0;
     int D0p = 0;
     int D1 = 0;
     int D1p = 0;
+    int D2 = 0;
+    int D2p = 0;
     int temporaryObjects = 0;
     int lastIndexOfObjects = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + (8 * objects))));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + objects)) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + objects)));
+    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == ((8 + (8 * objects)) + (8 * objects))));
+    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (objects + objects)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (objects + objects)));
     if ((objects < 1) || (objects == 1))
     {
       return;
@@ -30,7 +33,7 @@
       chunk = temporaryObjects - lastIndexOfObjects;
       lastIndexOfObjects = temporaryObjects;
     }
-    D1 = D1 + chunk;
+    D2 = D2 + chunk;
     i = i + 1;
     while (i < objects)
     {
@@ -40,8 +43,16 @@
         chunk = temporaryObjects - lastIndexOfObjects;
         lastIndexOfObjects = temporaryObjects;
       }
-      D1 = D1 + chunk;
+      if ((i < 3) || (i == 3))
+      {
+        D1 = D1 + chunk;
+      }
+      else
+      {
+        D2 = D2 + chunk;
+      }
       i = i + 1;
+      // reset R2
       // reset R1
       D0p = D0;
       D0 = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m10.521s
user	0m18.386s
sys	0m3.745s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (objects + objects)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < ((8 + (8 * objects)) + (8 * objects))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (objects + objects)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D2 = D2 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      if ((i < 3) || (i == 3))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D2 = D2 + chunk;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 (* D0p C0) (* D1p C1) (* D2p C2))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 (* D0p C0) (* D1p C1) (* D2p C2))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 objects)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 (* D0p C0) (* D1p C1) (* D2p C2))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `29.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1730-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1730-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m31.274s
user	1m43.156s
sys	0m7.906s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz5114621149710279203/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5114621149710279203/bin -o /tmp/qfuzz5114621149710279203/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5114621149710279203/bin
Found file /tmp/qfuzz5114621149710279203/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz5114621149710279203/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5114621149710279203/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5114621149710279203/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5114621149710279203/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5114621149710279203/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 48, exec speed = 136172 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m48 to 48 bits (average: 48.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 33.00; [77.00,112.00,145.00,231.00,317.00,396.00]
2; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 6; 5.00; [77.00,129.00,319.00,324.00,348.00,389.00]
3; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 6; 6.00; [33.00,39.00,85.00,112.00,231.00,314.00]
4; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 6; 2.00; [112.00,127.00,129.00,145.00,160.00,317.00]
12; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 5; 15.00; [19.00,112.00,127.00,145.00,396.00]
14; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 6; 42.00; [35.00,77.00,130.00,231.00,351.00,396.00]
25; /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta; 6; 43.00; [47.00,183.00,231.00,274.00,331.00,396.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 170, 12, 59)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 160, 18, 86, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 59, 33, 154, 189)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(146, 110, 37, 11, 14, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 59, 58, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5114621149710279203/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 58, 4, 67, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,170,12], 59
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,160,18,86], 131
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [146,110,37,11,14], 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [69,59,58,153,67], 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,58,4,67,67], 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.457s
user	0m15.913s
sys	0m1.110s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,33,170,12], 59)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,160,18,86], 131)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([146,110,37,11,14], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([69,59,58,153,67], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,58,4,67,67], 50)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 97):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |  [187,110,33,170,12]  |         59  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,110,33,170,12]  |         59  |
    11  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,110,33,170,12]  |         59  |
    13  |                         int i = 0;  |         |    0  |         |  0  |  [187,110,33,170,12]  |         59  |
    15  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,110,33,170,12]  |         59  |
    18  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,110,33,170,12]  |         59  |
    21  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,110,33,170,12]  |         59  |
    25  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,110,33,170,12]  |         59  |
    31  |                 R = R + separator;  |     59  |  246  |    187  |  1  |  [187,110,33,170,12]  |         59  |
    34  |     chunk = arrayRead(objects, i);  |         |  246  |    110  |  1  |  [187,110,33,170,12]  |         59  |
    37  |                     R = R + chunk;  |    110  |  356  |    110  |  1  |  [187,110,33,170,12]  |         59  |
    41  |                         i = i + 1;  |         |  356  |    110  |  2  |  [187,110,33,170,12]  |         59  |
    42  |              resetPlaceHolder_1();  |         |  356  |    110  |  2  |  [187,110,33,170,12]  |         59  |
    48  |                 R = R + separator;  |     59  |  415  |    110  |  2  |  [187,110,33,170,12]  |         59  |
    51  |     chunk = arrayRead(objects, i);  |         |  415  |     33  |  2  |  [187,110,33,170,12]  |         59  |
    54  |                     R = R + chunk;  |     33  |  448  |     33  |  2  |  [187,110,33,170,12]  |         59  |
    58  |                         i = i + 1;  |         |  448  |     33  |  3  |  [187,110,33,170,12]  |         59  |
    59  |              resetPlaceHolder_1();  |         |  448  |     33  |  3  |  [187,110,33,170,12]  |         59  |
    65  |                 R = R + separator;  |     59  |  507  |     33  |  3  |  [187,110,33,170,12]  |         59  |
    68  |     chunk = arrayRead(objects, i);  |         |  507  |    170  |  3  |  [187,110,33,170,12]  |         59  |
    71  |                     R = R + chunk;  |    170  |  677  |    170  |  3  |  [187,110,33,170,12]  |         59  |
    75  |                         i = i + 1;  |         |  677  |    170  |  4  |  [187,110,33,170,12]  |         59  |
    76  |              resetPlaceHolder_1();  |         |  677  |    170  |  4  |  [187,110,33,170,12]  |         59  |
    82  |                 R = R + separator;  |     59  |  736  |    170  |  4  |  [187,110,33,170,12]  |         59  |
    85  |     chunk = arrayRead(objects, i);  |         |  736  |     12  |  4  |  [187,110,33,170,12]  |         59  |
    88  |                     R = R + chunk;  |     12  |  748  |     12  |  4  |  [187,110,33,170,12]  |         59  |
    92  |                         i = i + 1;  |         |  748  |     12  |  5  |  [187,110,33,170,12]  |         59  |
    93  |              resetPlaceHolder_1();  |         |  748  |     12  |  5  |  [187,110,33,170,12]  |         59  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71} because there exists a longer and subsuming segment {71,82} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {88} because there exists a longer and subsuming segment {65,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21} because there exists a longer and subsuming segment {21,48} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {31}, {48}, {65}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |
    31  |     R = R + separator;  |     59  |                         0  |
    37  |         R = R + chunk;  |    110  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |     R = R + separator;  |     59  |                         1  |
    54  |         R = R + chunk;  |     33  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |     R = R + separator;  |     59  |                         2  |
    71  |         R = R + chunk;  |    170  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |     R = R + separator;  |     59  |                         3  |
    88  |         R = R + chunk;  |     12  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,71} because there exists a longer and subsuming segment {21,37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,71} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,71} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,37} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31}, {48}, {65}, {82}
GroupID(1): {21,37,54,71,88}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |                         0  |
    31  |     R = R + separator;  |     59  |                         0  |                            |
    37  |         R = R + chunk;  |    110  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |     R = R + separator;  |     59  |                         1  |                            |
    54  |         R = R + chunk;  |     33  |                            |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |     R = R + separator;  |     59  |                         2  |                            |
    71  |         R = R + chunk;  |    170  |                            |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    82  |     R = R + separator;  |     59  |                         3  |                            |
    88  |         R = R + chunk;  |     12  |                            |                         0  |
    93  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 59, 76)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java.actual	2023-01-10 17:31:22.908328102 -0700
@@ -1,7 +1,7 @@
 abstract class JoinWith {
   void execute(int objects, int separator) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
     int D0 = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m8.222s
user	0m16.244s
sys	0m3.117s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + (objects * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + (objects * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1731-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1731-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.143s
user	0m16.278s
sys	0m1.997s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz2603591149797757899/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2603591149797757899/bin -o /tmp/qfuzz2603591149797757899/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2603591149797757899/bin
Found file /tmp/qfuzz2603591149797757899/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz2603591149797757899/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2603591149797757899/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2603591149797757899/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2603591149797757899/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2603591149797757899/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 119510 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta; 3; 7.00; [26.00,33.00,40.00]
6; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 56.00; [153.50,210.00]
8; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 3; 57.00; [26.00,342.00,399.00]
10; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 3; 110.00; [84.00,194.00,399.00]
15; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 3; 138.00; [18.00,156.00,399.00]
17; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 52.00; [70.00,122.00,331.00]
26; /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 3; 109.00; [16.00,125.00,244.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 62, 4, 183, 34, 34, 16, 41, 25, 34, 34, 34, 90, 34, 34, 34, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 58, 4, 141, 45, 4, 167, 9, 141, 93, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 51, 93, 16, 188)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 69, 12, 129, 69, 5, 67, 50, 6, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 64, 96, 69, 5, 132, 73, 99, 74)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 149, 52, 191, 91, 171, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2603591149797757899/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 170, 113, 16, 11, 80, 4, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,62,4,183,34], 34, 16, 41
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,58,4,141,45], 4, 167, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 51, 93, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,69,12,129], 69, 5, 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,64,96,69,5], 132, 73, 99
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,170,113,16,11], 80, 4, 187
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.140s
user	0m15.294s
sys	0m1.115s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([4,62,4,183,34], 34, 16, 41)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,58,4,141,45], 4, 167, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,33,153,67], 51, 93, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,69,12,129], 69, 5, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([64,64,96,69,5], 132, 73, 99)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([50,170,113,16,11], 80, 4, 187)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 93):
                                                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  max  |  replacement  |  searchString  |       text        |
---------------------------------------------------------------------------------------------------------------------------------------------
    33  |                         int R = 0;  |         |   0  |         |     |   41  |           16  |            34  |  [4,62,4,183,34]  |
    34  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |   41  |           16  |            34  |  [4,62,4,183,34]  |
    35  |  // lessPreciseBound(R <= MAX +...  |         |   0  |         |     |   41  |           16  |            34  |  [4,62,4,183,34]  |
    37  |                     int chunk = 0;  |         |   0  |      0  |     |   41  |           16  |            34  |  [4,62,4,183,34]  |
    39  |                         int i = 0;  |         |   0  |      0  |  0  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    47  |        chunk = arrayRead(text, i);  |         |   0  |      4  |  0  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    50  |                     R = R + chunk;  |      4  |   4  |      4  |  0  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    53  |               R = R + replacement;  |     16  |  20  |      4  |  0  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    58  |  chunk = arrayRead(text, (i + 1...  |         |  20  |     62  |  0  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    62  |                         i = i + 2;  |         |  20  |     62  |  2  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    63  |              resetPlaceHolder_1();  |         |  20  |     62  |  2  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    71  |        chunk = arrayRead(text, i);  |         |  20  |      4  |  2  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    74  |                     R = R + chunk;  |      4  |  24  |      4  |  2  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    77  |               R = R + replacement;  |     16  |  40  |      4  |  2  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    82  |  chunk = arrayRead(text, (i + 1...  |         |  40  |    183  |  2  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    86  |                         i = i + 2;  |         |  40  |    183  |  4  |   41  |           16  |            34  |  [4,62,4,183,34]  |
    87  |              resetPlaceHolder_1();  |         |  40  |    183  |  4  |   41  |           16  |            34  |  [4,62,4,183,34]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [50, 53, 74, 77]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50} because there exists a longer and subsuming segment {50,77} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74} because there exists a longer and subsuming segment {53,74} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {53}, {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |         R = R + chunk;  |      4  |                            |
    53  |   R = R + replacement;  |     16  |                         0  |
    63  |  resetPlaceHolder_1();  |         |                            |
    74  |         R = R + chunk;  |      4  |                            |
    77  |   R = R + replacement;  |     16  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 74]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 74]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [50, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {53}, {77}
GroupID(1): {50,74}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |         R = R + chunk;  |      4  |                            |                         0  |
    53  |   R = R + replacement;  |     16  |                         0  |                            |
    63  |  resetPlaceHolder_1();  |         |                            |                            |
    74  |         R = R + chunk;  |      4  |                            |                         0  |
    77  |   R = R + replacement;  |     16  |                         1  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(63)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R replacement -> R0 = R0 + replacement;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java.actual	2023-01-10 17:32:14.585140409 -0700
@@ -1,7 +1,7 @@
 abstract class Replace {
   void execute(int text, int searchString, int replacement, int max) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
     int D0 = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m7.353s
user	0m14.030s
sys	0m2.245s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (text + (text * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (text + (text * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `83.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1732-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1732-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m25.729s
user	3m17.699s
sys	0m19.382s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz8168911840499890110/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8168911840499890110/bin -o /tmp/qfuzz8168911840499890110/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8168911840499890110/bin
Found file /tmp/qfuzz8168911840499890110/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz8168911840499890110/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8168911840499890110/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8168911840499890110/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8168911840499890110/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8168911840499890110/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 117664 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 2; 8.00; [17.00,25.00]
8; /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+cov; 2; 8.00; [16.50,25.00]
10; /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 2; 8.00; [16.00,24.00]
11; /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 8.00; [16.00,24.00]
15; /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 2; 9.00; [16.00,25.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 172, 172, 172, 172, 172, 172, 172, 100, 172, 172, 172, 172)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(188, 170, 99, 4, 40, 16, 111, 133, 133, 133, 166, 133, 133, 133, 133, 172)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 121, 131, 63, 5, 50, 83, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(14, 14, 62, 4, 38, 14, 129, 13, 14, 62, 4, 38, 14, 129, 14, 129, 14, 14, 14, 46, 18, 30, 14, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8168911840499890110/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(51, 51, 51, 51, 51, 51, 132, 51, 51, 51)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [172,172,172,172,172], 172, 172
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [170,99,4,40,16], 111, 133
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [121,131,63,5,50], 83, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [14,62,4,38,14], 129, 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [51,51,51,51,51], 132, 51
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.001s
user	0m14.517s
sys	0m0.909s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [172,172,172,172,172], 172, 172)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [170,99,4,40,16], 111, 133)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [121,131,63,5,50], 83, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [51,51,51,51,51], 132, 51)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, [14,62,4,38,14], 129, 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 91):
                                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |         choices         |  i  |  replaceChars  |  searchChars  |  str  |
---------------------------------------------------------------------------------------------------------------------------------------------------
    29  |                         int R = 0;  |         |  0  |          |  [172,172,172,172,172]  |     |           172  |          172  |    2  |
    30  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [172,172,172,172,172]  |     |           172  |          172  |    2  |
    31  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [172,172,172,172,172]  |     |           172  |          172  |    2  |
    33  |                    int choice = 0;  |         |  0  |       0  |  [172,172,172,172,172]  |     |           172  |          172  |    2  |
    35  |                         int i = 0;  |         |  0  |       0  |  [172,172,172,172,172]  |  0  |           172  |          172  |    2  |
    41  |  choice = arrayRead(choices, i)...  |         |  0  |     172  |  [172,172,172,172,172]  |  0  |           172  |          172  |    2  |
    56  |                         R = R + 1;  |      1  |  1  |     172  |  [172,172,172,172,172]  |  0  |           172  |          172  |    2  |
    60  |                         i = i + 1;  |         |  1  |     172  |  [172,172,172,172,172]  |  1  |           172  |          172  |    2  |
    61  |              resetPlaceHolder_1();  |         |  1  |     172  |  [172,172,172,172,172]  |  1  |           172  |          172  |    2  |
    67  |  choice = arrayRead(choices, i)...  |         |  1  |     172  |  [172,172,172,172,172]  |  1  |           172  |          172  |    2  |
    82  |                         R = R + 1;  |      1  |  2  |     172  |  [172,172,172,172,172]  |  1  |           172  |          172  |    2  |
    86  |                         i = i + 1;  |         |  2  |     172  |  [172,172,172,172,172]  |  2  |           172  |          172  |    2  |
    87  |              resetPlaceHolder_1();  |         |  2  |     172  |  [172,172,172,172,172]  |  2  |           172  |          172  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 82]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {56}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    56  |             R = R + 1;  |      1  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {56}, {82}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    56  |             R = R + 1;  |      1  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(61)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java.actual	2023-01-10 17:34:21.667130802 -0700
@@ -1,7 +1,7 @@
 abstract class ReplaceChars {
   void execute(int str, int choices, int searchChars, int replaceChars) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;
@@ -29,7 +29,7 @@
         choice = temporaryChoices - lastIndexOfChoices;
         lastIndexOfChoices = temporaryChoices;
       }
-      if (!((choice < 502)) && !((choice == 502)))
+      if (!((choice < 102)) && !((choice == 102)))
       {
         if (i < replaceChars)
         {
@@ -42,7 +42,7 @@
       }
       else
       {
-        D0 = D0 + 1;
+        R = R + 1;
       }
       i = i + 1;
       D0p = D0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m5.324s
user	0m9.809s
sys	0m1.557s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((((str < 0) || (str == 0)) || ((searchChars < 0) || (searchChars == 0))) || ((replaceChars < 0) || (replaceChars == 0))) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        R = R + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int choices, int str, int replaceChars, int searchChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((((str < 0) || (str == 0)) || ((searchChars < 0) || (searchChars == 0))) || ((replaceChars < 0) || (replaceChars == 0))) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        R = R + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `426.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1734-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1734-transparentAmortize-60s-mostPrecise-000-099.csv`

real	7m8.636s
user	10m26.690s
sys	0m12.192s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz4494506103279526637/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4494506103279526637/bin -o /tmp/qfuzz4494506103279526637/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4494506103279526637/bin
Found file /tmp/qfuzz4494506103279526637/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz4494506103279526637/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4494506103279526637/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4494506103279526637/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4494506103279526637/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4494506103279526637/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 121029 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]
7; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 4; 28.00; [66.00,94.00,276.00,416.00]
10; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 4; 34.00; [204.00,238.00,292.00,362.00]
11; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 3; 18.00; [240.00,258.00,339.00]
13; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 2; 264.00; [128.00,392.00]
19; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 3; 13.00; [140.00,153.00,378.00]
21; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 4; 71.00; [28.00,175.00,246.00,390.00]
26; /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 2; 8.00; [84.00,92.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 23, 128, 37, 42, 53, 36, 36, 36, 117, 36, 36, 36, 36, 36)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 109, 171, 92, 92, 95, 92, 92, 92, 105, 62, 33, 13, 153, 198, 16, 68, 4, 50, 114, 198, 16, 142, 75, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(105, 185, 4, 62, 71, 47, 20, 4, 144, 79, 108, 79, 128, 128, 128, 128, 128, 133, 166, 79, 123, 82, 7, 53, 187, 191, 82, 27, 153, 148, 54, 191, 4, 27, 153, 148, 133, 187, 47, 110, 120, 153, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 109, 5, 133, 109, 109, 109, 109, 109, 109, 184, 109, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(111, 110, 33, 153, 170, 93, 16, 132, 11, 151, 153, 163, 128, 109, 191, 109, 158, 77, 159, 159, 159, 159, 159, 159, 159, 159, 159, 109, 191, 109, 158, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 186, 33, 186, 33, 153, 153, 67, 56, 187, 153, 153, 67, 56, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(171, 60, 60, 60, 60, 60, 179, 60, 60, 60, 60, 60, 31, 55, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4494506103279526637/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(28, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,23,128,37,42], [53,36,36,36,117], 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,109,171,92,92], [95,92,92,92,105], 62
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [105,185,4,62,71], [47,20,4,144,79], 108
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,109,5,133,109], [109,109,109,109,109], 184
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [111,110,33,153,170], [93,16,132,11,151], 153
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,186,33,186,33], [153,153,67,56,187], 153
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [171,60,60,60,60], [60,179,60,60,60], 60
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [28,32,32,32,32], [32,32,32,32,32], 32
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.853s
user	0m14.099s
sys	0m0.940s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([190,23,128,37,42], [53,36,36,36,117], 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([128,109,171,92,92], [95,92,92,92,105], 62)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,109,5,133,109], [109,109,109,109,109], 184)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([105,185,4,62,71], [47,20,4,144,79], 108)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([111,110,33,153,170], [93,16,132,11,151], 153)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([4,186,33,186,33], [153,153,67,56,187], 153)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([171,60,60,60,60], [60,179,60,60,60], 60)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([28,32,32,32,32], [32,32,32,32,32], 32)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 186):
                                                                                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |     isSeparator     |  isSeparatorChunk  |  max  |  numberOfStrings  |         str          |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    21  |                         int R = 0;  |         |    0  |         |     |  [53,36,36,36,117]  |                    |   36  |                   |  [190,23,128,37,42]  |
    22  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [53,36,36,36,117]  |                    |   36  |                   |  [190,23,128,37,42]  |
    23  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [53,36,36,36,117]  |                    |   36  |                   |  [190,23,128,37,42]  |
    25  |           int numberOfStrings = 0;  |         |    0  |         |     |  [53,36,36,36,117]  |                    |   36  |                0  |  [190,23,128,37,42]  |
    27  |                     int chunk = 0;  |         |    0  |      0  |     |  [53,36,36,36,117]  |                    |   36  |                0  |  [190,23,128,37,42]  |
    29  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |  [53,36,36,36,117]  |                 0  |   36  |                0  |  [190,23,128,37,42]  |
    31  |                         int i = 0;  |         |    0  |      0  |  0  |  [53,36,36,36,117]  |                 0  |   36  |                0  |  [190,23,128,37,42]  |
    37  |         chunk = arrayRead(str, i);  |         |    0  |    190  |  0  |  [53,36,36,36,117]  |                 0  |   36  |                0  |  [190,23,128,37,42]  |
    44  |  isSeparatorChunk = arrayRead(i...  |         |    0  |    190  |  0  |  [53,36,36,36,117]  |                53  |   36  |                0  |  [190,23,128,37,42]  |
    56  |                     R = R + chunk;  |    190  |  190  |    190  |  0  |  [53,36,36,36,117]  |                53  |   36  |                0  |  [190,23,128,37,42]  |
    60  |                         i = i + 1;  |         |  190  |    190  |  1  |  [53,36,36,36,117]  |                53  |   36  |                0  |  [190,23,128,37,42]  |
    61  |              resetPlaceHolder_1();  |         |  190  |    190  |  1  |  [53,36,36,36,117]  |                53  |   36  |                0  |  [190,23,128,37,42]  |
    67  |         chunk = arrayRead(str, i);  |         |  190  |     23  |  1  |  [53,36,36,36,117]  |                53  |   36  |                0  |  [190,23,128,37,42]  |
    74  |  isSeparatorChunk = arrayRead(i...  |         |  190  |     23  |  1  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
    86  |                     R = R + chunk;  |     23  |  213  |     23  |  1  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
    90  |                         i = i + 1;  |         |  213  |     23  |  2  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
    91  |              resetPlaceHolder_1();  |         |  213  |     23  |  2  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
    97  |         chunk = arrayRead(str, i);  |         |  213  |    128  |  2  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   104  |  isSeparatorChunk = arrayRead(i...  |         |  213  |    128  |  2  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   116  |                     R = R + chunk;  |    128  |  341  |    128  |  2  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   120  |                         i = i + 1;  |         |  341  |    128  |  3  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   121  |              resetPlaceHolder_1();  |         |  341  |    128  |  3  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   127  |         chunk = arrayRead(str, i);  |         |  341  |     37  |  3  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   134  |  isSeparatorChunk = arrayRead(i...  |         |  341  |     37  |  3  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   146  |                     R = R + chunk;  |     37  |  378  |     37  |  3  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   150  |                         i = i + 1;  |         |  378  |     37  |  4  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   151  |              resetPlaceHolder_1();  |         |  378  |     37  |  4  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   157  |         chunk = arrayRead(str, i);  |         |  378  |     42  |  4  |  [53,36,36,36,117]  |                36  |   36  |                0  |  [190,23,128,37,42]  |
   164  |  isSeparatorChunk = arrayRead(i...  |         |  378  |     42  |  4  |  [53,36,36,36,117]  |               117  |   36  |                0  |  [190,23,128,37,42]  |
   177  |  numberOfStrings = numberOfStri...  |         |  378  |     42  |  4  |  [53,36,36,36,117]  |               117  |   36  |                1  |  [190,23,128,37,42]  |
   181  |                         i = i + 1;  |         |  378  |     42  |  5  |  [53,36,36,36,117]  |               117  |   36  |                1  |  [190,23,128,37,42]  |
   182  |              resetPlaceHolder_1();  |         |  378  |     42  |  5  |  [53,36,36,36,117]  |               117  |   36  |                1  |  [190,23,128,37,42]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 86, 116, 146]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 86, 116, 146]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 86, 116, 146]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 86, 116, 146]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56} because there exists a longer and subsuming segment {56,146} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {86} because there exists a longer and subsuming segment {86,146} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116} because there exists a longer and subsuming segment {56,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {146} because there exists a longer and subsuming segment {56,146} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 86, 116, 146]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 86, 116, 146]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 86, 116, 146]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,146} because there exists a longer and subsuming segment {56,86,146} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,116} because there exists a longer and subsuming segment {56,86,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116,146} because there exists a longer and subsuming segment {86,116,146} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {86,146} because there exists a longer and subsuming segment {86,116,146} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {56,86} because there exists a longer and subsuming segment {56,86,146} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {86,116} because there exists a longer and subsuming segment {86,116,146} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 86, 116, 146]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 86, 116, 146]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {56,86,116,146}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    56  |         R = R + chunk;  |    190  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    86  |         R = R + chunk;  |     23  |                         0  |
    91  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |    128  |                         0  |
   121  |  resetPlaceHolder_1();  |         |                            |
   146  |         R = R + chunk;  |     37  |                         0  |
   151  |  resetPlaceHolder_1();  |         |                            |
   182  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
If we are printing a decomposed use, then we have failed to decompose `R = R + chunk;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java.actual	2023-01-10 17:42:11.528495959 -0700
@@ -1,7 +1,7 @@
 abstract class SplitByWholeSeparatorWorker {
   void execute(int str, int isSeparator, int max) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;
@@ -35,7 +35,7 @@
       }
       if (!((numberOfStrings < max)))
       {
-        D0 = D0 + chunk;
+        R = R + chunk;
         i = i + 1;
         continue;
       }
@@ -48,7 +48,7 @@
         isSeparatorChunk = temporaryIsSeparator - lastIndexOfIsSeparator;
         lastIndexOfIsSeparator = temporaryIsSeparator;
       }
-      if (!((isSeparatorChunk < 502)) && !((isSeparatorChunk == 502)))
+      if (!((isSeparatorChunk < 102)) && !((isSeparatorChunk == 102)))
       {
         numberOfStrings = numberOfStrings + 1;
       }


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m5.375s
user	0m9.980s
sys	0m1.605s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    int temporaryIsSeparator = 0;
    int lastIndexOfIsSeparator = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || (isSeparator < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      {
        temporaryIsSeparator = ndInt2(lastIndexOfIsSeparator, isSeparator);
        isSeparatorChunk = temporaryIsSeparator - lastIndexOfIsSeparator;
        lastIndexOfIsSeparator = temporaryIsSeparator;
      }
      if (!((isSeparatorChunk < 102)) && !((isSeparatorChunk == 102)))
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    int temporaryIsSeparator = 0;
    int lastIndexOfIsSeparator = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || (isSeparator < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      {
        temporaryIsSeparator = ndInt2(lastIndexOfIsSeparator, isSeparator);
        isSeparatorChunk = temporaryIsSeparator - lastIndexOfIsSeparator;
        lastIndexOfIsSeparator = temporaryIsSeparator;
      }
      if (!((isSeparatorChunk < 102)) && !((isSeparatorChunk == 102)))
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `91.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1742-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1742-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m33.268s
user	2m24.612s
sys	0m6.930s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz7861798775487067823/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7861798775487067823/bin -o /tmp/qfuzz7861798775487067823/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7861798775487067823/bin
Found file /tmp/qfuzz7861798775487067823/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz7861798775487067823/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7861798775487067823/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7861798775487067823/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7861798775487067823/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7861798775487067823/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 46, exec speed = 126502 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m46 to 46 bits (average: 46.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7861798775487067823/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [47.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.639s
user	0m14.004s
sys	0m0.980s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.987s
user	0m3.666s
sys	0m0.227s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 502)) && !((choice == 502)))
      {
        if (match)
        {
          list = list + (i - start);
          D0 = D0 + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 502)) && !((choice == 502)))
      {
        if (match)
        {
          list = list + (i - start);
          D0 = D0 + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `64.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1744-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1744-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m6.127s
user	1m37.703s
sys	0m3.880s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz8228328598010720381/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8228328598010720381/bin -o /tmp/qfuzz8228328598010720381/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8228328598010720381/bin
Found file /tmp/qfuzz8228328598010720381/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz8228328598010720381/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8228328598010720381/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8228328598010720381/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8228328598010720381/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8228328598010720381/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 41, exec speed = 112307 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [57.00]
2; /tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta; 2; 19.00; [25.00,44.00]
4; /tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
/tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 187, 110, 71, 153, 67, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8228328598010720381/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 102, 61, 186, 173, 186, 186, 186, 186, 50, 37, 93, 119, 83, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 110, 187, false, [71,153,67,33,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 102, 61, false, [173,186,186,186,186]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m36.154s
user	0m15.656s
sys	0m1.001s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, 110, 187, false, [71,153,67,33,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(2, 102, 61, false, [173,186,186,186,186])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 127):
                                                                                                                                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |       choices        |  i  |  lastMatch  |  list  |  match  |  max  |  preserveAllTokens  |  separatorChars  |  sizePlus1  |  start  |  str  |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |  0  |          |  [71,153,67,33,153]  |     |             |        |         |  187  |              false  |             110  |             |         |    2  |
    26  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [71,153,67,33,153]  |     |             |        |         |  187  |              false  |             110  |             |         |    2  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [71,153,67,33,153]  |     |             |        |         |  187  |              false  |             110  |             |         |    2  |
    29  |                      int list = 0;  |         |  0  |          |  [71,153,67,33,153]  |     |             |     0  |         |  187  |              false  |             110  |             |         |    2  |
    31  |                 int sizePlus1 = 1;  |         |  0  |          |  [71,153,67,33,153]  |     |             |     0  |         |  187  |              false  |             110  |          1  |         |    2  |
    33  |                         int i = 0;  |         |  0  |          |  [71,153,67,33,153]  |  0  |             |     0  |         |  187  |              false  |             110  |          1  |         |    2  |
    35  |                     int start = 0;  |         |  0  |          |  [71,153,67,33,153]  |  0  |             |     0  |         |  187  |              false  |             110  |          1  |      0  |    2  |
    37  |                 int match = false;  |         |  0  |          |  [71,153,67,33,153]  |  0  |             |     0  |  false  |  187  |              false  |             110  |          1  |      0  |    2  |
    39  |             int lastMatch = false;  |         |  0  |          |  [71,153,67,33,153]  |  0  |      false  |     0  |  false  |  187  |              false  |             110  |          1  |      0  |    2  |
    41  |                    int choice = 0;  |         |  0  |       0  |  [71,153,67,33,153]  |  0  |      false  |     0  |  false  |  187  |              false  |             110  |          1  |      0  |    2  |
    53  |  choice = arrayRead(choices, i)...  |         |  0  |      71  |  [71,153,67,33,153]  |  0  |      false  |     0  |  false  |  187  |              false  |             110  |          1  |      0  |    2  |
    64  |                 lastMatch = false;  |         |  0  |      71  |  [71,153,67,33,153]  |  0  |      false  |     0  |  false  |  187  |              false  |             110  |          1  |      0  |    2  |
    66  |                      match = true;  |         |  0  |      71  |  [71,153,67,33,153]  |  0  |      false  |     0  |   true  |  187  |              false  |             110  |          1  |      0  |    2  |
    70  |                         i = i + 1;  |         |  0  |      71  |  [71,153,67,33,153]  |  1  |      false  |     0  |   true  |  187  |              false  |             110  |          1  |      0  |    2  |
    71  |              resetPlaceHolder_3();  |         |  0  |      71  |  [71,153,67,33,153]  |  1  |      false  |     0  |   true  |  187  |              false  |             110  |          1  |      0  |    2  |
    77  |  choice = arrayRead(choices, i)...  |         |  0  |     153  |  [71,153,67,33,153]  |  1  |      false  |     0  |   true  |  187  |              false  |             110  |          1  |      0  |    2  |
    91  |                  lastMatch = true;  |         |  0  |     153  |  [71,153,67,33,153]  |  1  |       true  |     0  |   true  |  187  |              false  |             110  |          1  |      0  |    2  |
    98  |         sizePlus1 = sizePlus1 + 1;  |         |  0  |     153  |  [71,153,67,33,153]  |  1  |       true  |     0  |   true  |  187  |              false  |             110  |          2  |      0  |    2  |
   104  |         list = list + (i - start);  |         |  0  |     153  |  [71,153,67,33,153]  |  1  |       true  |     1  |   true  |  187  |              false  |             110  |          2  |      0  |    2  |
   109  |               R = R + (i - start);  |      1  |  1  |     153  |  [71,153,67,33,153]  |  1  |       true  |     1  |   true  |  187  |              false  |             110  |          2  |      0  |    2  |
   111  |                     match = false;  |         |  1  |     153  |  [71,153,67,33,153]  |  1  |       true  |     1  |  false  |  187  |              false  |             110  |          2  |      0  |    2  |
   115  |                         i = i + 1;  |         |  1  |     153  |  [71,153,67,33,153]  |  2  |       true  |     1  |  false  |  187  |              false  |             110  |          2  |      0  |    2  |
   117  |                         start = i;  |         |  1  |     153  |  [71,153,67,33,153]  |  2  |       true  |     1  |  false  |  187  |              false  |             110  |          2  |      2  |    2  |
   118  |                          continue;  |         |  1  |     153  |  [71,153,67,33,153]  |  2  |       true  |     1  |  false  |  187  |              false  |             110  |          2  |      2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [109]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [109]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [109]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [109]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    71  |  resetPlaceHolder_3();  |         |                            |
   109  |   R = R + (i - start);  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_3(); -> // reset R0
use R (i - start) -> R0 = R0 + (i - start);
If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java.actual	2023-01-10 17:46:09.191040259 -0700
@@ -1,17 +1,14 @@
 abstract class SplitWorker2 {
   void execute(int str, int separatorChars, int max, boolean preserveAllTokens, int choices) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
-    int C1 = -1;
     int D0 = 0;
     int D0p = 0;
-    int D1 = 0;
-    int D1p = 0;
     int temporaryChoices = 0;
     int lastIndexOfChoices = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * str) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * str) + 8)));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < str) || (((0 + (D0p * C0)) + (D1p * C1)) == str));
+    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
+    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
     if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || (choices < str))
     {
       return;
@@ -39,7 +36,7 @@
           choice = temporaryChoices - lastIndexOfChoices;
           lastIndexOfChoices = temporaryChoices;
         }
-        if (!((choice < 502)) && !((choice == 502)))
+        if (!((choice < 102)) && !((choice == 102)))
         {
           if (match || preserveAllTokens)
           {
@@ -87,7 +84,7 @@
             choice = temporaryChoices - lastIndexOfChoices;
             lastIndexOfChoices = temporaryChoices;
           }
-          if (!((choice < 502)) && !((choice == 502)))
+          if (!((choice < 102)) && !((choice == 102)))
           {
             if (match || preserveAllTokens)
             {
@@ -133,7 +130,7 @@
             choice = temporaryChoices - lastIndexOfChoices;
             lastIndexOfChoices = temporaryChoices;
           }
-          if (!((choice < 502)) && !((choice == 502)))
+          if (!((choice < 102)) && !((choice == 102)))
           {
             if (match || preserveAllTokens)
             {
@@ -149,14 +146,7 @@
               }
               sizePlus1 = sizePlus1 + 1;
               list = list + (i - start);
-              if ((i < 0) || (i == 0))
-              {
-                D1 = D1 + (i - start);
-              }
-              else
-              {
-                D0 = D0 + (i - start);
-              }
+              D0 = D0 + (i - start);
               match = false;
             }
             else


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m4.438s
user	0m9.274s
sys	0m1.103s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        {
          temporaryChoices = ndInt2(lastIndexOfChoices, choices);
          choice = temporaryChoices - lastIndexOfChoices;
          lastIndexOfChoices = temporaryChoices;
        }
        if (!((choice < 102)) && !((choice == 102)))
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              D0 = D0 + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int choices, int str, int max, int separatorChars, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        {
          temporaryChoices = ndInt2(lastIndexOfChoices, choices);
          choice = temporaryChoices - lastIndexOfChoices;
          lastIndexOfChoices = temporaryChoices;
        }
        if (!((choice < 102)) && !((choice == 102)))
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              D0 = D0 + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8223628889091931686.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7966926161585968045.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8370765433431265335.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `60.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1746-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1746-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m2.198s
user	3m3.452s
sys	0m1.236s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz3750203212224819871/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3750203212224819871/bin -o /tmp/qfuzz3750203212224819871/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3750203212224819871/bin
Found file /tmp/qfuzz3750203212224819871/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz3750203212224819871/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3750203212224819871/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3750203212224819871/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3750203212224819871/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3750203212224819871/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 3 runnable tasks (utilization: 75%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 10, exec speed = 124103 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 31.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 32.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 33.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 34.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 35.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 36.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 37.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 38.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 39.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 40.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 41.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 42.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 43.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 44.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 45.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 46.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 47.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 48.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 49.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 50.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 51.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 52.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 53.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 54.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 55.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 56.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 57.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 58.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 59.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 60.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 61.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 62.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 63.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 64.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 65.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 66.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 67.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 68.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 69.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 70.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 71.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 72.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 73.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 74.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 75.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 76.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 77.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 78.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 79.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 80.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 81.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 82.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 83.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 84.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 85.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 86.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 87.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 88.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 89.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 90.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 91.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 92.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 93.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 94.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 95.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 96.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 97.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 98.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 99.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 100.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 101.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 102.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 103.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 104.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 105.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 106.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 107.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 108.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 109.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 110.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 111.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 112.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 113.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 114.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 115.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 116.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 117.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 118.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 119.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 120.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 121.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 122.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 123.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 124.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 125.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 126.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 127.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 128.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 129.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 130.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 131.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 132.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 133.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 134.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 135.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 136.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 137.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 138.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 139.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 140.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 141.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 142.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 143.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 144.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 145.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 146.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 147.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 148.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 149.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 150.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 151.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 152.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 153.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 154.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 155.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 156.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 157.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 158.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 159.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 160.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 161.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 162.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 163.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 164.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 165.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 166.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 167.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 168.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 169.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 170.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 171.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 172.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 173.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 174.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 175.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 176.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 177.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 178.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 179.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 180.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 181.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 182.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 183.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 184.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 185.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 186.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 187.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 188.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 189.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 190.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 191.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 192.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 193.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 194.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 195.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 196.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 197.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 198.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 199.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 200.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 201.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 202.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 203.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 204.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 205.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 206.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 207.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 208.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 209.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 210.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 211.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 212.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 213.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 214.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 215.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 216.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 217.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 218.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 219.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 220.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 221.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 222.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 223.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 224.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 225.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 226.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 227.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 228.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 229.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 230.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 231.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 232.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 233.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 234.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 235.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 236.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 237.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 238.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 239.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 240.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 241.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 242.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 243.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 244.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 245.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 246.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 247.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 248.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 249.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 250.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 251.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 252.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 253.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 254.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 255.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 256.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 257.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 258.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 259.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 260.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 261.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 262.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 263.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 264.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 265.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 266.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 267.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 268.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 269.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 270.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 271.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 272.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 273.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 274.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 275.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 276.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 277.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 278.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 279.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 280.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 281.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 282.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 283.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 284.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 285.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 286.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 287.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 288.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 289.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 290.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 291.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 292.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 293.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 294.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 295.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 296.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 297.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 298.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 299.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 300.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 301.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 302.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 303.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 304.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 305.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 306.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 307.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 308.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 309.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 310.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 311.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 312.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 313.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 314.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 315.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 316.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 317.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 318.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 319.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 320.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 321.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 322.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 323.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 324.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 325.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 326.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 327.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 328.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 329.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 330.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 331.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 332.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 333.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 334.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 335.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 336.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 337.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 338.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 339.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 340.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 341.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 342.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 343.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 344.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 345.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 346.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 347.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 348.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 349.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 350.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 351.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 352.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 353.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 354.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 355.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 356.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 357.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 358.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 359.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 360.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 361.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 362.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 363.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 364.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 365.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 366.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 367.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 368.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 369.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 370.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 371.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 372.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 373.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 374.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 375.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 376.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 377.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 378.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 379.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 380.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 381.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 382.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 383.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 384.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 385.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 386.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 387.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 388.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 389.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 390.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 391.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 392.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 393.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 394.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 395.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 396.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 397.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 398.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 399.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 400.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 401.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 402.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 403.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 404.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 405.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 406.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 407.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 408.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 409.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 410.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 411.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 412.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 413.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 414.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 415.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 416.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 417.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 418.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 419.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 420.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 421.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 422.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 423.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 424.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 425.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 426.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 427.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 428.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 429.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 430.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 431.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 432.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 433.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 434.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 435.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 436.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 437.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 438.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 439.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 440.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 441.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 442.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 443.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 444.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 445.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 446.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 447.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 448.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 449.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 450.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 451.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 452.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 453.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 454.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 455.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 456.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 457.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 458.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 459.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 460.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 461.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 462.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 463.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 464.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 465.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 466.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 467.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 468.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 469.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 470.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 471.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 472.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 473.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 474.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 475.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 476.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 477.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 478.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 479.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 480.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 481.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 482.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 483.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 484.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 485.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 486.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 487.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 488.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 489.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 490.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 491.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 492.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 493.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 494.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 495.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 496.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 497.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 498.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 499.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 500.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 501.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 502.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 503.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 504.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 505.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 506.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 507.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 508.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 509.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 510.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 511.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 512.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 513.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 514.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 515.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 516.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 517.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 518.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 519.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 520.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 521.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 522.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 523.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 524.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 525.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 526.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 527.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 528.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 529.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 530.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 531.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 532.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 533.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 534.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 535.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 536.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 537.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 538.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 539.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 540.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 541.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 542.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 543.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 544.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 545.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 546.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 547.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 548.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 549.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 550.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 551.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 552.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 553.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 554.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 555.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 556.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 557.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 558.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 559.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 560.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 561.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 562.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 563.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 564.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 565.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 566.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 567.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 568.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 569.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 570.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 571.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 572.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 573.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 574.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 575.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 576.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 577.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 578.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 579.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 580.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 581.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 582.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 583.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 584.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 585.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 586.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 587.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 588.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 589.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 590.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 591.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 592.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 593.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 594.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 595.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 596.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 597.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 598.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 599.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 600.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 601.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 602.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 603.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 604.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 605.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 606.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 607.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 608.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 609.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 610.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 611.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 612.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 613.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 614.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 615.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 616.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 617.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 618.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 619.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 620.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 621.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 622.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 623.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 624.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 625.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 626.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 627.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 628.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 629.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 630.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 631.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 632.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 633.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 634.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 635.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 636.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 637.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 638.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 639.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 640.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 641.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 642.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 643.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 644.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 645.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 646.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 647.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 648.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 649.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 650.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 651.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 652.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 653.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 654.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 655.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 656.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 657.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 658.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 659.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 660.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 661.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 662.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 663.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 664.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 665.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 666.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 667.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 668.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 669.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 670.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 671.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 672.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 673.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 674.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 675.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 676.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 677.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 678.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 679.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 680.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 681.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 682.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 683.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 684.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 685.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 686.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 687.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 688.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 689.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 690.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 691.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 692.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 693.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 694.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 695.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 696.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 697.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 698.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 699.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 700.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 701.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 702.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 703.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 704.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 705.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 706.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 707.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 708.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 709.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 710.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 711.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 712.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 713.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 714.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 715.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 716.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 717.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 718.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 719.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 720.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 721.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 722.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 723.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 724.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 725.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 726.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 727.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 728.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 729.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 730.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 731.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 732.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 733.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 734.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 735.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 736.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 737.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 738.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 739.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 740.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 741.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 742.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 743.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 744.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 745.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 746.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 747.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 748.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 749.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 750.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 751.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 752.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 753.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 754.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 755.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 756.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 757.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 758.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 759.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 760.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 761.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 762.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 763.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 764.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 765.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 766.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 767.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 768.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 769.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 770.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 771.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 772.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 773.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 774.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 775.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 776.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 777.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 778.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 779.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 780.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 781.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 782.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 783.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 784.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 785.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 786.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 787.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 788.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 789.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 790.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 791.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 792.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 793.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 794.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 795.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 796.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 797.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 798.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 799.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 800.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 801.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 802.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 803.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 804.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 805.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 806.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 807.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 808.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 809.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 810.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 811.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 812.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 813.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 814.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 815.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 816.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 817.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 818.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 819.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 820.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 821.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 822.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 823.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 824.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 825.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 826.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 827.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 828.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 829.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 830.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 831.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 832.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 833.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 834.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 835.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 836.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 837.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 838.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 839.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 840.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 841.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 842.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 843.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 844.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 845.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 846.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 847.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 848.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 849.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 850.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 851.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 852.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 853.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 854.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 855.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 856.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 857.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 858.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 859.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 860.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 861.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 862.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 863.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 864.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 865.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 866.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 867.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 868.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 869.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 870.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 871.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 872.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 873.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 874.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 875.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 876.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 877.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 878.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 879.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 880.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 881.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 882.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 883.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 884.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 885.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 886.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 887.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 888.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 889.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 890.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 891.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 892.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 893.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 894.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 895.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 896.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 897.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 898.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 899.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 900.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 901.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 902.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 903.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 904.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 905.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 906.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 907.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 908.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 909.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 910.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 911.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 912.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 913.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 914.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 915.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 916.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 917.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 918.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 919.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 920.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 921.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 922.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 923.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 924.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 925.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 926.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 927.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 928.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 929.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 930.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 931.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 932.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 933.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 934.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 935.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 936.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 937.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 938.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 939.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 940.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 941.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 942.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 943.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 944.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 945.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 946.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 947.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 948.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 949.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 950.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 951.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 952.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 953.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 954.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 955.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 956.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 957.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 958.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 959.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 960.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 961.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 962.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 963.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 964.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 965.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 966.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 967.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 968.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 969.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 970.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 971.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 972.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 973.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 974.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 975.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 976.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 977.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 978.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 979.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 980.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 981.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 982.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 983.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 984.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 985.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 986.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 987.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 988.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 989.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 990.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 991.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 992.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 993.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 994.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 995.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 996.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 997.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 998.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 999.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1000.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1001.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1002.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1003.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1004.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1005.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1006.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1007.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1008.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1009.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1010.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1011.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1012.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1013.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1014.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1015.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1016.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1017.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1018.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1019.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1020.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1021.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1022.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1023.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1024.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1025.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1026.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1027.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1028.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1029.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1030.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1031.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1032.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1033.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1034.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1035.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1036.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1037.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1038.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1039.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1040.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1041.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1042.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1043.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1044.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1045.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1046.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1047.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1048.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1049.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1050.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1051.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1052.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1053.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1054.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1055.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1056.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1057.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1058.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1059.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1060.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1061.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1062.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1063.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1064.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1065.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1066.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1067.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1068.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1069.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1070.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1071.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1072.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1073.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1074.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1075.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1076.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1077.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1078.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1079.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1080.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1081.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1082.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1083.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1084.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1085.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1086.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1087.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1088.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1089.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1090.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1091.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1092.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1093.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1094.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1095.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1096.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1097.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1098.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1099.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1100.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1101.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1102.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1103.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1104.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1105.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1106.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1107.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1108.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1109.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1110.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1111.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1112.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1113.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1114.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1115.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1116.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1117.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1118.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1119.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1120.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1121.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1122.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1123.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1124.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1125.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1126.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1127.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1128.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1129.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1130.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1131.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1132.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1133.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1134.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1135.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1136.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1137.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1138.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1139.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1140.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1141.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1142.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1143.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1144.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1145.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1146.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1147.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1148.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1149.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1150.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1151.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1152.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1153.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1154.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1155.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1156.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1157.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1158.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1159.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1160.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1161.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1162.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1163.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1164.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1165.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1166.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1167.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1168.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1169.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1170.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1171.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1172.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1173.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1174.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1175.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1176.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1177.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1178.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1179.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1180.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1181.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1182.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1183.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1184.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1185.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1186.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1187.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1188.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1189.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1190.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1191.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1192.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1193.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1194.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1195.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1196.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1197.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1198.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1199.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1200.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1201.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1202.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1203.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1204.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1205.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1206.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1207.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1208.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1209.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1210.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1211.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1212.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1213.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1214.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1215.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1216.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1217.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1218.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1219.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1220.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1221.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1222.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1223.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1224.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1225.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1226.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1227.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1228.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1229.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1230.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1231.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1232.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1233.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1234.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1235.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1236.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1237.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1238.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1239.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1240.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1241.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1242.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1243.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1244.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1245.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1246.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1247.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1248.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1249.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1250.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1251.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1252.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1253.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1254.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1255.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1256.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1257.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1258.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1259.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1260.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1261.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1262.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1263.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1264.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1265.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1266.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1267.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1268.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1269.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1270.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1271.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1272.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1273.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1274.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1275.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1276.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1277.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1278.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1279.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1280.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1281.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1282.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1283.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1284.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1285.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1286.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1287.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1288.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1289.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1290.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1291.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1292.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1293.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1294.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1295.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1296.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1297.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1298.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1299.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1300.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1301.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1302.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1303.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1304.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1305.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1306.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1307.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1308.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1309.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1310.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1311.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1312.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1313.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1314.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1315.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1316.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1317.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1318.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1319.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1320.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1321.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1322.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1323.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1324.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1325.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1326.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1327.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1328.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1329.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1330.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1331.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1332.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1333.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1334.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1335.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1336.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1337.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1338.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1339.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1340.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1341.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1342.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1343.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1344.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1345.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1346.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1347.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1348.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1349.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1350.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1351.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1352.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1353.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1354.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1355.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1356.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1357.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1358.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1359.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1360.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1361.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1362.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1363.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1364.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1365.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1366.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1367.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1368.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1369.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1370.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1371.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1372.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1373.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1374.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1375.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1376.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1377.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1378.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1379.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1380.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1381.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1382.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1383.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1384.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1385.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1386.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1387.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1388.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1389.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1390.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1391.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1392.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1393.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1394.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1395.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1396.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1397.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1398.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1399.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1400.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1401.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1402.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1403.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1404.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1405.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1406.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1407.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1408.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1409.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1410.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1411.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1412.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1413.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1414.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1415.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1416.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1417.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1418.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1419.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1420.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1421.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1422.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1423.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1424.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1425.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1426.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1427.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1428.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1429.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1430.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1431.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1432.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1433.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1434.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1435.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1436.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1437.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1438.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1439.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1440.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1441.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1442.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1443.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1444.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1445.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1446.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1447.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1448.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1449.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1450.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1451.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1452.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1453.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1454.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1455.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1456.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1457.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1458.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1459.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1460.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1461.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1462.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1463.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1464.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1465.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1466.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1467.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1468.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1469.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1470.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1471.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1472.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1473.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1474.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1475.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1476.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1477.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1478.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1479.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1480.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1481.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1482.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1483.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1484.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1485.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1486.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1487.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1488.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1489.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1490.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1491.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1492.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1493.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1494.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1495.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1496.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1497.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1498.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1499.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1500.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1501.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1502.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1503.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1504.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1505.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1506.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1507.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1508.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1509.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1510.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1511.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1512.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1513.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1514.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1515.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1516.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1517.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1518.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1519.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1520.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1521.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1522.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1523.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1524.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1525.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1526.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1527.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1528.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1529.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1530.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1531.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1532.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1533.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1534.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1535.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1536.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1537.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1538.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1539.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1540.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1541.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1542.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1543.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1544.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1545.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1546.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1547.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1548.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1549.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1550.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1551.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1552.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1553.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1554.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1555.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1556.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1557.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1558.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1559.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1560.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1561.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1562.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1563.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1564.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1565.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1566.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1567.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1568.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1569.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1570.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1571.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1572.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1573.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1574.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1575.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1576.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1577.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1578.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1579.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1580.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1581.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1582.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1583.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1584.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1585.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1586.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1587.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1588.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1589.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1590.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1591.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1592.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1593.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1594.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1595.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1596.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1597.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1598.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1599.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1600.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1601.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1602.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1603.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1604.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1605.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1606.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1607.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1608.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1609.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1610.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1611.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1612.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1613.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1614.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1615.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1616.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1617.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1618.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1619.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1620.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1621.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1622.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1623.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1624.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1625.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1626.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1627.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1628.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1629.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1630.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1631.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1632.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1633.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1634.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1635.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1636.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1637.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1638.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1639.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1640.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1641.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1642.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1643.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1644.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1645.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1646.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1647.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1648.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1649.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1650.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1651.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1652.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1653.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1654.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1655.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1656.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1657.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1658.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1659.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1660.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1661.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1662.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1663.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1664.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1665.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1666.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1667.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1668.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1669.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1670.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1671.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1672.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1673.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1674.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1675.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1676.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1677.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1678.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1679.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1680.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1681.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1682.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1683.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1684.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1685.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1686.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1687.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1688.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1689.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1690.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1691.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1692.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1693.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1694.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1695.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1696.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1697.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1698.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1699.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1700.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1701.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1702.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1703.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1704.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1705.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1706.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1707.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1708.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1709.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1710.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1711.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1712.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1713.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1714.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1715.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1716.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1717.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1718.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1719.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1720.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1721.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1722.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1723.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1724.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1725.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1726.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1727.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1728.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1729.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1730.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1731.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1732.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1733.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1734.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1735.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1736.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1737.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1738.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1739.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1740.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1741.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1742.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1743.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1744.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1745.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1746.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1747.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1748.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1749.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1750.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1751.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1752.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1753.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1754.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1755.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1756.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1757.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1758.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1759.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1760.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1761.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1762.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1763.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1764.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1765.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1766.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1767.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1768.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1769.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1770.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1771.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1772.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1773.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1774.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1775.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1776.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1777.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1778.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1779.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1780.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1781.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1782.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1783.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1784.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1785.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1786.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1787.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1788.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1789.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1790.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1791.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1792.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1793.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1794.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1795.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1796.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1797.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1798.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1799.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1800.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1801.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1802.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1803.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1804.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1805.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1806.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1807.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1808.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1809.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1810.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1811.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1812.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1813.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1814.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1815.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1816.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1817.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1818.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1819.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1820.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1821.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1822.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1823.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1824.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1825.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1826.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1827.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1828.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1829.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1830.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1831.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1832.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1833.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1834.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1835.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1836.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1837.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1838.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1839.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1840.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1841.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1842.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1843.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1844.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1845.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1846.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1847.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1848.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1849.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1850.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1851.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1852.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1853.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1854.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1855.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1856.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1857.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1858.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1859.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1860.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1861.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1862.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1863.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1864.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1865.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1866.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1867.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1868.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1869.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1870.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1871.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1872.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1873.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1874.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1875.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1876.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1877.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1878.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1879.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1880.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1881.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1882.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1883.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1884.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1885.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1886.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1887.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1888.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1889.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1890.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1891.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1892.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1893.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1894.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1895.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1896.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1897.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1898.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1899.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1900.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1901.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1902.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1903.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1904.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1905.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1906.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1907.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1908.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1909.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1910.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1911.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1912.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1913.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1914.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1915.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1916.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1917.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1918.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1919.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1920.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1921.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1922.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1923.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1924.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1925.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1926.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1927.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1928.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1929.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1930.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1931.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1932.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1933.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1934.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1935.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1936.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1937.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1938.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1939.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1940.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1941.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1942.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1943.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1944.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1945.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1946.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1947.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1948.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1949.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1950.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1951.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1952.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1953.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1954.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1955.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1956.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1957.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1958.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1959.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1960.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1961.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1962.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1963.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1964.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1965.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1966.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1967.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1968.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1969.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1970.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1971.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1972.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1973.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1974.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1975.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1976.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1977.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1978.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1979.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1980.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1981.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1982.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1983.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1984.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1985.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1986.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1987.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1988.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1989.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1990.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1991.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1992.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1993.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1994.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1995.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1996.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1997.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1998.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1999.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2000.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2001.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2002.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2003.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2004.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2005.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2006.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2007.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2008.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2009.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2010.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2011.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2012.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2013.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2014.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2015.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2016.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2017.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2018.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2019.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2020.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2021.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2022.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2023.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2024.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2025.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2026.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2027.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2028.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2029.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2030.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2031.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2032.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2033.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2034.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2035.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2036.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2037.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2038.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2039.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2040.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3750203212224819871/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.791s
user	0m6.976s
sys	0m2.547s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.984s
user	0m3.554s
sys	0m0.180s

Generated the expected decomposition
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 0) || (str == 0)) || ((open < 0) || (open == 0))) || ((close < 0) || (close == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int pos = 0;
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      D0 = D0 + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int open, int str, int close)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 0) || (str == 0)) || ((open < 0) || (open == 0))) || ((close < 0) || (close == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int pos = 0;
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      D0 = D0 + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `26.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1747-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-1747-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m28.155s
user	0m43.810s
sys	0m5.775s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz1259480441253440495/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1259480441253440495/bin -o /tmp/qfuzz1259480441253440495/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1259480441253440495/bin
Found file /tmp/qfuzz1259480441253440495/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz1259480441253440495/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1259480441253440495/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1259480441253440495/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1259480441253440495/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1259480441253440495/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 45, exec speed = 119628 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m45 to 45 bits (average: 45.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 68.00; [84.00,152.00,397.00]
2; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 131.00; [96.00,227.00]
4; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 3; 68.00; [84.00,152.00,341.00]
6; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 3; 160.00; [66.00,226.00,395.00]
7; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 3; 21.00; [116.00,376.00,397.00]
11; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 3; 81.00; [124.00,205.00,408.00]
12; /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 3; 84.00; [152.00,236.00,397.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(186, 87, 24, 103, 104, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(102, 63, 39, 86, 39, 161)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(159, 101, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 179, 49, 49, 49, 49, 49, 5, 132, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 12, 195, 132, 53, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1259480441253440495/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 142, 109, 153, 67, 199)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [186,87,24,103,104], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [102,63,39,86,39], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [159,101,33,153,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,179,49,49], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [91,12,195,132,53], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,142,109,153,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.755s
user	0m14.083s
sys	0m0.972s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([186,87,24,103,104], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([102,63,39,86,39], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([159,101,33,153,67], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,110,179,49,49], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([91,12,195,132,53], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List([187,142,109,153,67], 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 86):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |       template        |
--------------------------------------------------------------------------------------------------------------------------------
    17  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [186,87,24,103,104]  |
    18  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [186,87,24,103,104]  |
    19  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [186,87,24,103,104]  |
    21  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [186,87,24,103,104]  |
    23  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [186,87,24,103,104]  |
    25  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [186,87,24,103,104]  |
    28  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    186  |  0  |          0  |  [186,87,24,103,104]  |
    31  |                     R = R + chunk;  |    186  |  186  |     2  |    186  |  0  |          0  |  [186,87,24,103,104]  |
    35  |                         i = i + 1;  |         |  186  |     2  |    186  |  1  |          0  |  [186,87,24,103,104]  |
    43  |  separator = arrayRead(template...  |         |  186  |     2  |    186  |  1  |         87  |  [186,87,24,103,104]  |
    48  |  chunk = arrayRead(template, (i...  |         |  186  |     2  |     24  |  1  |         87  |  [186,87,24,103,104]  |
    51  |                     R = R + chunk;  |     24  |  210  |     2  |     24  |  1  |         87  |  [186,87,24,103,104]  |
    55  |                         i = i + 2;  |         |  210  |     2  |     24  |  3  |         87  |  [186,87,24,103,104]  |
    56  |              resetPlaceHolder_1();  |         |  210  |     2  |     24  |  3  |         87  |  [186,87,24,103,104]  |
    64  |  separator = arrayRead(template...  |         |  210  |     2  |     24  |  3  |        103  |  [186,87,24,103,104]  |
    69  |  chunk = arrayRead(template, (i...  |         |  210  |     2  |    104  |  3  |        103  |  [186,87,24,103,104]  |
    72  |                     R = R + chunk;  |    104  |  314  |     2  |    104  |  3  |        103  |  [186,87,24,103,104]  |
    76  |                         i = i + 2;  |         |  314  |     2  |    104  |  5  |        103  |  [186,87,24,103,104]  |
    77  |              resetPlaceHolder_1();  |         |  314  |     2  |    104  |  5  |        103  |  [186,87,24,103,104]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {51} because there exists a longer and subsuming segment {31,51} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {72} because there exists a longer and subsuming segment {31,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31} because there exists a longer and subsuming segment {31,72} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31,72} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31,51} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {51,72} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31,51,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    31  |         R = R + chunk;  |    186  |                         0  |
    51  |         R = R + chunk;  |     24  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    72  |         R = R + chunk;  |    104  |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java.actual	2023-01-10 17:48:57.433046127 -0700
@@ -1,17 +1,14 @@
 abstract class LenientFormat {
   void execute(int template, int args) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
-    int C1 = -1;
     int D0 = 0;
     int D0p = 0;
-    int D1 = 0;
-    int D1p = 0;
     int temporaryTemplate = 0;
     int lastIndexOfTemplate = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * template) + (8 * args)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * template) + (8 * args)) + 8)));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((template + args) + 2) + (2 * args))) || (((0 + (D0p * C0)) + (D1p * C1)) == (((template + args) + 2) + (2 * args))));
+    lessPreciseBound(((0 + (D0p * C0)) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0p * C0)) == (((8 * template) + (8 * args)) + 8)));
+    mostPreciseBound(((0 + (D0p * C0)) < (((template + args) + 2) + (2 * args))) || ((0 + (D0p * C0)) == (((template + args) + 2) + (2 * args))));
     if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
     {
       return;
@@ -31,7 +28,7 @@
       chunk = temporaryTemplate - lastIndexOfTemplate;
       lastIndexOfTemplate = temporaryTemplate;
     }
-    D1 = D1 + chunk;
+    D0 = D0 + chunk;
     i = i + 1;
     while ((i + 1) < template)
     {
@@ -45,22 +42,21 @@
         chunk = temporaryTemplate - lastIndexOfTemplate;
         lastIndexOfTemplate = temporaryTemplate;
       }
-      D1 = D1 + chunk;
+      D0 = D0 + chunk;
       i = i + 2;
-      // reset R1
       // reset R0
     }
     if (i < args)
     {
-      D0 = D0 + 1;
-      D0 = D0 + 1;
+      R = R + 1;
+      R = R + 1;
       i = i + 1;
       while (i < args)
       {
-        D0 = D0 + 1;
-        D0 = D0 + 1;
+        R = R + 1;
+        R = R + 1;
         i = i + 1;
-        // reset R0
+        // resetPlaceHolder_2();
       }
     }
     else


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m4.325s
user	0m9.723s
sys	0m1.145s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryTemplate = 0;
    int lastIndexOfTemplate = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0p * C0)) == (((8 * template) + (8 * args)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (((template + args) + 2) + (2 * args))) || ((0 + (D0p * C0)) == (((template + args) + 2) + (2 * args))));
    if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int separator = 0;
    int i = 0;
    {
      temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
      chunk = temporaryTemplate - lastIndexOfTemplate;
      lastIndexOfTemplate = temporaryTemplate;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < template)
    {
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        separator = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        chunk = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
    if (i < args)
    {
      R = R + 1;
      R = R + 1;
      i = i + 1;
      while (i < args)
      {
        R = R + 1;
        R = R + 1;
        i = i + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LenientFormat  {
  void execute(int template, int args)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryTemplate = 0;
    int lastIndexOfTemplate = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0p * C0)) == (((8 * template) + (8 * args)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (((template + args) + 2) + (2 * args))) || ((0 + (D0p * C0)) == (((template + args) + 2) + (2 * args))));
    if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int separator = 0;
    int i = 0;
    {
      temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
      chunk = temporaryTemplate - lastIndexOfTemplate;
      lastIndexOfTemplate = temporaryTemplate;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < template)
    {
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        separator = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        chunk = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
    if (i < args)
    {
      R = R + 1;
      R = R + 1;
      i = i + 1;
      while (i < args)
      {
        R = R + 1;
        R = R + 1;
        i = i + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ template args 2 (* 2 args)))
    (= (+ 0 (* D0p C0)) (+ template args 2 (* 2 args))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ template args 2 (* 2 args)))
    (= (+ 0 (* D0p C0)) (+ template args 2 (* 2 args))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 template)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ template args 2 (* 2 args)))
    (= (+ 0 (* D0p C0)) (+ template args 2 (* 2 args))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`)
INFO  brbo.BrboMain - Time consumption: `15.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1748-transparentAmortize-60s-mostPrecise/guava-raw-0110-1748-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m17.587s
user	0m33.280s
sys	0m4.315s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz7194734041821642159/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7194734041821642159/bin -o /tmp/qfuzz7194734041821642159/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7194734041821642159/bin
Found file /tmp/qfuzz7194734041821642159/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz7194734041821642159/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7194734041821642159/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7194734041821642159/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7194734041821642159/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7194734041821642159/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 23, exec speed = 122425 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [389.00]
2; /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [23.00]
4; /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 1; 0.00; [141.00]
9; /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 1; 0.00; [313.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 4, 160, 4, 28, 132, 63, 28, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 4, 119, 132, 4, 34, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7194734041821642159/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(149, 110, 109, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 63, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 149, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.748s
user	0m13.902s
sys	0m1.082s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(63, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(149, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
    17  |                        int sb = 0;  |         |     |     |          2  |   0  |       4  |
    19  |                         int R = 0;  |         |  0  |     |          2  |   0  |       4  |
    20  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       4  |
    21  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       4  |
    25  |                  sb = sb + string;  |         |  0  |     |          2  |   4  |       4  |
    28  |                    R = R + string;  |      4  |  4  |     |          2  |   4  |       4  |
    30  |                    int i = string;  |         |  4  |  4  |          2  |   4  |       4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [28]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    28  |  R = R + string;  |      4  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java.actual	2023-01-10 17:49:55.289764659 -0700
@@ -1,15 +1,12 @@
 abstract class PadEnd {
   void execute(int string, int minLength) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
-    int C1 = -1;
     int D0 = 0;
     int D0p = 0;
-    int D1 = 0;
-    int D1p = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * minLength) + (8 * string)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * minLength) + (8 * string)) + 8)));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < minLength) || (((0 + (D0p * C0)) + (D1p * C1)) == minLength));
+    lessPreciseBound(((0 + (D0p * C0)) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0p * C0)) == (((8 * minLength) + (8 * string)) + 8)));
+    mostPreciseBound(((0 + (D0p * C0)) < minLength) || ((0 + (D0p * C0)) == minLength));
     if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
     {
       return;
@@ -23,16 +20,14 @@
     // mostPreciseBound(R <= minLength)
     // lessPreciseBound(R <= MAX * minLength + MAX * string + MAX)
     sb = sb + string;
-    D1 = D1 + string;
+    D0 = D0 + string;
     int i = string;
     while (i < minLength)
     {
       sb = sb + 1;
-      D0 = D0 + 1;
+      R = R + 1;
       i = i + 1;
-      D0p = D0;
-      D0 = 0;
-      C0 = C0 + 1;
+      // resetPlaceHolder_1();
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.493s
user	0m8.086s
sys	0m0.887s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0p * C0)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < minLength) || ((0 + (D0p * C0)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadEnd  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0p * C0)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < minLength) || ((0 + (D0p * C0)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) minLength) (= (+ 0 (* D0p C0)) minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) minLength) (= (+ 0 (* D0p C0)) minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 string)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) minLength) (= (+ 0 (* D0p C0)) minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`)
INFO  brbo.BrboMain - Time consumption: `9.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1749-transparentAmortize-60s-mostPrecise/guava-raw-0110-1749-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.754s
user	0m21.622s
sys	0m3.499s

Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 30 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz3425604983472993419/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3425604983472993419/bin -o /tmp/qfuzz3425604983472993419/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3425604983472993419/bin
Found file /tmp/qfuzz3425604983472993419/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz3425604983472993419/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3425604983472993419/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 33 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3425604983472993419/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3425604983472993419/fuzzer-out. Timeout: 30 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3425604983472993419/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 7, exec speed = 119064 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3425604983472993419/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m35.620s
user	0m14.207s
sys	0m0.935s

root@/root/Documents/workspace/brbo2-impl$ ./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Inputs: List(4, 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 83):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
    21  |                        int sb = 0;  |         |     |     |          7  |   0  |       4  |
    23  |                         int R = 0;  |         |  0  |     |          7  |   0  |       4  |
    24  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          7  |   0  |       4  |
    25  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          7  |   0  |       4  |
    27  |                    int i = string;  |         |  0  |  4  |          7  |   0  |       4  |
    34  |                       sb = sb + 1;  |         |  0  |  4  |          7  |   1  |       4  |
    37  |                         R = R + 1;  |      1  |  1  |  4  |          7  |   1  |       4  |
    41  |                         i = i + 1;  |         |  1  |  5  |          7  |   1  |       4  |
    42  |              resetPlaceHolder_1();  |         |  1  |  5  |          7  |   1  |       4  |
    49  |                       sb = sb + 1;  |         |  1  |  5  |          7  |   2  |       4  |
    52  |                         R = R + 1;  |      1  |  2  |  5  |          7  |   2  |       4  |
    56  |                         i = i + 1;  |         |  2  |  6  |          7  |   2  |       4  |
    57  |              resetPlaceHolder_1();  |         |  2  |  6  |          7  |   2  |       4  |
    64  |                       sb = sb + 1;  |         |  2  |  6  |          7  |   3  |       4  |
    67  |                         R = R + 1;  |      1  |  3  |  6  |          7  |   3  |       4  |
    71  |                         i = i + 1;  |         |  3  |  7  |          7  |   3  |       4  |
    72  |              resetPlaceHolder_1();  |         |  3  |  7  |          7  |   3  |       4  |
    79  |                  sb = sb + string;  |         |  3  |  7  |          7  |   7  |       4  |
    82  |                    R = R + string;  |      4  |  7  |  7  |          7  |   7  |       4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [37, 52, 67, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [37, 52, 67, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [37, 52, 67, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [37, 52, 67, 82]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {37}, {52}, {67} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    37  |             R = R + 1;  |      1  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    52  |             R = R + 1;  |      1  |                         1  |
    57  |  resetPlaceHolder_1();  |         |                            |
    67  |             R = R + 1;  |      1  |                         2  |
    72  |  resetPlaceHolder_1();  |         |                            |
    82  |        R = R + string;  |      4  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {37}, {52}, {67}
GroupID(1): {82}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    37  |             R = R + 1;  |      1  |                         0  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    52  |             R = R + 1;  |      1  |                         1  |                            |
    57  |  resetPlaceHolder_1();  |         |                            |                            |
    67  |             R = R + 1;  |      1  |                         2  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    82  |        R = R + string;  |      4  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 57)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R string -> R1 = R1 + string;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java	2023-01-09 22:30:16.741426044 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java.actual	2023-01-10 17:50:49.178444893 -0700
@@ -1,7 +1,7 @@
 abstract class PadStart {
   void execute(int string, int minLength) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
     int D0 = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m6.493s
user	0m11.603s
sys	0m2.294s

Overwrite the existing decomposition
root@/root/Documents/workspace/brbo2-impl$ mv /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
Output: 
root@/root/Documents/workspace/brbo-impl$ ./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * minLength) + (8 * string)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < minLength) || (((0 + (D0p * C0)) + (D1p * C1)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + string;
    D1 = D1 + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * minLength) + (8 * string)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < minLength) || (((0 + (D0p * C0)) + (D1p * C1)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + string;
    D1 = D1 + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) minLength)
    (= (+ 0 (* D0p C0) (* D1p C1)) minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) minLength)
    (= (+ 0 (* D0p C0) (* D1p C1)) minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 string)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 minLength)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) minLength)
    (= (+ 0 (* D0p C0) (* D1p C1)) minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `15.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-1750-transparentAmortize-60s-mostPrecise/guava-raw-0110-1750-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m17.231s
user	0m44.849s
sys	0m7.449s

